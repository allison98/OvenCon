                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RH0            DATA 0xf3
0000             68   RTL1           DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              2   org 0000H
0000 020667       3      ljmp MainProgram
0003              4   
0003              5   CLK  EQU 22118400
0003              6   BAUD equ 115200
0003              7   BRG_VAL equ (0x100-(CLK/(16*BAUD)))
0003              8   REF equ 4.096       ;reference at LM4040
0003              9   
0003             10   ; These ’EQU’ must match the wiring between the microcontroller and ADC
0003             11   CE_ADC EQU P2.0
0003             12   MY_MOSI EQU P2.1
0003             13   MY_MISO EQU P2.2
0003             14   MY_SCLK EQU P2.3
0003             15   BEEPER EQU P3.7 ; placeholder pin for beeper
0003             16   
0003             17   
0003             18   SEGA equ P2.4
0003             19   SEGB equ P2.5
0003             20   SEGC equ P2.6
0003             21   SEGD equ P2.7
0003             22   SEGE equ P4.5
0003             23   SEGF equ P4.4
0003             24   SEGG equ P0.7
0003             25   CA1  equ P0.1
0003             26   CA2  equ P0.2
0003             27   CA3  equ P0.0
0003             28   
0003             29   TIMER0_RELOAD_L DATA 0xf2
0003             30   TIMER1_RELOAD_L DATA 0xf3
0003             31   TIMER0_RELOAD_H DATA 0xf4
0003             32   TIMER1_RELOAD_H DATA 0xf5
0003             33   
0003             34   TIMER0_RATE   EQU 4096             ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0003             35   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0003             36   TIMER2_RATE   EQU 1000     ; 1000Hz, for a timer tick of 1ms
0003             37   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0003             38   
0003             39   C4                        EQU 262
0003             40   D4                EQU 294
0003             41   E4                        EQU 330
0003             42   F4                        EQU 349
0003             43   G4                        EQU 392
0003             44   A4                        EQU 440
0003             45   B4                EQU 494
0003             46   
0003             47   C5                        EQU 523
0003             48   D5                EQU 587
0003             49   E5                        EQU 659
0003             50   F5                        EQU 698
0003             51   G5                        EQU 784
0003             52   A5                        EQU 880
0003             53   B5                EQU 988
0003             54   
0003             55   G4S                       EQU 415
0003             56   G4F                       EQU 370
0003             57   A4F                       EQU 415
0003             58   B4F                       EQU 466
0003             59   C5S                       EQU 554
0003             60   D5F                       EQU 554
0003             61   E5F                       EQU 622
0003             62   
0003             63   C4_reload        EQU ((65536-(CLK/(2*C4))))
0003             64   D4_reload   EQU ((65536-(CLK/(2*D4))))
0003             65   E4_reload        EQU ((65536-(CLK/(2*E4))))
0003             66   F4_reload        EQU ((65536-(CLK/(2*F4))))
0003             67   G4_reload        EQU ((65536-(CLK/(2*G4))))
0003             68   A4_reload        EQU ((65536-(CLK/(2*A4))))
0003             69   B4_reload        EQU ((65536-(CLK/(2*B4))))
0003             70   
0003             71   C5_reload        EQU ((65536-(CLK/(2*C5))))
0003             72   D5_reload   EQU ((65536-(CLK/(2*D5))))
0003             73   E5_reload        EQU ((65536-(CLK/(2*E5))))
0003             74   F5_reload        EQU ((65536-(CLK/(2*F5))))
0003             75   G5_reload        EQU ((65536-(CLK/(2*G5))))
0003             76   A5_reload        EQU ((65536-(CLK/(2*A5))))
0003             77   B5_reload        EQU ((65536-(CLK/(2*B5))))
0003             78   
0003             79   G4S_reload       EQU ((65536-(CLK/(2*G4S))))
0003             80   G4F_reload       EQU ((65536-(CLK/(2*G4F))))
0003             81   A4F_reload       EQU ((65536-(CLK/(2*A4F))))
0003             82   B4F_reload       EQU ((65536-(CLK/(2*B4F))))
0003             83   C5S_reload       EQU ((65536-(CLK/(2*C5S))))
0003             84   D5F_reload       EQU ((65536-(CLK/(2*D5F))))
0003             85   E5F_reload       EQU ((65536-(CLK/(2*E5F))))
0003             86   
0003             87   
0003             88   ; buttons
0003             89   BOOT_BUTTON   equ P4.5
0003             90   
0003             91   ; External interrupt 0 vector (not used in this code)
0003             92   org 0x0003
0003 32          93            reti
0004             94   
0004             95   ; Timer/Counter 0 overflow interrupt vector
000B             96   org 0x000B
000B 020526      97            ljmp Timer0_ISR
000E             98   
000E             99   ; External interrupt 1 vector (not used in this code)
0013            100   org 0x0013
0013 32         101            reti
0014            102   
0014            103   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B            104   org 0x001B
001B 32         105            reti
001C            106   
001C            107   ; Serial port receive/transmit interrupt vector (not used in this code)
0023            108   org 0x0023 
0023 32         109            reti
0024            110            
0024            111   ; Timer/Counter 2 overflow interrupt vector
002B            112   org 0x002B
002B 020542     113            ljmp Timer2_ISR
002E            114            
0030            115   dseg at 0x30
0030            116   ;future variables
0030            117   x:   ds 4
0034            118   y:   ds 4
0038            119   bcd: ds 5
003D            120   Result: ds 2
003F            121   coldtemp: ds 1
0040            122   hottemp:ds 4
0044            123   soaktemp: ds 1
0045            124   soaktime: ds 1
0046            125   reflowtemp: ds 1
0047            126   reflowtime: ds 1
0048            127   countererror: ds 1
0049            128   temperature:ds 4
004D            129   Count1ms:     ds 2 ; Used to determine when half second has passed 
004F            130   reflowparam: ds 1
0050            131   second: ds 1
0051            132   minute: ds 1
0052            133   temp: ds 1
0053            134   count: ds 1
0054            135   Disp1:  ds 1 
0055            136   Disp2:  ds 1
0056            137   Disp3:  ds 1
0057            138   state:  ds 1
0058            139   songstartnum: ds 1
0059            140   songendnum: ds 1
005A            141   letter: ds 1
005B            142   letter2: ds 1
005C            143   letter3: ds 1
005D            144   letter4: ds 1
005E            145   Colour:     ds 1
005F            146   
005F            147   
0000            148   BSEG
0000            149   startflag: dbit 1
0001            150   errorflag: dbit 1
0002            151   mf: dbit 1
0003            152   
002E            153   CSEG
002E            154   ; These 'equ' must match the wiring between the microcontroller and the LCD!
002E            155   LCD_RS equ P1.1
002E            156   LCD_RW equ P1.2
002E            157   LCD_E  equ P1.3
002E            158   LCD_D4 equ P3.2
002E            159   LCD_D5 equ P3.3
002E            160   LCD_D6 equ P3.4
002E            161   LCD_D7 equ P3.5
002E            162   
002E            163   BUTTON_1      equ P0.3 ;P0.5 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
002E            164   BUTTON_2      equ P0.2 ;P4.5
002E            165   BUTTON_3      equ P0.7
002E            166   STARTBUTTON      equ P0.4
002E            167   OvenButton equ P3.6
002E            168   
002E            169   
002E            170   
                172   $LIST
011F            174   
                546   $LIST
                176   $LIST
038F            178   
038F            179   
038F            180   ; constant strings  
038F 54656D70   181   Test_msg:  db 'Temp:xx.xx*C', 0
     3A78782E
     78782A43
     00
039C 312E536F   182   MenuMessage1: db '1.Soak Temp', 0   ;used when selecting parameter
     616B2054
     656D7000
03A8 322E536F   183   MenuMessage2: db '2.Soak Time', 0
     616B2054
     696D6500
03B4 332E5265   184   MenuMessage3: db '3.Reflow Temp', 0
     666C6F77
     2054656D
     7000
03C2 342E5265   185   MenuMessage4: db '4.Reflow Time', 0
     666C6F77
     2054696D
     6500
03D0 536F616B   186   MenuSoakTemp: db 'Soak Temp:', 0  ;used when changing parameter
     2054656D
     703A00
03DB 536F616B   187   MenuSoakTime: db 'Soak Time:', 0
     2054696D
     653A00
03E6 5265666C   188   MenuReflowTemp: db 'Reflow Temp:', 0
     6F772054
     656D703A
     00
03F3 5265666C   189   MenuReflowTime: db 'Reflow Time:', 0
     6F772054
     696D653A
     00
0400 5265666C   190   ReflowStateMess: db 'Reflow State    ', 0
     6F772053
     74617465
     20202020
     00
0411 536F616B   191   SoakState: db 'Soak State      ', 0
     20537461
     74652020
     20202020
     00
0422 54656D70   192   TemperatureRise: db 'Temp. Increase  ',0
     2E20496E
     63726561
     73652020
     00
0433 4F76656E   193   CoolingTemp: db 'Oven is cooling.',0
     20697320
     636F6F6C
     696E672E
     00
0444            194   
0444 352E5374   195   Song_Menu1: db '5.Start Song', 0
     61727420
     536F6E67
     00
0451 362E456E   196   Song_Menu2: db '6.End Song', 0
     6420536F
     6E6700
045C 20315252   197   Song_Message1:     db ' 1RR  2SM  3SW', 0
     20203253
     4D202033
     535700
046B 20344D4D   198   Song_Message2:     db ' 4MM  5TT  6HP', 0
     20203554
     54202036
     485000
047A 5265666C   199   PasswordMenu1:     db 'Reflow Oven Con', 0
     6F77204F
     76656E20
     436F6E00
048A 456E7465   200   PasswordMenu2:     db 'Enter Pass: ____', 0
     72205061
     73733A20
     5F5F5F5F
     00
049B 57524F4E   201   PasswordMenu3:     db 'WRONG PASSWORD', 0
     47205041
     5353574F
     524400
04AA 41434345   202   PasswordMenu4:     db 'ACCESS DENIED', 0
     53532044
     454E4945
     4400
04B8 434F5252   203   PasswordMenu5:     db 'CORRECT PASSWORD', 0
     45435420
     50415353
     574F5244
     00
04C9 41434345   204   PasswordMenu6:     db 'ACCESS GRANTED', 0
     53532047
     52414E54
     454400
04D8 312E426C   205   SetColour1: db '1.Blue  2.Green', 0
     75652020
     322E4772
     65656E00
04E8 332E5265   206   SetColour2: db '3.Red  4.Yellow', 0
     64202034
     2E59656C
     6C6F7700
04F8 3100       207   Blue:      db '1', 0
04FA 3200       208   Green:     db '2', 0
04FC 3300       209   Red:       db '3', 0
04FE 3400       210   Yellow:    db '4', 0
0500            211   
0500            212   
0500 20202020   213   Blank: db '              ',0
     20202020
     20202020
     202000
050F            214   
050F            215   ;---------------------------------;
050F            216   ; Routine to initialize the ISR   ;
050F            217   ; for timer 0                     ;
050F            218   ;---------------------------------;
050F            219   
050F            220   Timer0_Init:
050F E589       221            mov a, TMOD
0511 54F0       222            anl a, #0xf0 ; Clear the bits for timer 0
0513 4401       223            orl a, #0x01 ; Configure timer 0 as 16-timer
0515 F589       224            mov TMOD, a
0517 758CEA     225            mov TH0, #high(TIMER0_RELOAD)
051A 758AE8     226            mov TL0, #low(TIMER0_RELOAD)
051D            227            ; Set autoreload value
051D 75F4EA     228            mov TIMER0_RELOAD_H, #high(TIMER0_RELOAD)
0520 75F2E8     229            mov TIMER0_RELOAD_L, #low(TIMER0_RELOAD)
0523            230            ; Enable the timer and interrupts
0523 D2A9       231       setb ET0  ; Enable timer 0 interrupt
0525            232       ;setb TR0  ; Start timer 0
0525 22         233            ret
0526            234   
0526            235   ;---------------------------------;
0526            236   ; ISR for timer 0.  Set to execute;
0526            237   ; every 1/4096Hz to generate a    ;
0526            238   ; 2048 Hz square wave at pin P3.7 ;
0526            239   ; Used for the state change beeps ;
0526            240   ;---------------------------------;
0526            241   
0526            242   Timer0_ISR:
0526 B2B7       243            cpl BEEPER
0528 32         244            reti
0529            245     
0529            246   ;---------------------------------;
0529            247   ; Routine to initialize the ISR   ;
0529            248   ; for timer 2                     ;
0529            249   ;---------------------------------;
0529            250   Timer2_Init:
0529 75C800     251            mov T2CON, #0 ; Stop timer/counter.  Autoreload mode.
052C 75CDA9     252            mov TH2, #high(TIMER2_RELOAD)
052F 75CC9A     253            mov TL2, #low(TIMER2_RELOAD)
0532            254            ; Set the reload value
0532 75CBA9     255            mov RCAP2H, #high(TIMER2_RELOAD)
0535 75CA9A     256            mov RCAP2L, #low(TIMER2_RELOAD)
0538            257            ; Init One millisecond interrupt counter.  It is a 16-bit variable made with two 8-bit parts
0538 E4         258            clr a
0539 F54D       259            mov Count1ms+0, a
053B F54E       260            mov Count1ms+1, a
053D            261            ; Enable the timer and interrupts
053D D2AD       262       setb ET2  ; Enable timer 2 interrupt
053F D2CA       263       setb TR2  ; Enable timer 2
0541 22         264            ret
0542            265   
0542            266   ;---------------------------------;
0542            267   ; ISR for timer 2                 ;
0542            268   ;---------------------------------;
0542            269   Timer2_ISR:
0542 C2CF       270            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
0544 B2B6       271            cpl P3.6 ; To check the interrupt rate with oscilloscope. It must be precisely a 1 ms pulse.
0546            272            
0546            273            ; The two registers used in the ISR must be saved in the stack
0546 C0E0       274            push acc
0548 C0D0       275            push psw
054A            276            
054A D281       277            setb CA1
054C D282       278            setb CA2
054E D280       279            setb CA3
0550            280   
0550 E557       281            mov a, state
0552            282   state0:
0552 B4000B     283            cjne a, #0, state1
0555 E554       284            mov a, disp1
0557 1205A2     285            lcall load_segments
055A C281       286            clr CA1
055C 0557       287            inc state
055E 8020       288            sjmp state_done
0560            289   state1:
0560 B4010B     290            cjne a, #1, state2
0563 E555       291            mov a, disp2
0565 1205A2     292            lcall load_segments
0568 C282       293            clr CA2
056A 0557       294            inc state
056C 8012       295            sjmp state_done
056E            296   state2:
056E B4020C     297            cjne a, #2, state_reset
0571 E556       298            mov a, disp3
0573 1205A2     299            lcall load_segments
0576 C280       300            clr CA3
0578 755700     301            mov state, #0
057B 8003       302            sjmp state_done
057D            303   state_reset:
057D 755700     304            mov state, #0
0580            305   state_done:
0580            306            ; Increment the 16-bit one mili second counter
0580 054D       307            inc Count1ms+0    ; Increment the low 8-bits first
0582 E54D       308            mov a, Count1ms+0 ; If the low 8-bits overflow, then increment high 8-bits
0584 7002       309            jnz Inc_Done
0586 054E       310            inc Count1ms+1
0588            311   
0588            312     Inc_Done:
0588            313            ; Check if half second has passed
0588 E54D       314            mov a, Count1ms+0
058A B4F410     315            cjne a, #low(500), Timer2_ISR_done ; Warning: this instruction changes the carry flag!
058D E54E       316            mov a, Count1ms+1
058F B4010B     317            cjne a, #high(500), Timer2_ISR_done
0592            318            
0592            319       ; cpl TR0 ; Enable/disable timer/counter 0. This line creates a beep-silence-beep-silence sound.
0592            320       ; where is halfsecondflag?                                   
0592            321                                            ; Reset to zero the milli-seconds counter, it is a 16-bit variable
0592 E4         322            clr a
0593 F54D       323            mov Count1ms+0, a
0595 F54E       324            mov Count1ms+1, a
0597            325     
0597 E550       326            mov a, second   ; Increment the BCD counter
0599            327   
0599 2401       328            add a, #0x01 ;THIS IS ADDING SECONDS
059B            329   
059B            330   test2:
059B            331   ;        da a ; Decimal adjust instruction.  Check datasheet for more details!
059B F550       332            mov second, a
059D            333            
059D            334   Timer2_ISR_done:
059D D0D0       335            pop psw
059F D0E0       336            pop acc
05A1 32         337            reti
05A2            338   
05A2            339   load_segments:
05A2 A2E0       340            mov c, acc.0
05A4 92A4       341            mov SEGA, c
05A6 A2E1       342            mov c, acc.1
05A8 92A5       343            mov SEGB, c
05AA A2E2       344            mov c, acc.2
05AC 92A6       345            mov SEGC, c
05AE A2E3       346            mov c, acc.3
05B0 92A7       347            mov SEGD, c
05B2 A2E4       348            mov c, acc.4
05B4 92C5       349            mov SEGE, c
05B6 A2E5       350            mov c, acc.5
05B8 92C4       351            mov SEGF, c
05BA A2E6       352            mov c, acc.6
05BC 9287       353            mov SEGG, c
05BE A2E7       354            mov c, acc.7
05C0            355            ;mov SEGP, c
05C0 22         356            ret  
05C1            357   ;---------------------------------;
05C1            358   ; initialize the slave                 ;
05C1            359   ;---------------------------------;
05C1            360   
05C1            361   INIT_SPI:
05C1 D2A2       362    setb MY_MISO ; Make MISO an input pin
05C3 C2A3       363    clr MY_SCLK ; For mode (0,0) SCLK is zero
05C5 22         364    ret
05C6            365   
05C6            366   ;---------------------------------;
05C6            367   ; receive and send data                          ;
05C6            368   ;---------------------------------;
05C6            369   
05C6            370   DO_SPI_G:
05C6 C0E0       371             push acc
05C8 7900       372             mov R1, #0 ; Received byte stored in R1
05CA 7A08       373             mov R2, #8 ; Loop counter (8-bits)
05CC            374   DO_SPI_G_LOOP:
05CC E8         375             mov a, R0 ; Byte to write is in R0
05CD 33         376             rlc a ; Carry flag has bit to write
05CE F8         377             mov R0, a
05CF 92A1       378             mov MY_MOSI, c
05D1 D2A3       379             setb MY_SCLK ; Transmit
05D3 A2A2       380             mov c, MY_MISO ; Read received bit
05D5 E9         381             mov a, R1 ; Save received bit in R1
05D6 33         382             rlc a
05D7 F9         383             mov R1, a
05D8 C2A3       384             clr MY_SCLK
05DA DAF0       385             djnz R2, DO_SPI_G_LOOP
05DC D0E0       386             pop acc
05DE 22         387             ret
05DF            388   
05DF            389   ; Send a character using the serial port
05DF            390   putchar1:
05DF 3099FD     391       jnb TI, putchar1
05E2 C299       392       clr TI
05E4 F599       393       mov SBUF, a
05E6 22         394       ret
05E7            395   
05E7            396   ; Send a constant-zero-terminated string using the serial port
05E7            397   SendString:
05E7 E4         398       clr A
05E8 93         399       movc A, @A+DPTR
05E9 6006       400       jz SendStringDone
05EB 1205DF     401       lcall putchar1
05EE A3         402       inc DPTR
05EF 80F6       403       sjmp SendString
05F1            404   SendStringDone:
05F1 22         405       ret
05F2            406   
05F2            407   Display_10_digit_BCD:
05F2 C0E0       408            push acc
05F4 7406       408            mov a, #6
05F6 14         408            dec a
05F7 1200C1     408            lcall ?Set_Cursor_1 ; Select column and row
05FA D0E0       408            pop acc
05FC C000       409            push ar0
05FE A83C       409            mov r0, bcd+4
0600 1200C6     409            lcall ?Display_BCD
0603 D000       409            pop ar0
0605 C000       410            push ar0
0607 A83B       410            mov r0, bcd+3
0609 1200C6     410            lcall ?Display_BCD
060C D000       410            pop ar0
060E C000       411            push ar0
0610 A83A       411            mov r0, bcd+2
0612 1200C6     411            lcall ?Display_BCD
0615 D000       411            pop ar0
0617 C000       412            push ar0
0619 A839       412            mov r0, bcd+1
061B 1200C6     412            lcall ?Display_BCD
061E D000       412            pop ar0
0620 C000       413            push ar0
0622 A838       413            mov r0, bcd+0
0624 1200C6     413            lcall ?Display_BCD
0627 D000       413            pop ar0
0629 22         414            ret
062A            415            
062A            416   ;---------------------------------;
062A            417   ; initialize the serial ports     ;
062A            418   ;---------------------------------;
062A            419   InitSerialPort:
062A            420       ; Since the reset button bounces, we need to wait a bit before
062A            421       ; sending messages, otherwise we risk displaying gibberish!
062A 79DE       422       mov R1, #222
062C 78A6       423       mov R0, #166
062E D8FE       424       djnz R0, $   ; 3 cycles->3*45.21123ns*166=22.51519us
0630 D9FA       425       djnz R1, $-4 ; 22.51519us*222=4.998ms
0632            426       ; Now we can proceed with the configuration
0632 438780     427            orl     PCON,#0x80
0635 759852     428            mov     SCON,#0x52
0638 759B00     429            mov     BDRCON,#0x00
063B 759AF4     430            mov     BRL,#BRG_VAL
063E 759B1E     431            mov     BDRCON,#0x1E ; BDRCON=BRR|TBCK|RBCK|SPD;
0641 22         432       ret
0642            433    
0642            434   ; CODE FOR DISPLAYING 7SEG 
0642            435     display7seg:
0642            436                    ; ones digit disp 2
0642 90065D     437            mov dptr, #HEX_7SEG
0645 E538       438            mov a, bcd+0
0647 540F       439            anl a, #0x0f
0649 93         440            movc a, @a+dptr
064A F555       441            mov disp2, a
064C            442            
064C            443            ;tens digit disp3
064C E538       444            mov a, bcd+0
064E C4         445            swap a
064F 540F       446            anl a, #0x0f
0651 93         447            movc a, @a+dptr
0652 F556       448            mov disp3, a
0654            449            
0654            450            ;hundreds digit disp1
0654 E4         451            clr a
0655            452            
0655 E539       453            mov a, bcd+1
0657            454            ;swap a
0657 540F       455            anl a, #0x0f
0659 93         456            movc a, @a+dptr
065A            457            
065A F554       458            mov disp1, a
065C            459            
065C 22         460            ret
065D            461    ;---------------------------------;
065D            462   ; MAIN PROGRAM                                                         ;
065D            463   ;---------------------------------;  
065D            464   
065D C0F9A4B0   465   HEX_7SEG: DB 0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90
     999282F8
     8090
0667            466   
0667            467   MainProgram:
0667 75817F     468            mov sp, #07FH ; Initialize the stack pointer
066A            469            ; Configure P0 in bidirectional mode
066A 75E600     470       mov P0M0, #0
066D 75E700     471       mov P0M1, #0
0670 758E11     472       mov auxr, #00010001B
0673 D2AF       473       setb EA 
0675 120088     474       lcall LCD_4BIT
0678 754400     475       mov soaktemp, #0x0
067B            476       
067B 754500     477       mov soaktime, #0x0
067E            478   
067E 754600     479       mov reflowtemp, #0x0
0681            480      
0681 754700     481       mov reflowtime, #0x0
0684            482   
0684 755000     483       mov second, #0
0687            484      
0687 755802     485            mov songstartnum, #0x2
068A 755900     486       mov songendnum, #0x0
068D 755A41     487       mov letter, #'A'
0690 755B41     488       mov letter2, #'A'
0693 755C41     489       mov letter3, #'A'
0696 755D41     490       mov letter4, #'A'
0699            491       
0699            492      ; mov countererror, #0        ; to check if the thermocouple is in the oven
0699            493                    
0699            494       ;initial message 
0699            495      ; Set_Cursor(1, 1)
0699            496      ; Send_Constant_String(#Test_msg)
0699            497      ; Set_Cursor(1,11)
0699            498      ; WriteData(#223) ; print the degree sign   
0699 755300     499       mov count, #0
069C            500       
069C 12062A     501       lcall InitSerialPort
069F 1205C1     502                    lcall INIT_SPI
06A2 12050F     503                    lcall Timer0_Init
06A5            504     ;  lcall Timer2_Init
06A5 12085E     505      lcall TurnOvenOff
06A8            506     ; lcall TurnOvenOn
06A8 021FB6     507            ljmp Password1
06AB            508            ;ljmp Menu_select1;ljmp Password1 ;; selecting and setting profiles
06AB            509       
06AB            510   FOREVER: ;this will be how the oven is being controlled ; jump here once start button is pressed!!!
06AB            511   ;------state 1------;
06AB C0E0       512            push acc
06AD 7401       512            mov a, #1
06AF 14         512            dec a
06B0 1200C1     512            lcall ?Set_Cursor_1 ; Select column and row
06B3 D0E0       512            pop acc
06B5 C083       513            push dph
06B7 C082       513            push dpl
06B9 C0E0       513            push acc
06BB 900422     513            mov dptr, #TemperatureRise
06BE 1200B4     513            lcall ?Send_Constant_String
06C1 D0E0       513            pop acc
06C3 D082       513            pop dpl
06C5 D083       513            pop dph
06C7 12084F     514    lcall checkstop       ;checks if stop button is pressed. If so, turns off oven and goes back to menu
06CA 1208DB     515      lcall checkerror      ;if error, terminate program and return
06CD 120844     516      lcall Readingtemperatures  ;calculates temperature of oven using thermocouple junctions
06D0            517      
06D0 120864     518      lcall DisplayingLCD
06D3 120642     519      lcall display7seg
06D6            520      
06D6            521       ; temp = soak temp, so going to soak time state 
06D6            522    
06D6 C3         523     clr c
06D7 E544       524     mov a, soaktemp
06D9 953F       525     subb a, coldtemp
06DB 50CE       526     jnc FOREVER
06DD 120A65     527      lcall State_change_BEEPER
06E0 12085E     528     lcall TurnOvenOff
06E3            529     
06E3 C2CA       530      clr tr2                       ; restarting timer 2 to keep track of the time lasped since we reached soaktemp
06E5 7400       531      mov a, #0x0
06E7 F550       532      mov second, a
06E9 D2CA       533      setb tr2
06EB            534      
06EB            535     ; after we reached the soak temp stay there for __ seconds
06EB            536     ;-----state 2 ------;
06EB            537   soaktempchecked:
06EB C0E0       538            push acc
06ED 7401       538            mov a, #1
06EF 14         538            dec a
06F0 1200C1     538            lcall ?Set_Cursor_1 ; Select column and row
06F3 D0E0       538            pop acc
06F5 C083       539            push dph
06F7 C082       539            push dpl
06F9 C0E0       539            push acc
06FB 900411     539            mov dptr, #SoakState
06FE 1200B4     539            lcall ?Send_Constant_String
0701 D0E0       539            pop acc
0703 D082       539            pop dpl
0705 D083       539            pop dph  
0707 12084F     540            lcall checkstop         
070A 120844     541      lcall Readingtemperatures
070D 120864     542      lcall DisplayingLCD
0710 120642     543      lcall display7seg
0713            544      
0713 1207C7     545     lcall keepingsoaktempsame ; boundary temp
0716 1207D7     546     lcall keepingsoaktempsame1
0719            547     
0719 120812     548     lcall checksoaktime ; if soak time is up go to next state
071C            549    
071C 80CD       550     sjmp soaktempchecked
071E            551     
071E            552   ; ---- state 3 ---- ; increaseing to reflow temp
071E            553   increasereflowtemp: 
071E 12084F     554     lcall checkstop
0721 C0E0       555            push acc
0723 7401       555            mov a, #1
0725 14         555            dec a
0726 1200C1     555            lcall ?Set_Cursor_1 ; Select column and row
0729 D0E0       555            pop acc
072B C083       556            push dph
072D C082       556            push dpl
072F C0E0       556            push acc
0731 900422     556            mov dptr, #TemperatureRise
0734 1200B4     556            lcall ?Send_Constant_String
0737 D0E0       556            pop acc
0739 D082       556            pop dpl
073B D083       556            pop dph 
073D 120844     557     lcall Readingtemperatures
0740 120864     558      lcall DisplayingLCD
0743 120642     559       lcall display7seg
0746            560     
0746 C3         561     clr c
0747 E546       562     mov a, reflowtemp
0749 953F       563     subb a, coldtemp
074B 50D1       564     jnc increasereflowtemp
074D            565      
074D 12085E     566     lcall TurnOvenOff  
0750            567      
0750            568      
0750 120A65     569     lcall State_change_BEEPER
0753 C2CA       570     clr tr2
0755 7400       571     mov a, #0
0757 F550       572     mov second, a
0759 D2CA       573     setb tr2
075B            574   
075B            575     ;----state 4 ---;
075B            576    reflowstate:
075B 12084F     577     lcall checkstop
075E 120844     578     lcall Readingtemperatures
0761 120864     579      lcall DisplayingLCD
0764 120642     580       lcall display7seg
0767 C0E0       581            push acc
0769 7401       581            mov a, #1
076B 14         581            dec a
076C 1200C1     581            lcall ?Set_Cursor_1 ; Select column and row
076F D0E0       581            pop acc
0771 C083       582            push dph
0773 C082       582            push dpl
0775 C0E0       582            push acc
0777 900400     582            mov dptr, #ReflowStateMess
077A 1200B4     582            lcall ?Send_Constant_String
077D D0E0       582            pop acc
077F D082       582            pop dpl
0781 D083       582            pop dph 
0783 1207F1     583     lcall keepingreflowtempsame
0786 120801     584     lcall keepingreflowtempsame1
0789 12082B     585     lcall checkreflowtime
078C 80CD       586     sjmp reflowstate
078E            587     
078E            588    ;------- state5-----;
078E            589    cooling:
078E C0E0       590            push acc
0790 7401       590            mov a, #1
0792 14         590            dec a
0793 1200C1     590            lcall ?Set_Cursor_1 ; Select column and row
0796 D0E0       590            pop acc
0798 C083       591            push dph
079A C082       591            push dpl
079C C0E0       591            push acc
079E 900433     591            mov dptr, #CoolingTemp
07A1 1200B4     591            lcall ?Send_Constant_String
07A4 D0E0       591            pop acc
07A6 D082       591            pop dpl
07A8 D083       591            pop dph 
07AA 120844     592      lcall Readingtemperatures
07AD 120864     593      lcall DisplayingLCD
07B0 120642     594      lcall display7seg
07B3 1207BC     595      lcall waitforcooling
07B6 1219BD     596      lcall SMEndSongPlay
07B9            597    
07B9            598    
07B9 020ADB     599    ljmp Menu_select1
07BC            600     
07BC            601   ;---------------------------------;
07BC            602   ; functions                                                                                  ;
07BC            603   ;---------------------------------; 
07BC            604   
07BC            605   waitforcooling:
07BC            606   
07BC            607   
07BC C3         608     clr c
07BD 743C       609     mov a, #60
07BF 953F       610     subb a, coldtemp
07C1 5003       611     jnc cooled
07C3 02078E     612     ljmp cooling
07C6            613     
07C6            614     
07C6            615   ;        load_X(coldtemp)
07C6            616   ;  load_Y(60)
07C6            617   ;  lcall x_gteq_y   ; compare if temp >= 60 
07C6            618   ;  jnb mf, cooled
07C6            619   ;  ljmp cooling
07C6            620     
07C6            621    
07C6            622   cooled:
07C6 22         623            ret
07C7            624   
07C7            625   ; *********** STATE 2 **********
07C7            626   ; After reaching the soak temperature we stay at that temp 
07C7            627   ; for 60 to 120 seconds
07C7            628   
07C7            629   keepingsoaktempsame:
07C7 E544       630     mov a, soaktemp
07C9 2401       631     add a, #1
07CB F530       632     mov x, a
07CD            633      
07CD C3         634     clr c
07CE E530       635     mov a, x
07D0 953F       636     subb a, coldtemp
07D2 5014       637     jnc soaktempisokay
07D4 0207E9     638     ljmp soaktemptoohigh
07D7            639   
07D7            640     ;load_Y(coldtemp)
07D7            641     ;lcall x_gteq_y   ; compare if temp <= soaktemp + 10
07D7            642    ; jnb mf, soaktemptoohigh; if mf!=1 then keep checking
07D7            643    
07D7            644    keepingsoaktempsame1:
07D7            645     ; temp>= soaktemp-10
07D7            646    ; load_Y(5)
07D7            647    ; load_X(soaktemp)
07D7            648    ; lcall sub32   
07D7 E544       649     mov a, soaktemp
07D9 C3         650     clr c
07DA 9401       651     subb a, #1
07DC F530       652     mov x, a
07DE            653     
07DE C3         654     clr c
07DF E53F       655     mov a, coldtemp
07E1 9530       656     subb a, x
07E3 5003       657     jnc soaktempisokay
07E5 0207ED     658     ljmp soaktemptoolow
07E8            659     
07E8            660      
07E8            661     
07E8            662   soaktempisokay:
07E8 22         663            ret
07E9            664     
07E9            665   soaktemptoohigh: 
07E9 12085E     666     lcall TurnOvenOff
07EC 22         667     ret
07ED            668     
07ED            669   soaktemptoolow:
07ED 120861     670            lcall TurnOvenOn
07F0 22         671     ret
07F1            672     
07F1            673    keepingreflowtempsame:
07F1 E546       674     mov a, reflowtemp
07F3 2401       675     add a, #1
07F5 F530       676     mov x, a
07F7            677      
07F7 C3         678     clr c
07F8 E530       679     mov a, x
07FA 953F       680     subb a, coldtemp
07FC 50EA       681     jnc soaktempisokay
07FE 0207E9     682     ljmp soaktemptoohigh
0801            683   
0801            684     ;load_Y(coldtemp)
0801            685     ;lcall x_gteq_y   ; compare if temp <= soaktemp + 10
0801            686    ; jnb mf, soaktemptoohigh; if mf!=1 then keep checking
0801            687    
0801            688    keepingreflowtempsame1:
0801            689     ; temp>= soaktemp-10
0801            690    ; load_Y(5)
0801            691    ; load_X(soaktemp)
0801            692    ; lcall sub32   
0801 E546       693     mov a, reflowtemp
0803 C3         694     clr c
0804 9401       695     subb a, #1
0806 F530       696     mov x, a
0808            697     
0808 C3         698     clr c
0809 E53F       699     mov a, coldtemp
080B 9530       700     subb a, x
080D 50D9       701     jnc soaktempisokay
080F 0207ED     702     ljmp soaktemptoolow
0812            703   
0812            704   
0812            705   checksoaktime:
0812 C3         706     clr c
0813 E545       707     mov a, soaktime
0815 9550       708     subb a, second
0817 5011       709     jnc soaknotdone
0819 120861     710     lcall TurnOvenOn
081C C2CA       711     clr tr2
081E 7400       712     mov a, #0
0820 F550       713     mov second, a
0822 D2CA       714     setb tr2
0824 120A65     715      lcall State_change_BEEPER
0827 02071E     716     ljmp increasereflowtemp
082A            717   soaknotdone:
082A 22         718            ret 
082B            719     
082B            720   checkreflowtime:
082B C3         721     clr c
082C E547       722     mov a, reflowtime
082E 9550       723     subb a, second
0830 5011       724     jnc reflownotdone
0832 12085E     725     lcall TurnOvenOff
0835 C2CA       726     clr tr2
0837 7400       727     mov a, #0
0839 F550       728     mov second, a
083B D2CA       729     setb tr2
083D 120A7F     730     lcall Open_oven_toaster_BEEPER
0840 02078E     731     ljmp cooling
0843            732     
0843            733   reflownotdone:
0843 22         734            ret
0844            735   
0844            736   ; reading the thermocouple junction values 
0844            737   Readingtemperatures:
0844            738     ;lcall readingcoldjunction ;answer in x is saved in variable called 'coldtemp'
0844 12098A     739     lcall readinghotjunction
0847            740     
0847            741   
0847 E530       742     mov a, x
0849 F53F       743     mov coldtemp, a
084B 22         744    ret
084C            745    ; mov a, x
084C            746    ; mov coldtemp, a ;final temperature is in the temperature variable
084C            747    ; ret
084C            748   
084C            749   ; checking if the temperture at the hot end is equal to soak temp yet
084C            750   
084C            751   
084C            752   Jump_to_FOREVER:
084C 0206AB     753            ljmp FOREVER
084F            754   
084F            755   ; checking if the temperture at the hot end is equal to reflow temp yet
084F            756   
084F            757   
084F            758    ;stop the process at any time  
084F            759   checkstop:                     ; stop the reflow process
084F 208405     760            jb STARTBUTTON, return
0852 3084FD     761            jnb STARTBUTTON, $
0855 8001       762            sjmp stop
0857            763   return:
0857 22         764     ret
0858            765   stop:
0858 12085E     766            lcall TurnOvenOff
085B 020ADB     767       ljmp menu_select1
085E            768   
085E            769     
085E            770   ;---------------------------------- ;
085E            771   ; SSR Box communicating with the           ;
085E            772   ; Microcontroller                                                                        ;
085E            773   ;(1) uses OvenButton to communicate ; 
085E            774     ;with the transistor to turn the       ;
085E            775     ;oven or off                                                                                   ;
085E            776   ;(2)                                                                                                                             ;
085E            777   ;                                                                                                                                                ;
085E            778   ;                                                                                                                                                ;
085E            779   ;-----------------------------------;
085E            780            
085E            781   TurnOvenOff:
085E C2B6       782            clr OvenButton  
0860 22         783     ret
0861            784   TurnOvenOn:
0861 D2B6       785            setb OvenButton
0863 22         786     ret
0864            787   
0864            788   DisplayingLCD:
0864            789      
0864 855030     790            mov x, second
0867 12011F     791            lcall hex2bcd
086A C0E0       792            push acc
086C 7401       792            mov a, #1
086E 14         792            dec a
086F 1200BF     792            lcall ?Set_Cursor_2 ; Select column and row
0872 D0E0       792            pop acc
0874            792   
0874 C000       793            push ar0
0876 A839       793            mov r0, bcd+1
0878 1200C6     793            lcall ?Display_BCD
087B D000       793            pop ar0
087D C0E0       794            push acc
087F 7403       794            mov a, #3
0881 14         794            dec a
0882 1200BF     794            lcall ?Set_Cursor_2 ; Select column and row
0885 D0E0       794            pop acc
0887 C000       795            push ar0
0889 A838       795            mov r0, bcd
088B 1200C6     795            lcall ?Display_BCD
088E D000       795            pop ar0
0890            796            
0890            797            
0890 853F30     798            mov x, coldtemp         
0893 12011F     799            lcall hex2bcd   
0896 C0E0       800            push acc
0898 740A       800            mov a, #10
089A 14         800            dec a
089B 1200BF     800            lcall ?Set_Cursor_2 ; Select column and row
089E D0E0       800            pop acc
08A0 C000       801            push ar0
08A2 A839       801            mov r0, bcd+1
08A4 1200C6     801            lcall ?Display_BCD
08A7 D000       801            pop ar0
08A9 C0E0       802            push acc
08AB 740C       802            mov a, #12
08AD 14         802            dec a
08AE 1200BF     802            lcall ?Set_Cursor_2 ; Select column and row
08B1 D0E0       802            pop acc
08B3 C000       803            push ar0
08B5 A838       803            mov r0, bcd
08B7 1200C6     803            lcall ?Display_BCD
08BA D000       803            pop ar0
08BC            804      
08BC            805                            
08BC C0E0       806            push acc
08BE 740F       806            mov a, #15
08C0 14         806            dec a
08C1 1200BF     806            lcall ?Set_Cursor_2 ; Select column and row
08C4 D0E0       806            pop acc
08C6 74DF       807            mov a, #0xDF
08C8 12007E     807            lcall ?WriteData
08CB C0E0       808            push acc
08CD 7410       808            mov a, #16
08CF 14         808            dec a
08D0 1200BF     808            lcall ?Set_Cursor_2 ; Select column and row
08D3 D0E0       808            pop acc
08D5 7443       809            mov a, #'C'
08D7 12007E     809            lcall ?WriteData
08DA            810       
08DA 22         811       ret
08DB            812       
08DB            813       
08DB            814   
08DB            815   
08DB            816   
08DB            817   ;As a safety measure, the reflow process must be aborted if the oven doesn’t reach at least 50oC in the first 60 seconds of operation
08DB            818   checkerror: 
08DB C0E0       819            push acc
08DD C0D0       820     push psw
08DF            821     
08DF            822     
08DF C3         823     clr c
08E0 7460       824     mov a, #0x60
08E2 9550       825     subb a, second
08E4 500E       826     jnc noerror
08E6            827   
08E6            828     
08E6 7432       829     mov a, #50
08E8 953F       830     subb a, coldtemp
08EA 5002       831     jnc error
08EC 8006       832     sjmp noerror
08EE            833     error:
08EE 12085E     834     lcall TurnOvenOff
08F1 020ADB     835     ljmp Menu_Select1
08F4            836     
08F4            837   
08F4            838   noerror:
08F4 D0D0       839     pop psw
08F6 D0E0       840     pop acc 
08F8 22         841     ret
08F9            842            
08F9            843   ;------------------------------;
08F9            844   ; Temperature Reader From Sam     ;
08F9            845   ;------------------------------;
08F9            846            
08F9            847   readingcoldjunction: ;read the cold junction from the adc
08F9            848   ;reading the adc
08F9 C0E0       849            push acc
08FB C0D0       850       push psw
08FD            851     
08FD C2A0       852            clr CE_ADC 
08FF 7801       853            mov R0, #00000001B ; Start bit:1 
0901 1205C6     854            lcall DO_SPI_G
0904 7880       855            mov R0, #10000000B ; Single ended, read channel 0 
0906 1205C6     856            lcall DO_SPI_G 
0909 E9         857            mov a, R1          ; R1 contains bits 8 and 9 
090A 5403       858            anl a, #00000011B  ; We need only the two least significant bits 
090C F53E       859            mov Result+1, a    ; Save result high.
090E 7855       860            mov R0, #55H ; It doesn't matter what we transmit... 
0910 1205C6     861            lcall DO_SPI_G 
0913 893D       862            mov Result, R1     ; R1 contains bits 0 to 7.  Save result low. 
0915 D2A0       863            setb CE_ADC 
0917            864            ;wait for 1 second 
0917 C002       865            push AR2
0919 7AFA       865            mov R2, #250
091B 120039     865            lcall ?Wait_Milli_Seconds
091E D002       865            pop AR2
0920 C002       866            push AR2
0922 7AFA       866            mov R2, #250
0924 120039     866            lcall ?Wait_Milli_Seconds
0927 D002       866            pop AR2
0929            867     
0929 120935     868            lcall Calculate_Temp_in_C 
092C E530       869       mov a, x
092E F53F       870       mov coldtemp, a
0930            871     
0930 D0D0       872              pop psw
0932 D0E0       873              pop acc
0934 22         874              ret   
0935            875               
0935            876   
0935            877   ;Trying to transfer the binary value in ADC into BCD and then into 
0935            878   ;ASCII to show in putty
0935            879   Calculate_Temp_in_C:     
0935 E4         880            clr a 
0936 753000     881            mov x+0, #low (0 % 0x10000) 
0939 753100     881            mov x+1, #high(0 % 0x10000) 
093C 753200     881            mov x+2, #low (0 / 0x10000) 
093F 753300     881            mov x+3, #high(0 / 0x10000)     ; 
0942 753400     882            mov y+0, #low (0 % 0x10000) 
0945 753500     882            mov y+1, #high(0 % 0x10000) 
0948 753600     882            mov y+2, #low (0 / 0x10000) 
094B 753700     882            mov y+3, #high(0 / 0x10000) 
094E            883            ; load the result into X 
094E E53D       884            mov a, Result+0
0950 F530       885            mov X, a
0952 E53E       886            mov a, Result+1
0954 F531       887            mov X+1, a
0956 75349A     888            mov y+0, #low (410 % 0x10000) 
0959 753501     888            mov y+1, #high(410 % 0x10000) 
095C 753600     888            mov y+2, #low (410 / 0x10000) 
095F 753700     888            mov y+3, #high(410 / 0x10000) 
0962 120299     889            lcall mul32;
0965 7534FF     890            mov y+0, #low (1023 % 0x10000) 
0968 753503     890            mov y+1, #high(1023 % 0x10000) 
096B 753600     890            mov y+2, #low (1023 / 0x10000) 
096E 753700     890            mov y+3, #high(1023 / 0x10000) 
0971 120326     891            lcall div32;  
0974            892            ;calculte temperature 
0974 753411     893            mov y+0, #low (273 % 0x10000) 
0977 753501     893            mov y+1, #high(273 % 0x10000) 
097A 753600     893            mov y+2, #low (273 / 0x10000) 
097D 753700     893            mov y+3, #high(273 / 0x10000) 
0980 853052     894            mov temp, X
0983 120205     895            lcall sub32
0986 12011F     896            lcall hex2bcd ; converts binary in x to BCD in BCD
0989            897            ;Set_Cursor(2, 13)
0989            898            ;Display_BCD(bcd)
0989            899   ;        lcall Display_Temp_Putty
0989 22         900            ret
098A            901   
098A            902   readinghotjunction: ;read the hot junction from the adc from oven and thermocouple wires
098A            903   ;reading the adc
098A C0E0       904            push acc
098C C0D0       905     push psw
098E            906     
098E C2A0       907            clr CE_ADC 
0990 7801       908            mov R0, #00000001B ; Start bit:1 
0992 1205C6     909            lcall DO_SPI_G
0995 7890       910            mov R0, #10010000B ; Single ended, read channel 1 
0997 1205C6     911            lcall DO_SPI_G 
099A E9         912            mov a, R1          ; R1 contains bits 8 and 9 
099B 5403       913            anl a, #00000011B  ; We need only the two least significant bits 
099D F53E       914            mov Result+1, a    ; Save result high.
099F 7855       915            mov R0, #55H ; It doesn't matter what we transmit... 
09A1 1205C6     916            lcall DO_SPI_G 
09A4 893D       917            mov Result, R1     ; R1 contains bits 0 to 7.  Save result low. 
09A6 D2A0       918            setb CE_ADC 
09A8            919            ;wait for 1 second 
09A8 C002       920            push AR2
09AA 7AFA       920            mov R2, #250
09AC 120039     920            lcall ?Wait_Milli_Seconds
09AF D002       920            pop AR2
09B1 C002       921            push AR2
09B3 7AFA       921            mov R2, #250
09B5 120039     921            lcall ?Wait_Milli_Seconds
09B8 D002       921            pop AR2
09BA            922            
09BA 753000     923            mov x+0, #low (0 % 0x10000) 
09BD 753100     923            mov x+1, #high(0 % 0x10000) 
09C0 753200     923            mov x+2, #low (0 / 0x10000) 
09C3 753300     923            mov x+3, #high(0 / 0x10000) 
09C6            924   
09C6 E53D       925            mov a,Result
09C8 F530       926            mov x,a
09CA E53E       927            mov a,Result+1
09CC F531       928            mov x+1,a
09CE            929            
09CE 12011F     930            lcall hex2bcd
09D1            931                            
09D1            932     
09D1 1209DD     933            lcall Calculate_hot 
09D4 E530       934       mov a, x
09D6 F540       935       mov hottemp, a
09D8            936     
09D8 D0D0       937              pop psw
09DA D0E0       938              pop acc
09DC 22         939              ret   
09DD            940   
09DD            941   Calculate_hot:
09DD C0E0       942   push acc
09DF C0D0       943            push psw
09E1            944            ; Vout calculations
09E1 853D30     945            mov x, Result
09E4 853E31     946            mov x+1, Result+1
09E7 753200     947            mov x+2, #0
09EA 753300     948            mov x+3, #0
09ED            949            
09ED 75341D     950            mov y+0, #low (29 % 0x10000) 
09F0 753500     950            mov y+1, #high(29 % 0x10000) 
09F3 753600     950            mov y+2, #low (29 / 0x10000) 
09F6 753700     950            mov y+3, #high(29 / 0x10000) 
09F9 120299     951            lcall mul32
09FC 753466     952            mov y+0, #low (2150 % 0x10000) 
09FF 753508     952            mov y+1, #high(2150 % 0x10000) 
0A02 753600     952            mov y+2, #low (2150 / 0x10000) 
0A05 753700     952            mov y+3, #high(2150 / 0x10000) 
0A08 1201E4     953            lcall add32
0A0B 753464     954            mov y+0, #low (100 % 0x10000) 
0A0E 753500     954            mov y+1, #high(100 % 0x10000) 
0A11 753600     954            mov y+2, #low (100 / 0x10000) 
0A14 753700     954            mov y+3, #high(100 / 0x10000) 
0A17 120326     955            lcall div32
0A1A            956       
0A1A 12011F     957            lcall hex2bcd
0A1D E530       958            mov a, x
0A1F D0D0       959                    pop psw 
0A21 D0E0       960            pop acc
0A23 22         961            ret
0A24            962                    
0A24            963   ; Display Temperature in Putty!
0A24            964   Display_Temp_Putty:
0A24 C000       965            push ar0
0A26 A839       965            mov r0, bcd+1
0A28 1200E4     965            lcall ?Send_BCD
0A2B D000       965            pop ar0
0A2D C000       966            push ar0
0A2F A838       966            mov r0, bcd
0A31 1200E4     966            lcall ?Send_BCD
0A34 D000       966            pop ar0
0A36 7420       967            mov a, #' '
0A38 1205DF     968            lcall putchar1
0A3B 122472     969            lcall PrintColour
0A3E 740D       970            mov a, #'\r'
0A40 1205DF     971            lcall putchar1
0A43 740A       972            mov a, #'\n'
0A45 1205DF     973            lcall putchar1
0A48 22         974            ret     
0A49            975   ;beeper function to indicate reflow process has started
0A49            976   Reflow_start_BEEPER:
0A49 121BEC     977    lcall ToneReset
0A4C D28C       978    setb tr0
0A4E B28C       979    cpl tr0
0A50 C002       980            push AR2
0A52 7AFA       980            mov R2, #250
0A54 120039     980            lcall ?Wait_Milli_Seconds
0A57 D002       980            pop AR2
0A59 C002       981            push AR2
0A5B 7AFA       981            mov R2, #250
0A5D 120039     981            lcall ?Wait_Milli_Seconds
0A60 D002       981            pop AR2
0A62 C28C       982    clr tr0
0A64 22         983    ret
0A65            984    
0A65            985   State_change_BEEPER:
0A65 121BEC     986    lcall ToneReset
0A68 D28C       987    setb tr0
0A6A C002       988            push AR2
0A6C 7AFA       988            mov R2, #250
0A6E 120039     988            lcall ?Wait_Milli_Seconds
0A71 D002       988            pop AR2
0A73 C002       989            push AR2
0A75 7AFA       989            mov R2, #250
0A77 120039     989            lcall ?Wait_Milli_Seconds
0A7A D002       989            pop AR2
0A7C C28C       990    clr tr0
0A7E 22         991    ret
0A7F            992    
0A7F            993   Open_oven_toaster_BEEPER:
0A7F 121BEC     994     lcall ToneReset
0A82 D28C       995    setb tr0
0A84 C002       996            push AR2
0A86 7AFA       996            mov R2, #250
0A88 120039     996            lcall ?Wait_Milli_Seconds
0A8B D002       996            pop AR2
0A8D C002       997            push AR2
0A8F 7AFA       997            mov R2, #250
0A91 120039     997            lcall ?Wait_Milli_Seconds
0A94 D002       997            pop AR2
0A96 C002       998            push AR2
0A98 7AFA       998            mov R2, #250
0A9A 120039     998            lcall ?Wait_Milli_Seconds
0A9D D002       998            pop AR2
0A9F C002       999            push AR2
0AA1 7AFA       999            mov R2, #250
0AA3 120039     999            lcall ?Wait_Milli_Seconds
0AA6 D002       999            pop AR2
0AA8 C002      1000            push AR2
0AAA 7AFA      1000            mov R2, #250
0AAC 120039    1000            lcall ?Wait_Milli_Seconds
0AAF D002      1000            pop AR2
0AB1 C002      1001            push AR2
0AB3 7AFA      1001            mov R2, #250
0AB5 120039    1001            lcall ?Wait_Milli_Seconds
0AB8 D002      1001            pop AR2
0ABA           1002   
0ABA           1003   
0ABA C28C      1004    clr tr0
0ABC 22        1005    ret
0ABD           1006   ; Display Temperature in LCD
0ABD           1007   Display_Temp_LCD:
0ABD           1008   ; show temp in Celcius 
0ABD C0E0      1009            push acc
0ABF 7406      1009            mov a, #6
0AC1 14        1009            dec a
0AC2 1200C1    1009            lcall ?Set_Cursor_1 ; Select column and row
0AC5 D0E0      1009            pop acc;
0AC7 C000      1010            push ar0
0AC9 A839      1010            mov r0, bcd+1
0ACB 1200C6    1010            lcall ?Display_BCD
0ACE D000      1010            pop ar0
0AD0 C0E0      1011            push acc
0AD2 7409      1011            mov a, #9
0AD4 14        1011            dec a
0AD5 1200C1    1011            lcall ?Set_Cursor_1 ; Select column and row
0AD8 D0E0      1011            pop acc;  
0ADA 22        1012            ret
0ADB           1013            
0ADB           1014   ; MENU SELECT;   
0ADB           1015            
0ADB           1016            
0ADB           1017   Menu_select1:  
0ADB 7401      1018            mov a, #0x01
0ADD 120083    1018            lcall ?WriteCommand
0AE0 C002      1019            push AR2
0AE2 7A32      1019            mov R2, #50
0AE4 120039    1019            lcall ?Wait_Milli_Seconds
0AE7 D002      1019            pop AR2
0AE9           1020   Menu_select2:
0AE9 C0E0      1021            push acc
0AEB 7401      1021            mov a, #1
0AED 14        1021            dec a
0AEE 1200C1    1021            lcall ?Set_Cursor_1 ; Select column and row
0AF1 D0E0      1021            pop acc
0AF3 C083      1022            push dph
0AF5 C082      1022            push dpl
0AF7 C0E0      1022            push acc
0AF9 90039C    1022            mov dptr, #MenuMessage1
0AFC 1200B4    1022            lcall ?Send_Constant_String
0AFF D0E0      1022            pop acc
0B01 D082      1022            pop dpl
0B03 D083      1022            pop dph
0B05 C0E0      1023            push acc
0B07 7401      1023            mov a, #1
0B09 14        1023            dec a
0B0A 1200BF    1023            lcall ?Set_Cursor_2 ; Select column and row
0B0D D0E0      1023            pop acc
0B0F C083      1024            push dph
0B11 C082      1024            push dpl
0B13 C0E0      1024            push acc
0B15 9003A8    1024            mov dptr, #MenuMessage2
0B18 1200B4    1024            lcall ?Send_Constant_String
0B1B D0E0      1024            pop acc
0B1D D082      1024            pop dpl
0B1F D083      1024            pop dph
0B21           1025     
0B21 C002      1026            push AR2
0B23 7A32      1026            mov R2, #50
0B25 120039    1026            lcall ?Wait_Milli_Seconds
0B28 D002      1026            pop AR2 ;go to set Soak Temperature
0B2A 208306    1027     jb BUTTON_1, Menu_select2_2
0B2D 3083FD    1028     jnb BUTTON_1, $
0B30 020B8F    1029     ljmp Jump_to_Set_SoakTemp1
0B33           1030     
0B33           1031   Menu_select2_2:
0B33 C002      1032            push AR2
0B35 7A32      1032            mov R2, #50
0B37 120039    1032            lcall ?Wait_Milli_Seconds
0B3A D002      1032            pop AR2 ;go to set Soak Time
0B3C 208206    1033     jb BUTTON_2, Menu_select2_3
0B3F 3082FD    1034     jnb BUTTON_2, $
0B42 020B92    1035     ljmp Jump_to_Set_SoakTime1
0B45           1036     
0B45           1037   Menu_select2_3:
0B45 C002      1038            push AR2
0B47 7A32      1038            mov R2, #50
0B49 120039    1038            lcall ?Wait_Milli_Seconds
0B4C D002      1038            pop AR2 ;go to second set of menus
0B4E 208706    1039     jb BUTTON_3, Menu_select2_4
0B51 3087FD    1040     jnb BUTTON_3, $
0B54 020B98    1041     ljmp Jump_to_Menu_select3
0B57           1042     
0B57           1043   Menu_select2_4:
0B57 C002      1044            push AR2
0B59 7A32      1044            mov R2, #50
0B5B 120039    1044            lcall ?Wait_Milli_Seconds
0B5E D002      1044            pop AR2   ; start the reflow process
0B60 208432    1045     jb StartButton, Jump_to_Menu_select2_1
0B63 3084FD    1046     jnb StartButton, $
0B66 020B69    1047     ljmp Jump_To_FOREVER1
0B69           1048     
0B69           1049   Jump_To_FOREVER1:
0B69 7401      1050            mov a, #0x01
0B6B 120083    1050            lcall ?WriteCommand
0B6E C002      1051            push AR2
0B70 7A32      1051            mov R2, #50
0B72 120039    1051            lcall ?Wait_Milli_Seconds
0B75 D002      1051            pop AR2
0B77 120861    1052     lcall TurnOvenOn
0B7A 120529    1053     lcall Timer2_init
0B7D           1054            
0B7D 755000    1055            mov second, #0
0B80 12197E    1056   lcall SMStartSongPlay
0B83 C002      1057            push AR2
0B85 7A32      1057            mov R2, #50
0B87 120039    1057            lcall ?Wait_Milli_Seconds
0B8A D002      1057            pop AR2
0B8C 0206AB    1058            ljmp FOREVER
0B8F           1059   
0B8F           1060   Jump_to_Set_SoakTemp1:
0B8F 020B9B    1061            ljmp Set_SoakTemp1
0B92           1062     
0B92           1063   Jump_to_Set_SoakTime1:
0B92 020C9F    1064            ljmp Set_SoakTime1
0B95           1065            
0B95           1066   Jump_to_Menu_select2_1:
0B95 020AE9    1067            ljmp Menu_select2
0B98           1068     
0B98           1069   Jump_to_Menu_select3:
0B98 020DA3    1070            ljmp Menu_select3
0B9B           1071   
0B9B           1072   ; Settings - Soak Temperature
0B9B           1073   Set_SoakTemp1:
0B9B 7401      1074            mov a, #0x01
0B9D 120083    1074            lcall ?WriteCommand          ;clear display
0BA0 C002      1075            push AR2
0BA2 7A32      1075            mov R2, #50
0BA4 120039    1075            lcall ?Wait_Milli_Seconds
0BA7 D002      1075            pop AR2
0BA9 C0E0      1076            push acc
0BAB 7401      1076            mov a, #1
0BAD 14        1076            dec a
0BAE 1200C1    1076            lcall ?Set_Cursor_1 ; Select column and row
0BB1 D0E0      1076            pop acc
0BB3 C083      1077            push dph
0BB5 C082      1077            push dpl
0BB7 C0E0      1077            push acc
0BB9 9003D0    1077            mov dptr, #MenuSoakTemp
0BBC 1200B4    1077            lcall ?Send_Constant_String
0BBF D0E0      1077            pop acc
0BC1 D082      1077            pop dpl
0BC3 D083      1077            pop dph
0BC5 C0E0      1078            push acc
0BC7 7401      1078            mov a, #1
0BC9 14        1078            dec a
0BCA 1200BF    1078            lcall ?Set_Cursor_2 ; Select column and row
0BCD D0E0      1078            pop acc
0BCF 854430    1079     mov x, soaktemp
0BD2 12011F    1080     lcall hex2bcd
0BD5 C000      1081            push ar0
0BD7 A839      1081            mov r0, bcd+1
0BD9 1200C6    1081            lcall ?Display_BCD
0BDC D000      1081            pop ar0
0BDE C0E0      1082            push acc
0BE0 7403      1082            mov a, #3
0BE2 14        1082            dec a
0BE3 1200BF    1082            lcall ?Set_Cursor_2 ; Select column and row
0BE6 D0E0      1082            pop acc
0BE8 C000      1083            push ar0
0BEA A838      1083            mov r0, bcd+0
0BEC 1200C6    1083            lcall ?Display_BCD
0BEF D000      1083            pop ar0
0BF1           1084   Set_SoakTemp2:
0BF1 20830F    1085     jb BUTTON_1, Set_SoakTemp2_2
0BF4 C002      1086            push AR2
0BF6 7A32      1086            mov R2, #50
0BF8 120039    1086            lcall ?Wait_Milli_Seconds
0BFB D002      1086            pop AR2
0BFD 208303    1087     jb BUTTON_1, Set_SoakTemp2_2
0C00 020C2A    1088     ljmp SoakTemp_inc
0C03           1089   Set_SoakTemp2_2:
0C03 20820F    1090     jb BUTTON_2, Set_SoakTemp2_3
0C06 C002      1091            push AR2
0C08 7A32      1091            mov R2, #50
0C0A 120039    1091            lcall ?Wait_Milli_Seconds
0C0D D002      1091            pop AR2
0C0F 208203    1092     jb BUTTON_2, Set_SoakTemp2_3
0C12 020C4E    1093     ljmp SoakTemp_dec
0C15           1094   Set_SoakTemp2_3:
0C15 20870F    1095            jb BUTTON_3, Set_SoakTemp2_4
0C18 C002      1096            push AR2
0C1A 7A32      1096            mov R2, #50
0C1C 120039    1096            lcall ?Wait_Milli_Seconds
0C1F D002      1096            pop AR2
0C21 208703    1097     jb BUTTON_3, Set_SoakTemp2_4
0C24 020ADB    1098     ljmp Menu_select1
0C27           1099   Set_SoakTemp2_4:
0C27 020BF1    1100     ljmp Set_SoakTemp2
0C2A           1101     
0C2A           1102   soaktemp_inc:
0C2A 854430    1103    mov x, soaktemp
0C2D 753100    1104    mov x+1, #0
0C30 753200    1105    mov x+2, #0
0C33 753300    1106    mov x+3, #0
0C36 753401    1107            mov y+0, #low (1 % 0x10000) 
0C39 753500    1107            mov y+1, #high(1 % 0x10000) 
0C3C 753600    1107            mov y+2, #low (1 / 0x10000) 
0C3F 753700    1107            mov y+3, #high(1 / 0x10000) 
0C42 1201E4    1108    lcall add32
0C45 853044    1109    mov soaktemp, x
0C48 120C72    1110    lcall display_soak_temp 
0C4B 020BF1    1111    ljmp Set_SoakTemp2
0C4E           1112    
0C4E           1113   soaktemp_dec: 
0C4E 854430    1114    mov x, soaktemp
0C51 753100    1115    mov x+1, #0
0C54 753200    1116    mov x+2, #0
0C57 753300    1117    mov x+3, #0
0C5A 753401    1118            mov y+0, #low (1 % 0x10000) 
0C5D 753500    1118            mov y+1, #high(1 % 0x10000) 
0C60 753600    1118            mov y+2, #low (1 / 0x10000) 
0C63 753700    1118            mov y+3, #high(1 / 0x10000) 
0C66 120205    1119    lcall sub32
0C69 853044    1120    mov soaktemp, x
0C6C 120C72    1121    lcall display_soak_temp 
0C6F 020BF1    1122    ljmp Set_SoakTemp2
0C72           1123     
0C72           1124   display_soak_temp: 
0C72 854430    1125    mov x, soaktemp
0C75 12011F    1126    lcall hex2bcd
0C78 C0E0      1127            push acc
0C7A 7401      1127            mov a, #1
0C7C 14        1127            dec a
0C7D 1200BF    1127            lcall ?Set_Cursor_2 ; Select column and row
0C80 D0E0      1127            pop acc
0C82 C000      1128            push ar0
0C84 A839      1128            mov r0, bcd+1
0C86 1200C6    1128            lcall ?Display_BCD
0C89 D000      1128            pop ar0
0C8B C0E0      1129            push acc
0C8D 7403      1129            mov a, #3
0C8F 14        1129            dec a
0C90 1200BF    1129            lcall ?Set_Cursor_2 ; Select column and row
0C93 D0E0      1129            pop acc
0C95 C000      1130            push ar0
0C97 A838      1130            mov r0, bcd+0
0C99 1200C6    1130            lcall ?Display_BCD
0C9C D000      1130            pop ar0
0C9E 22        1131   ret   
0C9F           1132   
0C9F           1133   ; Settings - Soak Time
0C9F           1134   Set_SoakTime1:
0C9F 7401      1135            mov a, #0x01
0CA1 120083    1135            lcall ?WriteCommand          ;clear display
0CA4 C002      1136            push AR2
0CA6 7A32      1136            mov R2, #50
0CA8 120039    1136            lcall ?Wait_Milli_Seconds
0CAB D002      1136            pop AR2
0CAD C0E0      1137            push acc
0CAF 7401      1137            mov a, #1
0CB1 14        1137            dec a
0CB2 1200C1    1137            lcall ?Set_Cursor_1 ; Select column and row
0CB5 D0E0      1137            pop acc
0CB7 C083      1138            push dph
0CB9 C082      1138            push dpl
0CBB C0E0      1138            push acc
0CBD 9003DB    1138            mov dptr, #MenuSoakTime
0CC0 1200B4    1138            lcall ?Send_Constant_String
0CC3 D0E0      1138            pop acc
0CC5 D082      1138            pop dpl
0CC7 D083      1138            pop dph
0CC9 C0E0      1139            push acc
0CCB 7401      1139            mov a, #1
0CCD 14        1139            dec a
0CCE 1200BF    1139            lcall ?Set_Cursor_2 ; Select column and row
0CD1 D0E0      1139            pop acc
0CD3 854530    1140     mov x, soaktime
0CD6 12011F    1141     lcall hex2bcd
0CD9 C000      1142            push ar0
0CDB A839      1142            mov r0, bcd+1
0CDD 1200C6    1142            lcall ?Display_BCD
0CE0 D000      1142            pop ar0
0CE2 C0E0      1143            push acc
0CE4 7403      1143            mov a, #3
0CE6 14        1143            dec a
0CE7 1200BF    1143            lcall ?Set_Cursor_2 ; Select column and row
0CEA D0E0      1143            pop acc
0CEC C000      1144            push ar0
0CEE A838      1144            mov r0, bcd+0
0CF0 1200C6    1144            lcall ?Display_BCD
0CF3 D000      1144            pop ar0
0CF5           1145   Set_SoakTime2:
0CF5 20830F    1146     jb BUTTON_1, Set_SoakTime2_2
0CF8 C002      1147            push AR2
0CFA 7A32      1147            mov R2, #50
0CFC 120039    1147            lcall ?Wait_Milli_Seconds
0CFF D002      1147            pop AR2
0D01 208303    1148     jb BUTTON_1, Set_SoakTime2_2
0D04 020D2E    1149     ljmp SoakTime_inc
0D07           1150   Set_SoakTime2_2:
0D07 20820F    1151     jb BUTTON_2, Set_SoakTime2_3
0D0A C002      1152            push AR2
0D0C 7A32      1152            mov R2, #50
0D0E 120039    1152            lcall ?Wait_Milli_Seconds
0D11 D002      1152            pop AR2
0D13 208203    1153     jb BUTTON_2, Set_SoakTime2_3
0D16 020D52    1154     ljmp SoakTime_dec
0D19           1155   Set_SoakTime2_3:
0D19 20870F    1156            jb BUTTON_3, Set_SoakTime2_4
0D1C C002      1157            push AR2
0D1E 7A32      1157            mov R2, #50
0D20 120039    1157            lcall ?Wait_Milli_Seconds
0D23 D002      1157            pop AR2
0D25 208703    1158     jb BUTTON_3, Set_SoakTime2_4
0D28 020ADB    1159     ljmp Menu_select1
0D2B           1160   Set_SoakTime2_4:
0D2B 020CF5    1161     ljmp Set_SoakTime2
0D2E           1162   
0D2E           1163   soaktime_inc:
0D2E 854530    1164    mov x, soaktime
0D31 753100    1165    mov x+1, #0
0D34 753200    1166    mov x+2, #0
0D37 753300    1167    mov x+3, #0
0D3A 753401    1168            mov y+0, #low (1 % 0x10000) 
0D3D 753500    1168            mov y+1, #high(1 % 0x10000) 
0D40 753600    1168            mov y+2, #low (1 / 0x10000) 
0D43 753700    1168            mov y+3, #high(1 / 0x10000) 
0D46 1201E4    1169    lcall add32
0D49 853045    1170    mov soaktime, x
0D4C 120D76    1171    lcall display_soak_time
0D4F 020CF5    1172    ljmp Set_SoakTime2
0D52           1173    
0D52           1174   soaktime_dec: 
0D52 854530    1175    mov x, soaktime
0D55 753100    1176    mov x+1, #0
0D58 753200    1177    mov x+2, #0
0D5B 753300    1178    mov x+3, #0
0D5E 753401    1179            mov y+0, #low (1 % 0x10000) 
0D61 753500    1179            mov y+1, #high(1 % 0x10000) 
0D64 753600    1179            mov y+2, #low (1 / 0x10000) 
0D67 753700    1179            mov y+3, #high(1 / 0x10000) 
0D6A 120205    1180    lcall sub32
0D6D 853045    1181    mov soaktime, x
0D70 120D76    1182    lcall display_soak_time
0D73 020CF5    1183    ljmp Set_SoakTime2
0D76           1184     
0D76           1185   display_soak_time: 
0D76 854530    1186    mov x, soaktime
0D79 12011F    1187    lcall hex2bcd
0D7C C0E0      1188            push acc
0D7E 7401      1188            mov a, #1
0D80 14        1188            dec a
0D81 1200BF    1188            lcall ?Set_Cursor_2 ; Select column and row
0D84 D0E0      1188            pop acc
0D86 C000      1189            push ar0
0D88 A839      1189            mov r0, bcd+1
0D8A 1200C6    1189            lcall ?Display_BCD
0D8D D000      1189            pop ar0
0D8F C0E0      1190            push acc
0D91 7403      1190            mov a, #3
0D93 14        1190            dec a
0D94 1200BF    1190            lcall ?Set_Cursor_2 ; Select column and row
0D97 D0E0      1190            pop acc
0D99 C000      1191            push ar0
0D9B A838      1191            mov r0, bcd+0
0D9D 1200C6    1191            lcall ?Display_BCD
0DA0 D000      1191            pop ar0
0DA2 22        1192   ret   
0DA3           1193   
0DA3           1194   
0DA3           1195   ; Second set of Menu - Set reflow parameters
0DA3           1196   Menu_select3:
0DA3 7401      1197            mov a, #0x01
0DA5 120083    1197            lcall ?WriteCommand
0DA8 C002      1198            push AR2
0DAA 7A32      1198            mov R2, #50
0DAC 120039    1198            lcall ?Wait_Milli_Seconds
0DAF D002      1198            pop AR2
0DB1           1199   Menu_select4:
0DB1 C0E0      1200            push acc
0DB3 7401      1200            mov a, #1
0DB5 14        1200            dec a
0DB6 1200C1    1200            lcall ?Set_Cursor_1 ; Select column and row
0DB9 D0E0      1200            pop acc
0DBB C083      1201            push dph
0DBD C082      1201            push dpl
0DBF C0E0      1201            push acc
0DC1 9003B4    1201            mov dptr, #MenuMessage3
0DC4 1200B4    1201            lcall ?Send_Constant_String
0DC7 D0E0      1201            pop acc
0DC9 D082      1201            pop dpl
0DCB D083      1201            pop dph
0DCD C0E0      1202            push acc
0DCF 7401      1202            mov a, #1
0DD1 14        1202            dec a
0DD2 1200BF    1202            lcall ?Set_Cursor_2 ; Select column and row
0DD5 D0E0      1202            pop acc
0DD7 C083      1203            push dph
0DD9 C082      1203            push dpl
0DDB C0E0      1203            push acc
0DDD 9003C2    1203            mov dptr, #MenuMessage4
0DE0 1200B4    1203            lcall ?Send_Constant_String
0DE3 D0E0      1203            pop acc
0DE5 D082      1203            pop dpl
0DE7 D083      1203            pop dph
0DE9           1204     
0DE9 C002      1205            push AR2
0DEB 7A32      1205            mov R2, #50
0DED 120039    1205            lcall ?Wait_Milli_Seconds
0DF0 D002      1205            pop AR2 ;go to set Reflow Temperature
0DF2 208306    1206     jb BUTTON_1, Menu_select4_2
0DF5 3083FD    1207     jnb BUTTON_1, $
0DF8 020E31    1208     ljmp Jump_to_Set_ReflowTemp1
0DFB           1209     
0DFB           1210   Menu_select4_2:
0DFB C002      1211            push AR2
0DFD 7A32      1211            mov R2, #50
0DFF 120039    1211            lcall ?Wait_Milli_Seconds
0E02 D002      1211            pop AR2 ;go to set Reflow Time
0E04 208206    1212     jb BUTTON_2, Menu_select4_3
0E07 3082FD    1213     jnb BUTTON_2, $
0E0A 020E34    1214     ljmp Jump_to_Set_ReflowTime1
0E0D           1215     
0E0D           1216   Menu_select4_3:
0E0D C002      1217            push AR2
0E0F 7A32      1217            mov R2, #50
0E11 120039    1217            lcall ?Wait_Milli_Seconds
0E14 D002      1217            pop AR2 ;go to first set of Song menu
0E16 208706    1218     jb BUTTON_3, Menu_select4_4
0E19 3087FD    1219     jnb BUTTON_3, $
0E1C 020E3A    1220     ljmp Jump_to_Song_Menu1                                 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
0E1F           1221   
0E1F           1222   Menu_select4_4:
0E1F C002      1223            push AR2
0E21 7A32      1223            mov R2, #50
0E23 120039    1223            lcall ?Wait_Milli_Seconds
0E26 D002      1223            pop AR2   ; start the reflow process
0E28 20840C    1224     jb StartButton, Jump_to_Menu_select3_1
0E2B 3084FD    1225     jnb StartButton, $
0E2E 020B69    1226     ljmp Jump_To_FOREVER1
0E31           1227   
0E31           1228   Jump_to_Set_ReflowTemp1:
0E31 020E3D    1229            ljmp Set_ReflowTemp1
0E34           1230     
0E34           1231   Jump_to_Set_ReflowTime1:
0E34 020F4A    1232            ljmp Set_ReflowTime1
0E37           1233            
0E37           1234   Jump_to_Menu_select3_1:
0E37 020DB1    1235            ljmp Menu_select4
0E3A           1236     
0E3A           1237   Jump_to_Song_Menu1:                                         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
0E3A 021057    1238            ljmp Song_Menu_Select1
0E3D           1239     
0E3D           1240   ; Settings - Reflow Temperature
0E3D           1241   Set_ReflowTemp1:
0E3D 7401      1242            mov a, #0x01
0E3F 120083    1242            lcall ?WriteCommand          ;clear display
0E42 C002      1243            push AR2
0E44 7A32      1243            mov R2, #50
0E46 120039    1243            lcall ?Wait_Milli_Seconds
0E49 D002      1243            pop AR2
0E4B C0E0      1244            push acc
0E4D 7401      1244            mov a, #1
0E4F 14        1244            dec a
0E50 1200C1    1244            lcall ?Set_Cursor_1 ; Select column and row
0E53 D0E0      1244            pop acc
0E55 C083      1245            push dph
0E57 C082      1245            push dpl
0E59 C0E0      1245            push acc
0E5B 9003E6    1245            mov dptr, #MenuReflowTemp
0E5E 1200B4    1245            lcall ?Send_Constant_String
0E61 D0E0      1245            pop acc
0E63 D082      1245            pop dpl
0E65 D083      1245            pop dph
0E67 C0E0      1246            push acc
0E69 7401      1246            mov a, #1
0E6B 14        1246            dec a
0E6C 1200BF    1246            lcall ?Set_Cursor_2 ; Select column and row
0E6F D0E0      1246            pop acc
0E71 854630    1247     mov x, reflowtemp
0E74 12011F    1248     lcall hex2bcd
0E77 C000      1249            push ar0
0E79 A839      1249            mov r0, bcd+1
0E7B 1200C6    1249            lcall ?Display_BCD
0E7E D000      1249            pop ar0
0E80 C0E0      1250            push acc
0E82 7403      1250            mov a, #3
0E84 14        1250            dec a
0E85 1200BF    1250            lcall ?Set_Cursor_2 ; Select column and row
0E88 D0E0      1250            pop acc
0E8A C000      1251            push ar0
0E8C A838      1251            mov r0, bcd+0
0E8E 1200C6    1251            lcall ?Display_BCD
0E91 D000      1251            pop ar0
0E93           1252     
0E93           1253   Set_ReflowTemp2:
0E93 20830F    1254     jb BUTTON_1, Set_ReflowTemp2_2
0E96 C002      1255            push AR2
0E98 7A32      1255            mov R2, #50
0E9A 120039    1255            lcall ?Wait_Milli_Seconds
0E9D D002      1255            pop AR2
0E9F 208303    1256     jb BUTTON_1, Set_ReflowTemp2_2
0EA2 020F26    1257     ljmp ReflowTemp_inc
0EA5           1258   Set_ReflowTemp2_2:
0EA5 20820F    1259     jb BUTTON_2, Set_ReflowTemp2_3
0EA8 C002      1260            push AR2
0EAA 7A32      1260            mov R2, #50
0EAC 120039    1260            lcall ?Wait_Milli_Seconds
0EAF D002      1260            pop AR2
0EB1 208203    1261     jb BUTTON_2, Set_ReflowTemp2_3
0EB4 020ECC    1262     ljmp ReflowTemp_dec
0EB7           1263   Set_ReflowTemp2_3:
0EB7 20870F    1264            jb BUTTON_3, Set_ReflowTemp2_4
0EBA C002      1265            push AR2
0EBC 7A32      1265            mov R2, #50
0EBE 120039    1265            lcall ?Wait_Milli_Seconds
0EC1 D002      1265            pop AR2
0EC3 208703    1266     jb BUTTON_3, Set_ReflowTemp2_4
0EC6 020DA3    1267     ljmp Menu_select3
0EC9           1268   Set_ReflowTemp2_4:
0EC9 020E93    1269     ljmp Set_ReflowTemp2
0ECC           1270    
0ECC           1271    
0ECC           1272    
0ECC           1273     
0ECC           1274   ReflowTemp_dec:
0ECC 854630    1275    mov x, reflowtemp
0ECF 753100    1276    mov x+1, #0
0ED2 753200    1277    mov x+2, #0
0ED5 753300    1278    mov x+3, #0
0ED8 753401    1279            mov y+0, #low (1 % 0x10000) 
0EDB 753500    1279            mov y+1, #high(1 % 0x10000) 
0EDE 753600    1279            mov y+2, #low (1 / 0x10000) 
0EE1 753700    1279            mov y+3, #high(1 / 0x10000) 
0EE4 120205    1280    lcall sub32
0EE7 853046    1281    mov reflowtemp, x
0EEA 120EF0    1282    lcall display_reflow_temp
0EED 020E93    1283    ljmp Set_reflowtemp2
0EF0           1284     
0EF0           1285   display_reflow_temp: 
0EF0 854630    1286    mov x, reflowtemp
0EF3 753100    1287    mov x+1, #0
0EF6 753200    1288    mov x+2, #0
0EF9 753300    1289    mov x+3, #0
0EFC 12011F    1290    lcall hex2bcd
0EFF C0E0      1291            push acc
0F01 7401      1291            mov a, #1
0F03 14        1291            dec a
0F04 1200BF    1291            lcall ?Set_Cursor_2 ; Select column and row
0F07 D0E0      1291            pop acc
0F09 C000      1292            push ar0
0F0B A839      1292            mov r0, bcd+1
0F0D 1200C6    1292            lcall ?Display_BCD
0F10 D000      1292            pop ar0
0F12 C0E0      1293            push acc
0F14 7403      1293            mov a, #3
0F16 14        1293            dec a
0F17 1200BF    1293            lcall ?Set_Cursor_2 ; Select column and row
0F1A D0E0      1293            pop acc
0F1C C000      1294            push ar0
0F1E A838      1294            mov r0, bcd+0
0F20 1200C6    1294            lcall ?Display_BCD
0F23 D000      1294            pop ar0
0F25 22        1295   ret   
0F26           1296    
0F26           1297     
0F26           1298   Reflowtemp_inc:
0F26 854630    1299    mov x, reflowtemp
0F29 753100    1300    mov x+1, #0
0F2C 753200    1301    mov x+2, #0
0F2F 753300    1302    mov x+3, #0
0F32 753401    1303            mov y+0, #low (1 % 0x10000) 
0F35 753500    1303            mov y+1, #high(1 % 0x10000) 
0F38 753600    1303            mov y+2, #low (1 / 0x10000) 
0F3B 753700    1303            mov y+3, #high(1 / 0x10000) 
0F3E 1201E4    1304    lcall add32
0F41 853046    1305    mov reflowtemp, x
0F44 120EF0    1306    lcall display_reflow_temp
0F47 020E93    1307    ljmp Set_Reflowtemp2
0F4A           1308   
0F4A           1309   ; Settings - Reflow Time
0F4A           1310   Set_ReflowTime1:
0F4A 7401      1311            mov a, #0x01
0F4C 120083    1311            lcall ?WriteCommand          ;clear display
0F4F C002      1312            push AR2
0F51 7A32      1312            mov R2, #50
0F53 120039    1312            lcall ?Wait_Milli_Seconds
0F56 D002      1312            pop AR2
0F58 C0E0      1313            push acc
0F5A 7401      1313            mov a, #1
0F5C 14        1313            dec a
0F5D 1200C1    1313            lcall ?Set_Cursor_1 ; Select column and row
0F60 D0E0      1313            pop acc
0F62 C083      1314            push dph
0F64 C082      1314            push dpl
0F66 C0E0      1314            push acc
0F68 9003F3    1314            mov dptr, #MenuReflowTime
0F6B 1200B4    1314            lcall ?Send_Constant_String
0F6E D0E0      1314            pop acc
0F70 D082      1314            pop dpl
0F72 D083      1314            pop dph
0F74 C0E0      1315            push acc
0F76 7401      1315            mov a, #1
0F78 14        1315            dec a
0F79 1200BF    1315            lcall ?Set_Cursor_2 ; Select column and row
0F7C D0E0      1315            pop acc
0F7E 854730    1316     mov x, reflowtime
0F81 12011F    1317     lcall hex2bcd
0F84 C000      1318            push ar0
0F86 A839      1318            mov r0, bcd+1
0F88 1200C6    1318            lcall ?Display_BCD
0F8B D000      1318            pop ar0
0F8D C0E0      1319            push acc
0F8F 7403      1319            mov a, #3
0F91 14        1319            dec a
0F92 1200BF    1319            lcall ?Set_Cursor_2 ; Select column and row
0F95 D0E0      1319            pop acc
0F97 C000      1320            push ar0
0F99 A838      1320            mov r0, bcd+0
0F9B 1200C6    1320            lcall ?Display_BCD
0F9E D000      1320            pop ar0
0FA0           1321   Set_ReflowTime2:
0FA0 20830F    1322     jb BUTTON_1, Set_ReflowTime2_2
0FA3 C002      1323            push AR2
0FA5 7A32      1323            mov R2, #50
0FA7 120039    1323            lcall ?Wait_Milli_Seconds
0FAA D002      1323            pop AR2
0FAC 208303    1324     jb BUTTON_1, Set_ReflowTime2_2
0FAF 020FD9    1325     ljmp ReflowTime_inc
0FB2           1326   Set_ReflowTime2_2:
0FB2 20820F    1327     jb BUTTON_2, Set_ReflowTime2_3
0FB5 C002      1328            push AR2
0FB7 7A32      1328            mov R2, #50
0FB9 120039    1328            lcall ?Wait_Milli_Seconds
0FBC D002      1328            pop AR2
0FBE 208203    1329     jb BUTTON_2, Set_ReflowTime2_3
0FC1 021033    1330     ljmp ReflowTime_dec
0FC4           1331   Set_ReflowTime2_3:
0FC4 20870F    1332            jb BUTTON_3, Set_ReflowTime2_4
0FC7 C002      1333            push AR2
0FC9 7A32      1333            mov R2, #50
0FCB 120039    1333            lcall ?Wait_Milli_Seconds
0FCE D002      1333            pop AR2
0FD0 208703    1334     jb BUTTON_3, Set_ReflowTime2_4
0FD3 020DA3    1335     ljmp Menu_select3
0FD6           1336   Set_ReflowTime2_4:
0FD6 020FA0    1337     ljmp Set_ReflowTime2
0FD9           1338   
0FD9           1339   ReflowTime_inc:
0FD9 854730    1340    mov x, reflowtime
0FDC 753100    1341    mov x+1, #0
0FDF 753200    1342    mov x+2, #0
0FE2 753300    1343    mov x+3, #0
0FE5 753401    1344            mov y+0, #low (1 % 0x10000) 
0FE8 753500    1344            mov y+1, #high(1 % 0x10000) 
0FEB 753600    1344            mov y+2, #low (1 / 0x10000) 
0FEE 753700    1344            mov y+3, #high(1 / 0x10000) 
0FF1 1201E4    1345    lcall add32
0FF4 853047    1346    mov reflowtime, x
0FF7 120FFD    1347    lcall display_reflow_time 
0FFA 020FA0    1348    ljmp Set_reflowTime2
0FFD           1349     
0FFD           1350   display_reflow_time: 
0FFD 854730    1351    mov x, reflowtime
1000 753100    1352    mov x+1, #0
1003 753200    1353    mov x+2, #0
1006 753300    1354    mov x+3, #0
1009 12011F    1355    lcall hex2bcd
100C C0E0      1356            push acc
100E 7401      1356            mov a, #1
1010 14        1356            dec a
1011 1200BF    1356            lcall ?Set_Cursor_2 ; Select column and row
1014 D0E0      1356            pop acc
1016 C000      1357            push ar0
1018 A839      1357            mov r0, bcd+1
101A 1200C6    1357            lcall ?Display_BCD
101D D000      1357            pop ar0
101F C0E0      1358            push acc
1021 7403      1358            mov a, #3
1023 14        1358            dec a
1024 1200BF    1358            lcall ?Set_Cursor_2 ; Select column and row
1027 D0E0      1358            pop acc
1029 C000      1359            push ar0
102B A838      1359            mov r0, bcd+0
102D 1200C6    1359            lcall ?Display_BCD
1030 D000      1359            pop ar0
1032 22        1360   ret   
1033           1361    
1033           1362     
1033           1363   ReflowTime_dec:
1033 854730    1364    mov x, reflowtime
1036 753100    1365    mov x+1, #0
1039 753200    1366    mov x+2, #0
103C 753300    1367    mov x+3, #0
103F 753401    1368            mov y+0, #low (1 % 0x10000) 
1042 753500    1368            mov y+1, #high(1 % 0x10000) 
1045 753600    1368            mov y+2, #low (1 / 0x10000) 
1048 753700    1368            mov y+3, #high(1 / 0x10000) 
104B 120205    1369    lcall sub32
104E 853047    1370    mov reflowtime, x
1051 120FFD    1371    lcall display_reflow_time
1054 020FA0    1372    ljmp Set_Reflowtime2
1057           1373   
1057           1374   
1057           1375   Song_Menu_Select1:
1057 7401      1376            mov a, #0x01
1059 120083    1376            lcall ?WriteCommand
105C C002      1377            push AR2
105E 7A32      1377            mov R2, #50
1060 120039    1377            lcall ?Wait_Milli_Seconds
1063 D002      1377            pop AR2
1065 C0E0      1378            push acc
1067 7401      1378            mov a, #1
1069 14        1378            dec a
106A 1200C1    1378            lcall ?Set_Cursor_1 ; Select column and row
106D D0E0      1378            pop acc
106F C083      1379            push dph
1071 C082      1379            push dpl
1073 C0E0      1379            push acc
1075 900444    1379            mov dptr, #Song_Menu1
1078 1200B4    1379            lcall ?Send_Constant_String
107B D0E0      1379            pop acc
107D D082      1379            pop dpl
107F D083      1379            pop dph
1081 C0E0      1380            push acc
1083 7401      1380            mov a, #1
1085 14        1380            dec a
1086 1200BF    1380            lcall ?Set_Cursor_2 ; Select column and row
1089 D0E0      1380            pop acc
108B C083      1381            push dph
108D C082      1381            push dpl
108F C0E0      1381            push acc
1091 900451    1381            mov dptr, #Song_Menu2
1094 1200B4    1381            lcall ?Send_Constant_String
1097 D0E0      1381            pop acc
1099 D082      1381            pop dpl
109B D083      1381            pop dph
109D           1382   Song_Menu_Select1_2:
109D C002      1383            push AR2
109F 7A32      1383            mov R2, #50
10A1 120039    1383            lcall ?Wait_Milli_Seconds
10A4 D002      1383            pop AR2 ;go to Start Song select
10A6 208306    1384     jb BUTTON_1, Song_Menu_Select2
10A9 3083FD    1385     jnb BUTTON_1, $
10AC 0210E5    1386     ljmp Jump_to_Start_Song_Select
10AF           1387   Song_Menu_Select2:
10AF C002      1388            push AR2
10B1 7A32      1388            mov R2, #50
10B3 120039    1388            lcall ?Wait_Milli_Seconds
10B6 D002      1388            pop AR2 ;go to End Song select
10B8 208206    1389     jb BUTTON_2, Song_Menu_Select3
10BB 3082FD    1390     jnb BUTTON_2, $
10BE 0210E8    1391     ljmp Jump_to_End_Song_Select
10C1           1392   Song_Menu_Select3:
10C1 C002      1393            push AR2
10C3 7A32      1393            mov R2, #50
10C5 120039    1393            lcall ?Wait_Milli_Seconds
10C8 D002      1393            pop AR2 ;go to first set of menus
10CA 208706    1394     jb BUTTON_3, Song_Menu_Select4
10CD 3087FD    1395     jnb BUTTON_3, $
10D0 022248    1396     ljmp Set_GraphC1
10D3           1397   Song_Menu_Select4:
10D3 C002      1398            push AR2
10D5 7A32      1398            mov R2, #50
10D7 120039    1398            lcall ?Wait_Milli_Seconds
10DA D002      1398            pop AR2   ; start the reflow process
10DC 20840C    1399     jb StartButton, Jump_to_Song_Menu_Select1
10DF 3084FD    1400     jnb StartButton, $
10E2 020B69    1401     ljmp Jump_To_FOREVER1
10E5           1402   
10E5           1403   Jump_to_Start_Song_Select:
10E5 0210EE    1404            ljmp Start_Song_Select
10E8           1405   
10E8           1406   Jump_to_End_Song_Select:
10E8 021536    1407            ljmp End_Song_Select
10EB           1408            
10EB           1409   Jump_to_Song_Menu_Select1:
10EB 02109D    1410            ljmp Song_Menu_Select1_2
10EE           1411   
10EE           1412   
10EE           1413   ;------------------------;
10EE           1414   ;        Song Menus      ;
10EE           1415   ;------------------------;
10EE           1416   Start_Song_Select:
10EE 7401      1417            mov a, #0x01
10F0 120083    1417            lcall ?WriteCommand
10F3 C002      1418            push AR2
10F5 7A32      1418            mov R2, #50
10F7 120039    1418            lcall ?Wait_Milli_Seconds
10FA D002      1418            pop AR2
10FC C0E0      1419            push acc
10FE 7401      1419            mov a, #1
1100 14        1419            dec a
1101 1200C1    1419            lcall ?Set_Cursor_1 ; Select column and row
1104 D0E0      1419            pop acc
1106 C083      1420            push dph
1108 C082      1420            push dpl
110A C0E0      1420            push acc
110C 90045C    1420            mov dptr, #Song_Message1
110F 1200B4    1420            lcall ?Send_Constant_String
1112 D0E0      1420            pop acc
1114 D082      1420            pop dpl
1116 D083      1420            pop dph
1118 C0E0      1421            push acc
111A 7401      1421            mov a, #1
111C 14        1421            dec a
111D 1200BF    1421            lcall ?Set_Cursor_2 ; Select column and row
1120 D0E0      1421            pop acc
1122 C083      1422            push dph
1124 C082      1422            push dpl
1126 C0E0      1422            push acc
1128 90046B    1422            mov dptr, #Song_Message2
112B 1200B4    1422            lcall ?Send_Constant_String
112E D0E0      1422            pop acc
1130 D082      1422            pop dpl
1132 D083      1422            pop dph
1134           1423            
1134           1424   Start_Song_Select1_1:
1134 C0E0      1425            push acc
1136 7401      1425            mov a, #1
1138 14        1425            dec a
1139 1200C1    1425            lcall ?Set_Cursor_1 ; Select column and row
113C D0E0      1425            pop acc
113E C0E0      1426            push acc
1140 742A      1426            mov a, #0x2A
1142 12007E    1426            lcall ?WriteData
1145 D0E0      1426            pop acc
1147 C0E0      1427            push acc
1149 7406      1427            mov a, #6
114B 14        1427            dec a
114C 1200C1    1427            lcall ?Set_Cursor_1 ; Select column and row
114F D0E0      1427            pop acc
1151 C0E0      1428            push acc
1153 7420      1428            mov a, #0x20
1155 12007E    1428            lcall ?WriteData
1158 D0E0      1428            pop acc
115A C0E0      1429            push acc
115C 740B      1429            mov a, #11
115E 14        1429            dec a
115F 1200C1    1429            lcall ?Set_Cursor_1 ; Select column and row
1162 D0E0      1429            pop acc
1164 C0E0      1430            push acc
1166 7420      1430            mov a, #0x20
1168 12007E    1430            lcall ?WriteData
116B D0E0      1430            pop acc
116D C0E0      1431            push acc
116F 7401      1431            mov a, #1
1171 14        1431            dec a
1172 1200BF    1431            lcall ?Set_Cursor_2 ; Select column and row
1175 D0E0      1431            pop acc
1177 C0E0      1432            push acc
1179 7420      1432            mov a, #0x20
117B 12007E    1432            lcall ?WriteData
117E D0E0      1432            pop acc
1180 C0E0      1433            push acc
1182 7406      1433            mov a, #6
1184 14        1433            dec a
1185 1200BF    1433            lcall ?Set_Cursor_2 ; Select column and row
1188 D0E0      1433            pop acc
118A C0E0      1434            push acc
118C 7420      1434            mov a, #0x20
118E 12007E    1434            lcall ?WriteData
1191 D0E0      1434            pop acc
1193 C0E0      1435            push acc
1195 740B      1435            mov a, #11
1197 14        1435            dec a
1198 1200BF    1435            lcall ?Set_Cursor_2 ; Select column and row
119B D0E0      1435            pop acc
119D C0E0      1436            push acc
119F 7420      1436            mov a, #0x20
11A1 12007E    1436            lcall ?WriteData
11A4 D0E0      1436            pop acc
11A6           1437   Start_Song_Select1_2:
11A6 C002      1438            push AR2
11A8 7A64      1438            mov R2, #100
11AA 120039    1438            lcall ?Wait_Milli_Seconds
11AD D002      1438            pop AR2
11AF 208306    1439            jb BUTTON_1, Start_Song_Select1_3
11B2 3083FD    1440            jnb BUTTON_1, $
11B5 0211DF    1441            ljmp Start_Song_Select2_1
11B8           1442   Start_Song_Select1_3:
11B8 C002      1443            push AR2
11BA 7A64      1443            mov R2, #100
11BC 120039    1443            lcall ?Wait_Milli_Seconds
11BF D002      1443            pop AR2
11C1 208206    1444            jb BUTTON_2, Start_Song_Select1_4
11C4 3082FD    1445            jnb BUTTON_2, $
11C7 121C4E    1446            lcall TonePlayer1
11CA           1447   Start_Song_Select1_4:
11CA C002      1448            push AR2
11CC 7A64      1448            mov R2, #100
11CE 120039    1448            lcall ?Wait_Milli_Seconds
11D1 D002      1448            pop AR2
11D3 2087D0    1449            jb BUTTON_3, Start_Song_Select1_2
11D6 3087FD    1450            jnb BUTTON_3, $
11D9 755801    1451            mov songstartnum, #0x1
11DC 020ADB    1452            ljmp Menu_select1
11DF           1453   
11DF           1454   Start_Song_Select2_1:
11DF C0E0      1455            push acc
11E1 7401      1455            mov a, #1
11E3 14        1455            dec a
11E4 1200C1    1455            lcall ?Set_Cursor_1 ; Select column and row
11E7 D0E0      1455            pop acc
11E9 C0E0      1456            push acc
11EB 7420      1456            mov a, #0x20
11ED 12007E    1456            lcall ?WriteData
11F0 D0E0      1456            pop acc
11F2 C0E0      1457            push acc
11F4 7406      1457            mov a, #6
11F6 14        1457            dec a
11F7 1200C1    1457            lcall ?Set_Cursor_1 ; Select column and row
11FA D0E0      1457            pop acc
11FC C0E0      1458            push acc
11FE 742A      1458            mov a, #0x2A
1200 12007E    1458            lcall ?WriteData
1203 D0E0      1458            pop acc
1205 C0E0      1459            push acc
1207 740B      1459            mov a, #11
1209 14        1459            dec a
120A 1200C1    1459            lcall ?Set_Cursor_1 ; Select column and row
120D D0E0      1459            pop acc
120F C0E0      1460            push acc
1211 7420      1460            mov a, #0x20
1213 12007E    1460            lcall ?WriteData
1216 D0E0      1460            pop acc
1218 C0E0      1461            push acc
121A 7401      1461            mov a, #1
121C 14        1461            dec a
121D 1200BF    1461            lcall ?Set_Cursor_2 ; Select column and row
1220 D0E0      1461            pop acc
1222 C0E0      1462            push acc
1224 7420      1462            mov a, #0x20
1226 12007E    1462            lcall ?WriteData
1229 D0E0      1462            pop acc
122B C0E0      1463            push acc
122D 7406      1463            mov a, #6
122F 14        1463            dec a
1230 1200BF    1463            lcall ?Set_Cursor_2 ; Select column and row
1233 D0E0      1463            pop acc
1235 C0E0      1464            push acc
1237 7420      1464            mov a, #0x20
1239 12007E    1464            lcall ?WriteData
123C D0E0      1464            pop acc
123E C0E0      1465            push acc
1240 740B      1465            mov a, #11
1242 14        1465            dec a
1243 1200BF    1465            lcall ?Set_Cursor_2 ; Select column and row
1246 D0E0      1465            pop acc
1248 C0E0      1466            push acc
124A 7420      1466            mov a, #0x20
124C 12007E    1466            lcall ?WriteData
124F D0E0      1466            pop acc
1251           1467   Start_Song_Select2_2:
1251 C002      1468            push AR2
1253 7A64      1468            mov R2, #100
1255 120039    1468            lcall ?Wait_Milli_Seconds
1258 D002      1468            pop AR2
125A 208306    1469            jb BUTTON_1, Start_Song_Select2_3
125D 3083FD    1470            jnb BUTTON_1, $
1260 02128A    1471            ljmp Start_Song_Select3_1
1263           1472   Start_Song_Select2_3:
1263 C002      1473            push AR2
1265 7A64      1473            mov R2, #100
1267 120039    1473            lcall ?Wait_Milli_Seconds
126A D002      1473            pop AR2
126C 208206    1474            jb BUTTON_2, Start_Song_Select2_4
126F 3082FD    1475            jnb BUTTON_2, $
1272 121CF7    1476            lcall TonePlayer2
1275           1477   Start_Song_Select2_4:
1275 C002      1478            push AR2
1277 7A64      1478            mov R2, #100
1279 120039    1478            lcall ?Wait_Milli_Seconds
127C D002      1478            pop AR2
127E 2087D0    1479            jb BUTTON_3, Start_Song_Select2_2
1281 3087FD    1480            jnb BUTTON_3, $
1284 755802    1481            mov songstartnum, #0x2
1287 020ADB    1482            ljmp Menu_select1
128A           1483   
128A           1484   Start_Song_Select3_1:
128A C0E0      1485            push acc
128C 7401      1485            mov a, #1
128E 14        1485            dec a
128F 1200C1    1485            lcall ?Set_Cursor_1 ; Select column and row
1292 D0E0      1485            pop acc
1294 C0E0      1486            push acc
1296 7420      1486            mov a, #0x20
1298 12007E    1486            lcall ?WriteData
129B D0E0      1486            pop acc
129D C0E0      1487            push acc
129F 7406      1487            mov a, #6
12A1 14        1487            dec a
12A2 1200C1    1487            lcall ?Set_Cursor_1 ; Select column and row
12A5 D0E0      1487            pop acc
12A7 C0E0      1488            push acc
12A9 7420      1488            mov a, #0x20
12AB 12007E    1488            lcall ?WriteData
12AE D0E0      1488            pop acc
12B0 C0E0      1489            push acc
12B2 740B      1489            mov a, #11
12B4 14        1489            dec a
12B5 1200C1    1489            lcall ?Set_Cursor_1 ; Select column and row
12B8 D0E0      1489            pop acc
12BA C0E0      1490            push acc
12BC 742A      1490            mov a, #0x2A
12BE 12007E    1490            lcall ?WriteData
12C1 D0E0      1490            pop acc
12C3 C0E0      1491            push acc
12C5 7401      1491            mov a, #1
12C7 14        1491            dec a
12C8 1200BF    1491            lcall ?Set_Cursor_2 ; Select column and row
12CB D0E0      1491            pop acc
12CD C0E0      1492            push acc
12CF 7420      1492            mov a, #0x20
12D1 12007E    1492            lcall ?WriteData
12D4 D0E0      1492            pop acc
12D6 C0E0      1493            push acc
12D8 7406      1493            mov a, #6
12DA 14        1493            dec a
12DB 1200BF    1493            lcall ?Set_Cursor_2 ; Select column and row
12DE D0E0      1493            pop acc
12E0 C0E0      1494            push acc
12E2 7420      1494            mov a, #0x20
12E4 12007E    1494            lcall ?WriteData
12E7 D0E0      1494            pop acc
12E9 C0E0      1495            push acc
12EB 740B      1495            mov a, #11
12ED 14        1495            dec a
12EE 1200BF    1495            lcall ?Set_Cursor_2 ; Select column and row
12F1 D0E0      1495            pop acc
12F3 C0E0      1496            push acc
12F5 7420      1496            mov a, #0x20
12F7 12007E    1496            lcall ?WriteData
12FA D0E0      1496            pop acc
12FC           1497   Start_Song_Select3_2:
12FC C002      1498            push AR2
12FE 7A64      1498            mov R2, #100
1300 120039    1498            lcall ?Wait_Milli_Seconds
1303 D002      1498            pop AR2
1305 208306    1499            jb BUTTON_1, Start_Song_Select3_3
1308 3083FD    1500            jnb BUTTON_1, $
130B 021335    1501            ljmp Start_Song_Select4_1
130E           1502   Start_Song_Select3_3:
130E C002      1503            push AR2
1310 7A64      1503            mov R2, #100
1312 120039    1503            lcall ?Wait_Milli_Seconds
1315 D002      1503            pop AR2
1317 208206    1504            jb BUTTON_2, Start_Song_Select3_4
131A 3082FD    1505            jnb BUTTON_2, $
131D 121D61    1506            lcall TonePlayer3
1320           1507   Start_Song_Select3_4:
1320 C002      1508            push AR2
1322 7A64      1508            mov R2, #100
1324 120039    1508            lcall ?Wait_Milli_Seconds
1327 D002      1508            pop AR2
1329 2087D0    1509            jb BUTTON_3, Start_Song_Select3_2
132C 3087FD    1510            jnb BUTTON_3, $
132F 755803    1511            mov songstartnum, #0x3
1332 020ADB    1512            ljmp Menu_select1
1335           1513   
1335           1514   Start_Song_Select4_1:
1335 C0E0      1515            push acc
1337 7401      1515            mov a, #1
1339 14        1515            dec a
133A 1200C1    1515            lcall ?Set_Cursor_1 ; Select column and row
133D D0E0      1515            pop acc
133F C0E0      1516            push acc
1341 7420      1516            mov a, #0x20
1343 12007E    1516            lcall ?WriteData
1346 D0E0      1516            pop acc
1348 C0E0      1517            push acc
134A 7406      1517            mov a, #6
134C 14        1517            dec a
134D 1200C1    1517            lcall ?Set_Cursor_1 ; Select column and row
1350 D0E0      1517            pop acc
1352 C0E0      1518            push acc
1354 7420      1518            mov a, #0x20
1356 12007E    1518            lcall ?WriteData
1359 D0E0      1518            pop acc
135B C0E0      1519            push acc
135D 740B      1519            mov a, #11
135F 14        1519            dec a
1360 1200C1    1519            lcall ?Set_Cursor_1 ; Select column and row
1363 D0E0      1519            pop acc
1365 C0E0      1520            push acc
1367 7420      1520            mov a, #0x20
1369 12007E    1520            lcall ?WriteData
136C D0E0      1520            pop acc
136E C0E0      1521            push acc
1370 7401      1521            mov a, #1
1372 14        1521            dec a
1373 1200BF    1521            lcall ?Set_Cursor_2 ; Select column and row
1376 D0E0      1521            pop acc
1378 C0E0      1522            push acc
137A 742A      1522            mov a, #0x2A
137C 12007E    1522            lcall ?WriteData
137F D0E0      1522            pop acc
1381 C0E0      1523            push acc
1383 7406      1523            mov a, #6
1385 14        1523            dec a
1386 1200BF    1523            lcall ?Set_Cursor_2 ; Select column and row
1389 D0E0      1523            pop acc
138B C0E0      1524            push acc
138D 7420      1524            mov a, #0x20
138F 12007E    1524            lcall ?WriteData
1392 D0E0      1524            pop acc
1394 C0E0      1525            push acc
1396 740B      1525            mov a, #11
1398 14        1525            dec a
1399 1200BF    1525            lcall ?Set_Cursor_2 ; Select column and row
139C D0E0      1525            pop acc
139E C0E0      1526            push acc
13A0 7420      1526            mov a, #0x20
13A2 12007E    1526            lcall ?WriteData
13A5 D0E0      1526            pop acc
13A7           1527   Start_Song_Select4_2:
13A7 C002      1528            push AR2
13A9 7A64      1528            mov R2, #100
13AB 120039    1528            lcall ?Wait_Milli_Seconds
13AE D002      1528            pop AR2
13B0 208306    1529            jb BUTTON_1, Start_Song_Select4_3
13B3 3083FD    1530            jnb BUTTON_1, $
13B6 0213E0    1531            ljmp Start_Song_Select5_1
13B9           1532   Start_Song_Select4_3:
13B9 C002      1533            push AR2
13BB 7A64      1533            mov R2, #100
13BD 120039    1533            lcall ?Wait_Milli_Seconds
13C0 D002      1533            pop AR2
13C2 208206    1534            jb BUTTON_2, Start_Song_Select4_4
13C5 3082FD    1535            jnb BUTTON_2, $
13C8 121DD4    1536            lcall TonePlayer4
13CB           1537   Start_Song_Select4_4:
13CB C002      1538            push AR2
13CD 7A64      1538            mov R2, #100
13CF 120039    1538            lcall ?Wait_Milli_Seconds
13D2 D002      1538            pop AR2
13D4 2087D0    1539            jb BUTTON_3, Start_Song_Select4_2
13D7 3087FD    1540            jnb BUTTON_3, $
13DA 755804    1541            mov songstartnum, #0x4
13DD 020ADB    1542            ljmp Menu_select1
13E0           1543   
13E0           1544   Start_Song_Select5_1:
13E0 C0E0      1545            push acc
13E2 7401      1545            mov a, #1
13E4 14        1545            dec a
13E5 1200C1    1545            lcall ?Set_Cursor_1 ; Select column and row
13E8 D0E0      1545            pop acc
13EA C0E0      1546            push acc
13EC 7420      1546            mov a, #0x20
13EE 12007E    1546            lcall ?WriteData
13F1 D0E0      1546            pop acc
13F3 C0E0      1547            push acc
13F5 7406      1547            mov a, #6
13F7 14        1547            dec a
13F8 1200C1    1547            lcall ?Set_Cursor_1 ; Select column and row
13FB D0E0      1547            pop acc
13FD C0E0      1548            push acc
13FF 7420      1548            mov a, #0x20
1401 12007E    1548            lcall ?WriteData
1404 D0E0      1548            pop acc
1406 C0E0      1549            push acc
1408 740B      1549            mov a, #11
140A 14        1549            dec a
140B 1200C1    1549            lcall ?Set_Cursor_1 ; Select column and row
140E D0E0      1549            pop acc
1410 C0E0      1550            push acc
1412 7420      1550            mov a, #0x20
1414 12007E    1550            lcall ?WriteData
1417 D0E0      1550            pop acc
1419 C0E0      1551            push acc
141B 7401      1551            mov a, #1
141D 14        1551            dec a
141E 1200BF    1551            lcall ?Set_Cursor_2 ; Select column and row
1421 D0E0      1551            pop acc
1423 C0E0      1552            push acc
1425 7420      1552            mov a, #0x20
1427 12007E    1552            lcall ?WriteData
142A D0E0      1552            pop acc
142C C0E0      1553            push acc
142E 7406      1553            mov a, #6
1430 14        1553            dec a
1431 1200BF    1553            lcall ?Set_Cursor_2 ; Select column and row
1434 D0E0      1553            pop acc
1436 C0E0      1554            push acc
1438 742A      1554            mov a, #0x2A
143A 12007E    1554            lcall ?WriteData
143D D0E0      1554            pop acc
143F C0E0      1555            push acc
1441 740B      1555            mov a, #11
1443 14        1555            dec a
1444 1200BF    1555            lcall ?Set_Cursor_2 ; Select column and row
1447 D0E0      1555            pop acc
1449 C0E0      1556            push acc
144B 7420      1556            mov a, #0x20
144D 12007E    1556            lcall ?WriteData
1450 D0E0      1556            pop acc
1452           1557   Start_Song_Select5_2:
1452 C002      1558            push AR2
1454 7A64      1558            mov R2, #100
1456 120039    1558            lcall ?Wait_Milli_Seconds
1459 D002      1558            pop AR2
145B 208306    1559            jb BUTTON_1, Start_Song_Select5_3
145E 3083FD    1560            jnb BUTTON_1, $
1461 02148B    1561            ljmp Start_Song_Select6_1
1464           1562   Start_Song_Select5_3:
1464 C002      1563            push AR2
1466 7A64      1563            mov R2, #100
1468 120039    1563            lcall ?Wait_Milli_Seconds
146B D002      1563            pop AR2
146D 208206    1564            jb BUTTON_2, Start_Song_Select5_4
1470 3082FD    1565            jnb BUTTON_2, $
1473 121E41    1566            lcall TonePlayer5
1476           1567   Start_Song_Select5_4:
1476 C002      1568            push AR2
1478 7A64      1568            mov R2, #100
147A 120039    1568            lcall ?Wait_Milli_Seconds
147D D002      1568            pop AR2
147F 2087D0    1569            jb BUTTON_3, Start_Song_Select5_2
1482 3087FD    1570            jnb BUTTON_3, $
1485 755805    1571            mov songstartnum, #0x5
1488 020ADB    1572            ljmp Menu_select1
148B           1573   
148B           1574   Start_Song_Select6_1:
148B C0E0      1575            push acc
148D 7401      1575            mov a, #1
148F 14        1575            dec a
1490 1200C1    1575            lcall ?Set_Cursor_1 ; Select column and row
1493 D0E0      1575            pop acc
1495 C0E0      1576            push acc
1497 7420      1576            mov a, #0x20
1499 12007E    1576            lcall ?WriteData
149C D0E0      1576            pop acc
149E C0E0      1577            push acc
14A0 7406      1577            mov a, #6
14A2 14        1577            dec a
14A3 1200C1    1577            lcall ?Set_Cursor_1 ; Select column and row
14A6 D0E0      1577            pop acc
14A8 C0E0      1578            push acc
14AA 7420      1578            mov a, #0x20
14AC 12007E    1578            lcall ?WriteData
14AF D0E0      1578            pop acc
14B1 C0E0      1579            push acc
14B3 740B      1579            mov a, #11
14B5 14        1579            dec a
14B6 1200C1    1579            lcall ?Set_Cursor_1 ; Select column and row
14B9 D0E0      1579            pop acc
14BB C0E0      1580            push acc
14BD 7420      1580            mov a, #0x20
14BF 12007E    1580            lcall ?WriteData
14C2 D0E0      1580            pop acc
14C4 C0E0      1581            push acc
14C6 7401      1581            mov a, #1
14C8 14        1581            dec a
14C9 1200BF    1581            lcall ?Set_Cursor_2 ; Select column and row
14CC D0E0      1581            pop acc
14CE C0E0      1582            push acc
14D0 7420      1582            mov a, #0x20
14D2 12007E    1582            lcall ?WriteData
14D5 D0E0      1582            pop acc
14D7 C0E0      1583            push acc
14D9 7406      1583            mov a, #6
14DB 14        1583            dec a
14DC 1200BF    1583            lcall ?Set_Cursor_2 ; Select column and row
14DF D0E0      1583            pop acc
14E1 C0E0      1584            push acc
14E3 7420      1584            mov a, #0x20
14E5 12007E    1584            lcall ?WriteData
14E8 D0E0      1584            pop acc
14EA C0E0      1585            push acc
14EC 740B      1585            mov a, #11
14EE 14        1585            dec a
14EF 1200BF    1585            lcall ?Set_Cursor_2 ; Select column and row
14F2 D0E0      1585            pop acc
14F4 C0E0      1586            push acc
14F6 742A      1586            mov a, #0x2A
14F8 12007E    1586            lcall ?WriteData
14FB D0E0      1586            pop acc
14FD           1587   Start_Song_Select6_2:
14FD C002      1588            push AR2
14FF 7A64      1588            mov R2, #100
1501 120039    1588            lcall ?Wait_Milli_Seconds
1504 D002      1588            pop AR2
1506 208306    1589            jb BUTTON_1, Start_Song_Select6_3
1509 3083FD    1590            jnb BUTTON_1, $
150C 021134    1591            ljmp Start_Song_Select1_1
150F           1592   Start_Song_Select6_3:
150F C002      1593            push AR2
1511 7A64      1593            mov R2, #100
1513 120039    1593            lcall ?Wait_Milli_Seconds
1516 D002      1593            pop AR2
1518 208206    1594            jb BUTTON_2, Start_Song_Select6_4
151B 3082FD    1595            jnb BUTTON_2, $
151E 121EBD    1596            lcall TonePlayer6
1521           1597   Start_Song_Select6_4:
1521 C002      1598            push AR2
1523 7A64      1598            mov R2, #100
1525 120039    1598            lcall ?Wait_Milli_Seconds
1528 D002      1598            pop AR2
152A 2087D0    1599            jb BUTTON_3, Start_Song_Select6_2
152D 3087FD    1600            jnb BUTTON_3, $
1530 755806    1601            mov songstartnum, #0x6
1533 020ADB    1602            ljmp Menu_select1
1536           1603   ;;;;
1536           1604   End_Song_Select:
1536 7401      1605            mov a, #0x01
1538 120083    1605            lcall ?WriteCommand
153B C002      1606            push AR2
153D 7A32      1606            mov R2, #50
153F 120039    1606            lcall ?Wait_Milli_Seconds
1542 D002      1606            pop AR2
1544 C0E0      1607            push acc
1546 7401      1607            mov a, #1
1548 14        1607            dec a
1549 1200C1    1607            lcall ?Set_Cursor_1 ; Select column and row
154C D0E0      1607            pop acc
154E C083      1608            push dph
1550 C082      1608            push dpl
1552 C0E0      1608            push acc
1554 90045C    1608            mov dptr, #Song_Message1
1557 1200B4    1608            lcall ?Send_Constant_String
155A D0E0      1608            pop acc
155C D082      1608            pop dpl
155E D083      1608            pop dph
1560 C0E0      1609            push acc
1562 7401      1609            mov a, #1
1564 14        1609            dec a
1565 1200BF    1609            lcall ?Set_Cursor_2 ; Select column and row
1568 D0E0      1609            pop acc
156A C083      1610            push dph
156C C082      1610            push dpl
156E C0E0      1610            push acc
1570 90046B    1610            mov dptr, #Song_Message2
1573 1200B4    1610            lcall ?Send_Constant_String
1576 D0E0      1610            pop acc
1578 D082      1610            pop dpl
157A D083      1610            pop dph
157C           1611            
157C           1612   End_Song_Select1_1:
157C C0E0      1613            push acc
157E 7401      1613            mov a, #1
1580 14        1613            dec a
1581 1200C1    1613            lcall ?Set_Cursor_1 ; Select column and row
1584 D0E0      1613            pop acc
1586 C0E0      1614            push acc
1588 742A      1614            mov a, #0x2A
158A 12007E    1614            lcall ?WriteData
158D D0E0      1614            pop acc
158F C0E0      1615            push acc
1591 7406      1615            mov a, #6
1593 14        1615            dec a
1594 1200C1    1615            lcall ?Set_Cursor_1 ; Select column and row
1597 D0E0      1615            pop acc
1599 C0E0      1616            push acc
159B 7420      1616            mov a, #0x20
159D 12007E    1616            lcall ?WriteData
15A0 D0E0      1616            pop acc
15A2 C0E0      1617            push acc
15A4 740B      1617            mov a, #11
15A6 14        1617            dec a
15A7 1200C1    1617            lcall ?Set_Cursor_1 ; Select column and row
15AA D0E0      1617            pop acc
15AC C0E0      1618            push acc
15AE 7420      1618            mov a, #0x20
15B0 12007E    1618            lcall ?WriteData
15B3 D0E0      1618            pop acc
15B5 C0E0      1619            push acc
15B7 7401      1619            mov a, #1
15B9 14        1619            dec a
15BA 1200BF    1619            lcall ?Set_Cursor_2 ; Select column and row
15BD D0E0      1619            pop acc
15BF C0E0      1620            push acc
15C1 7420      1620            mov a, #0x20
15C3 12007E    1620            lcall ?WriteData
15C6 D0E0      1620            pop acc
15C8 C0E0      1621            push acc
15CA 7406      1621            mov a, #6
15CC 14        1621            dec a
15CD 1200BF    1621            lcall ?Set_Cursor_2 ; Select column and row
15D0 D0E0      1621            pop acc
15D2 C0E0      1622            push acc
15D4 7420      1622            mov a, #0x20
15D6 12007E    1622            lcall ?WriteData
15D9 D0E0      1622            pop acc
15DB C0E0      1623            push acc
15DD 740B      1623            mov a, #11
15DF 14        1623            dec a
15E0 1200BF    1623            lcall ?Set_Cursor_2 ; Select column and row
15E3 D0E0      1623            pop acc
15E5 C0E0      1624            push acc
15E7 7420      1624            mov a, #0x20
15E9 12007E    1624            lcall ?WriteData
15EC D0E0      1624            pop acc
15EE           1625   End_Song_Select1_2:
15EE C002      1626            push AR2
15F0 7A64      1626            mov R2, #100
15F2 120039    1626            lcall ?Wait_Milli_Seconds
15F5 D002      1626            pop AR2
15F7 208306    1627            jb BUTTON_1, End_Song_Select1_3
15FA 3083FD    1628            jnb BUTTON_1, $
15FD 021627    1629            ljmp End_Song_Select2_1
1600           1630   End_Song_Select1_3:
1600 C002      1631            push AR2
1602 7A64      1631            mov R2, #100
1604 120039    1631            lcall ?Wait_Milli_Seconds
1607 D002      1631            pop AR2
1609 208206    1632            jb BUTTON_2, End_Song_Select1_4
160C 3082FD    1633            jnb BUTTON_2, $
160F 121C4E    1634            lcall TonePlayer1
1612           1635   End_Song_Select1_4:
1612 C002      1636            push AR2
1614 7A64      1636            mov R2, #100
1616 120039    1636            lcall ?Wait_Milli_Seconds
1619 D002      1636            pop AR2
161B 2087D0    1637            jb BUTTON_3, End_Song_Select1_2
161E 3087FD    1638            jnb BUTTON_3, $
1621 755901    1639            mov songendnum, #0x1
1624 020ADB    1640            ljmp Menu_select1
1627           1641   
1627           1642   End_Song_Select2_1:
1627 C0E0      1643            push acc
1629 7401      1643            mov a, #1
162B 14        1643            dec a
162C 1200C1    1643            lcall ?Set_Cursor_1 ; Select column and row
162F D0E0      1643            pop acc
1631 C0E0      1644            push acc
1633 7420      1644            mov a, #0x20
1635 12007E    1644            lcall ?WriteData
1638 D0E0      1644            pop acc
163A C0E0      1645            push acc
163C 7406      1645            mov a, #6
163E 14        1645            dec a
163F 1200C1    1645            lcall ?Set_Cursor_1 ; Select column and row
1642 D0E0      1645            pop acc
1644 C0E0      1646            push acc
1646 742A      1646            mov a, #0x2A
1648 12007E    1646            lcall ?WriteData
164B D0E0      1646            pop acc
164D C0E0      1647            push acc
164F 740B      1647            mov a, #11
1651 14        1647            dec a
1652 1200C1    1647            lcall ?Set_Cursor_1 ; Select column and row
1655 D0E0      1647            pop acc
1657 C0E0      1648            push acc
1659 7420      1648            mov a, #0x20
165B 12007E    1648            lcall ?WriteData
165E D0E0      1648            pop acc
1660 C0E0      1649            push acc
1662 7401      1649            mov a, #1
1664 14        1649            dec a
1665 1200BF    1649            lcall ?Set_Cursor_2 ; Select column and row
1668 D0E0      1649            pop acc
166A C0E0      1650            push acc
166C 7420      1650            mov a, #0x20
166E 12007E    1650            lcall ?WriteData
1671 D0E0      1650            pop acc
1673 C0E0      1651            push acc
1675 7406      1651            mov a, #6
1677 14        1651            dec a
1678 1200BF    1651            lcall ?Set_Cursor_2 ; Select column and row
167B D0E0      1651            pop acc
167D C0E0      1652            push acc
167F 7420      1652            mov a, #0x20
1681 12007E    1652            lcall ?WriteData
1684 D0E0      1652            pop acc
1686 C0E0      1653            push acc
1688 740B      1653            mov a, #11
168A 14        1653            dec a
168B 1200BF    1653            lcall ?Set_Cursor_2 ; Select column and row
168E D0E0      1653            pop acc
1690 C0E0      1654            push acc
1692 7420      1654            mov a, #0x20
1694 12007E    1654            lcall ?WriteData
1697 D0E0      1654            pop acc
1699           1655   End_Song_Select2_2:
1699 C002      1656            push AR2
169B 7A64      1656            mov R2, #100
169D 120039    1656            lcall ?Wait_Milli_Seconds
16A0 D002      1656            pop AR2
16A2 208306    1657            jb BUTTON_1, End_Song_Select2_3
16A5 3083FD    1658            jnb BUTTON_1, $
16A8 0216D2    1659            ljmp End_Song_Select3_1
16AB           1660   End_Song_Select2_3:
16AB C002      1661            push AR2
16AD 7A64      1661            mov R2, #100
16AF 120039    1661            lcall ?Wait_Milli_Seconds
16B2 D002      1661            pop AR2
16B4 208206    1662            jb BUTTON_2, End_Song_Select2_4
16B7 3082FD    1663            jnb BUTTON_2, $
16BA 121CF7    1664            lcall TonePlayer2
16BD           1665   End_Song_Select2_4:
16BD C002      1666            push AR2
16BF 7A64      1666            mov R2, #100
16C1 120039    1666            lcall ?Wait_Milli_Seconds
16C4 D002      1666            pop AR2
16C6 2087D0    1667            jb BUTTON_3, End_Song_Select2_2
16C9 3087FD    1668            jnb BUTTON_3, $
16CC 755902    1669            mov songendnum, #0x2
16CF 020ADB    1670            ljmp Menu_select1
16D2           1671   
16D2           1672   End_Song_Select3_1:
16D2 C0E0      1673            push acc
16D4 7401      1673            mov a, #1
16D6 14        1673            dec a
16D7 1200C1    1673            lcall ?Set_Cursor_1 ; Select column and row
16DA D0E0      1673            pop acc
16DC C0E0      1674            push acc
16DE 7420      1674            mov a, #0x20
16E0 12007E    1674            lcall ?WriteData
16E3 D0E0      1674            pop acc
16E5 C0E0      1675            push acc
16E7 7406      1675            mov a, #6
16E9 14        1675            dec a
16EA 1200C1    1675            lcall ?Set_Cursor_1 ; Select column and row
16ED D0E0      1675            pop acc
16EF C0E0      1676            push acc
16F1 7420      1676            mov a, #0x20
16F3 12007E    1676            lcall ?WriteData
16F6 D0E0      1676            pop acc
16F8 C0E0      1677            push acc
16FA 740B      1677            mov a, #11
16FC 14        1677            dec a
16FD 1200C1    1677            lcall ?Set_Cursor_1 ; Select column and row
1700 D0E0      1677            pop acc
1702 C0E0      1678            push acc
1704 742A      1678            mov a, #0x2A
1706 12007E    1678            lcall ?WriteData
1709 D0E0      1678            pop acc
170B C0E0      1679            push acc
170D 7401      1679            mov a, #1
170F 14        1679            dec a
1710 1200BF    1679            lcall ?Set_Cursor_2 ; Select column and row
1713 D0E0      1679            pop acc
1715 C0E0      1680            push acc
1717 7420      1680            mov a, #0x20
1719 12007E    1680            lcall ?WriteData
171C D0E0      1680            pop acc
171E C0E0      1681            push acc
1720 7406      1681            mov a, #6
1722 14        1681            dec a
1723 1200BF    1681            lcall ?Set_Cursor_2 ; Select column and row
1726 D0E0      1681            pop acc
1728 C0E0      1682            push acc
172A 7420      1682            mov a, #0x20
172C 12007E    1682            lcall ?WriteData
172F D0E0      1682            pop acc
1731 C0E0      1683            push acc
1733 740B      1683            mov a, #11
1735 14        1683            dec a
1736 1200BF    1683            lcall ?Set_Cursor_2 ; Select column and row
1739 D0E0      1683            pop acc
173B C0E0      1684            push acc
173D 7420      1684            mov a, #0x20
173F 12007E    1684            lcall ?WriteData
1742 D0E0      1684            pop acc
1744           1685   End_Song_Select3_2:
1744 C002      1686            push AR2
1746 7A64      1686            mov R2, #100
1748 120039    1686            lcall ?Wait_Milli_Seconds
174B D002      1686            pop AR2
174D 208306    1687            jb BUTTON_1, End_Song_Select3_3
1750 3083FD    1688            jnb BUTTON_1, $
1753 02177D    1689            ljmp End_Song_Select4_1
1756           1690   End_Song_Select3_3:
1756 C002      1691            push AR2
1758 7A64      1691            mov R2, #100
175A 120039    1691            lcall ?Wait_Milli_Seconds
175D D002      1691            pop AR2
175F 208206    1692            jb BUTTON_2, End_Song_Select3_4
1762 3082FD    1693            jnb BUTTON_2, $
1765 121D61    1694            lcall TonePlayer3
1768           1695   End_Song_Select3_4:
1768 C002      1696            push AR2
176A 7A64      1696            mov R2, #100
176C 120039    1696            lcall ?Wait_Milli_Seconds
176F D002      1696            pop AR2
1771 2087D0    1697            jb BUTTON_3, End_Song_Select3_2
1774 3087FD    1698            jnb BUTTON_3, $
1777 755903    1699            mov songendnum, #0x3
177A 020ADB    1700            ljmp Menu_select1
177D           1701   
177D           1702   End_Song_Select4_1:
177D C0E0      1703            push acc
177F 7401      1703            mov a, #1
1781 14        1703            dec a
1782 1200C1    1703            lcall ?Set_Cursor_1 ; Select column and row
1785 D0E0      1703            pop acc
1787 C0E0      1704            push acc
1789 7420      1704            mov a, #0x20
178B 12007E    1704            lcall ?WriteData
178E D0E0      1704            pop acc
1790 C0E0      1705            push acc
1792 7406      1705            mov a, #6
1794 14        1705            dec a
1795 1200C1    1705            lcall ?Set_Cursor_1 ; Select column and row
1798 D0E0      1705            pop acc
179A C0E0      1706            push acc
179C 7420      1706            mov a, #0x20
179E 12007E    1706            lcall ?WriteData
17A1 D0E0      1706            pop acc
17A3 C0E0      1707            push acc
17A5 740B      1707            mov a, #11
17A7 14        1707            dec a
17A8 1200C1    1707            lcall ?Set_Cursor_1 ; Select column and row
17AB D0E0      1707            pop acc
17AD C0E0      1708            push acc
17AF 7420      1708            mov a, #0x20
17B1 12007E    1708            lcall ?WriteData
17B4 D0E0      1708            pop acc
17B6 C0E0      1709            push acc
17B8 7401      1709            mov a, #1
17BA 14        1709            dec a
17BB 1200BF    1709            lcall ?Set_Cursor_2 ; Select column and row
17BE D0E0      1709            pop acc
17C0 C0E0      1710            push acc
17C2 742A      1710            mov a, #0x2A
17C4 12007E    1710            lcall ?WriteData
17C7 D0E0      1710            pop acc
17C9 C0E0      1711            push acc
17CB 7406      1711            mov a, #6
17CD 14        1711            dec a
17CE 1200BF    1711            lcall ?Set_Cursor_2 ; Select column and row
17D1 D0E0      1711            pop acc
17D3 C0E0      1712            push acc
17D5 7420      1712            mov a, #0x20
17D7 12007E    1712            lcall ?WriteData
17DA D0E0      1712            pop acc
17DC C0E0      1713            push acc
17DE 740B      1713            mov a, #11
17E0 14        1713            dec a
17E1 1200BF    1713            lcall ?Set_Cursor_2 ; Select column and row
17E4 D0E0      1713            pop acc
17E6 C0E0      1714            push acc
17E8 7420      1714            mov a, #0x20
17EA 12007E    1714            lcall ?WriteData
17ED D0E0      1714            pop acc
17EF           1715   End_Song_Select4_2:
17EF C002      1716            push AR2
17F1 7A64      1716            mov R2, #100
17F3 120039    1716            lcall ?Wait_Milli_Seconds
17F6 D002      1716            pop AR2
17F8 208306    1717            jb BUTTON_1, End_Song_Select4_3
17FB 3083FD    1718            jnb BUTTON_1, $
17FE 021828    1719            ljmp End_Song_Select5_1
1801           1720   End_Song_Select4_3:
1801 C002      1721            push AR2
1803 7A64      1721            mov R2, #100
1805 120039    1721            lcall ?Wait_Milli_Seconds
1808 D002      1721            pop AR2
180A 208206    1722            jb BUTTON_2, End_Song_Select4_4
180D 3082FD    1723            jnb BUTTON_2, $
1810 121DD4    1724            lcall TonePlayer4
1813           1725   End_Song_Select4_4:
1813 C002      1726            push AR2
1815 7A64      1726            mov R2, #100
1817 120039    1726            lcall ?Wait_Milli_Seconds
181A D002      1726            pop AR2
181C 2087D0    1727            jb BUTTON_3, End_Song_Select4_2
181F 3087FD    1728            jnb BUTTON_3, $
1822 755904    1729            mov songendnum, #0x4
1825 020ADB    1730            ljmp Menu_select1
1828           1731   
1828           1732   End_Song_Select5_1:
1828 C0E0      1733            push acc
182A 7401      1733            mov a, #1
182C 14        1733            dec a
182D 1200C1    1733            lcall ?Set_Cursor_1 ; Select column and row
1830 D0E0      1733            pop acc
1832 C0E0      1734            push acc
1834 7420      1734            mov a, #0x20
1836 12007E    1734            lcall ?WriteData
1839 D0E0      1734            pop acc
183B C0E0      1735            push acc
183D 7406      1735            mov a, #6
183F 14        1735            dec a
1840 1200C1    1735            lcall ?Set_Cursor_1 ; Select column and row
1843 D0E0      1735            pop acc
1845 C0E0      1736            push acc
1847 7420      1736            mov a, #0x20
1849 12007E    1736            lcall ?WriteData
184C D0E0      1736            pop acc
184E C0E0      1737            push acc
1850 740B      1737            mov a, #11
1852 14        1737            dec a
1853 1200C1    1737            lcall ?Set_Cursor_1 ; Select column and row
1856 D0E0      1737            pop acc
1858 C0E0      1738            push acc
185A 7420      1738            mov a, #0x20
185C 12007E    1738            lcall ?WriteData
185F D0E0      1738            pop acc
1861 C0E0      1739            push acc
1863 7401      1739            mov a, #1
1865 14        1739            dec a
1866 1200BF    1739            lcall ?Set_Cursor_2 ; Select column and row
1869 D0E0      1739            pop acc
186B C0E0      1740            push acc
186D 7420      1740            mov a, #0x20
186F 12007E    1740            lcall ?WriteData
1872 D0E0      1740            pop acc
1874 C0E0      1741            push acc
1876 7406      1741            mov a, #6
1878 14        1741            dec a
1879 1200BF    1741            lcall ?Set_Cursor_2 ; Select column and row
187C D0E0      1741            pop acc
187E C0E0      1742            push acc
1880 742A      1742            mov a, #0x2A
1882 12007E    1742            lcall ?WriteData
1885 D0E0      1742            pop acc
1887 C0E0      1743            push acc
1889 740B      1743            mov a, #11
188B 14        1743            dec a
188C 1200BF    1743            lcall ?Set_Cursor_2 ; Select column and row
188F D0E0      1743            pop acc
1891 C0E0      1744            push acc
1893 7420      1744            mov a, #0x20
1895 12007E    1744            lcall ?WriteData
1898 D0E0      1744            pop acc
189A           1745   End_Song_Select5_2:
189A C002      1746            push AR2
189C 7A64      1746            mov R2, #100
189E 120039    1746            lcall ?Wait_Milli_Seconds
18A1 D002      1746            pop AR2
18A3 208306    1747            jb BUTTON_1, End_Song_Select5_3
18A6 3083FD    1748            jnb BUTTON_1, $
18A9 0218D3    1749            ljmp End_Song_Select6_1
18AC           1750   End_Song_Select5_3:
18AC C002      1751            push AR2
18AE 7A64      1751            mov R2, #100
18B0 120039    1751            lcall ?Wait_Milli_Seconds
18B3 D002      1751            pop AR2
18B5 208206    1752            jb BUTTON_2, End_Song_Select5_4
18B8 3082FD    1753            jnb BUTTON_2, $
18BB 121E41    1754            lcall TonePlayer5
18BE           1755   End_Song_Select5_4:
18BE C002      1756            push AR2
18C0 7A64      1756            mov R2, #100
18C2 120039    1756            lcall ?Wait_Milli_Seconds
18C5 D002      1756            pop AR2
18C7 2087D0    1757            jb BUTTON_3, End_Song_Select5_2
18CA 3087FD    1758            jnb BUTTON_3, $
18CD 755905    1759            mov songendnum, #0x5
18D0 020ADB    1760            ljmp Menu_select1
18D3           1761   
18D3           1762   End_Song_Select6_1:
18D3 C0E0      1763            push acc
18D5 7401      1763            mov a, #1
18D7 14        1763            dec a
18D8 1200C1    1763            lcall ?Set_Cursor_1 ; Select column and row
18DB D0E0      1763            pop acc
18DD C0E0      1764            push acc
18DF 7420      1764            mov a, #0x20
18E1 12007E    1764            lcall ?WriteData
18E4 D0E0      1764            pop acc
18E6 C0E0      1765            push acc
18E8 7406      1765            mov a, #6
18EA 14        1765            dec a
18EB 1200C1    1765            lcall ?Set_Cursor_1 ; Select column and row
18EE D0E0      1765            pop acc
18F0 C0E0      1766            push acc
18F2 7420      1766            mov a, #0x20
18F4 12007E    1766            lcall ?WriteData
18F7 D0E0      1766            pop acc
18F9 C0E0      1767            push acc
18FB 740B      1767            mov a, #11
18FD 14        1767            dec a
18FE 1200C1    1767            lcall ?Set_Cursor_1 ; Select column and row
1901 D0E0      1767            pop acc
1903 C0E0      1768            push acc
1905 7420      1768            mov a, #0x20
1907 12007E    1768            lcall ?WriteData
190A D0E0      1768            pop acc
190C C0E0      1769            push acc
190E 7401      1769            mov a, #1
1910 14        1769            dec a
1911 1200BF    1769            lcall ?Set_Cursor_2 ; Select column and row
1914 D0E0      1769            pop acc
1916 C0E0      1770            push acc
1918 7420      1770            mov a, #0x20
191A 12007E    1770            lcall ?WriteData
191D D0E0      1770            pop acc
191F C0E0      1771            push acc
1921 7406      1771            mov a, #6
1923 14        1771            dec a
1924 1200BF    1771            lcall ?Set_Cursor_2 ; Select column and row
1927 D0E0      1771            pop acc
1929 C0E0      1772            push acc
192B 7420      1772            mov a, #0x20
192D 12007E    1772            lcall ?WriteData
1930 D0E0      1772            pop acc
1932 C0E0      1773            push acc
1934 740B      1773            mov a, #11
1936 14        1773            dec a
1937 1200BF    1773            lcall ?Set_Cursor_2 ; Select column and row
193A D0E0      1773            pop acc
193C C0E0      1774            push acc
193E 742A      1774            mov a, #0x2A
1940 12007E    1774            lcall ?WriteData
1943 D0E0      1774            pop acc
1945           1775   End_Song_Select6_2:
1945 C002      1776            push AR2
1947 7A64      1776            mov R2, #100
1949 120039    1776            lcall ?Wait_Milli_Seconds
194C D002      1776            pop AR2
194E 208306    1777            jb BUTTON_1, End_Song_Select6_3
1951 3083FD    1778            jnb BUTTON_1, $
1954 02157C    1779            ljmp End_Song_Select1_1
1957           1780   End_Song_Select6_3:
1957 C002      1781            push AR2
1959 7A64      1781            mov R2, #100
195B 120039    1781            lcall ?Wait_Milli_Seconds
195E D002      1781            pop AR2
1960 208206    1782            jb BUTTON_2, End_Song_Select6_4
1963 3082FD    1783            jnb BUTTON_2, $
1966 121EBD    1784            lcall TonePlayer6
1969           1785   End_Song_Select6_4:
1969 C002      1786            push AR2
196B 7A64      1786            mov R2, #100
196D 120039    1786            lcall ?Wait_Milli_Seconds
1970 D002      1786            pop AR2
1972 2087D0    1787            jb BUTTON_3, End_Song_Select6_2
1975 3087FD    1788            jnb BUTTON_3, $
1978 755906    1789            mov songendnum, #0x6
197B 020ADB    1790            ljmp Menu_select1
197E           1791   
197E           1792   
197E           1793   SMStartSongPlay:                     
197E E558      1794            mov a, songstartnum
1980 B40106    1795            cjne a, #0x01, SMStartSongPlay2
1983 121C4E    1796            lcall TonePlayer1
1986 0219B3    1797            ljmp SMStartSongPlayFinish
1989           1798   SMStartSongPlay2:
1989 B40206    1799            cjne a, #0x02, SMStartSongPlay3
198C 121CF7    1800            lcall TonePlayer2
198F 0219B3    1801            ljmp SMStartSongPlayFinish
1992           1802   SMStartSongPlay3:
1992 B40306    1803            cjne a, #0x03, SMStartSongPlay4
1995 121D61    1804            lcall TonePlayer3
1998 0219B3    1805            ljmp SMStartSongPlayFinish
199B           1806   SMStartSongPlay4:
199B B40406    1807            cjne a, #0x04, SMStartSongPlay5
199E 121DD4    1808            lcall TonePlayer4
19A1 0219B3    1809            ljmp SMStartSongPlayFinish
19A4           1810   SMStartSongPlay5:
19A4 B40506    1811            cjne a, #0x05, SMStartSongPlay6
19A7 121E41    1812            lcall TonePlayer5
19AA 0219B3    1813            ljmp SMStartSongPlayFinish
19AD           1814   SMStartSongPlay6:
19AD B40603    1815            cjne a, #0x06, SMStartSongPlayFinish
19B0 121EBD    1816            lcall TonePlayer6
19B3           1817   SMStartSongPlayFinish:
19B3 C002      1818            push AR2
19B5 7A32      1818            mov R2, #50
19B7 120039    1818            lcall ?Wait_Milli_Seconds
19BA D002      1818            pop AR2
19BC 22        1819            ret
19BD           1820            
19BD           1821   SMEndSongPlay:                       
19BD E558      1822            mov a, songstartnum
19BF B40106    1823            cjne a, #0x01, SMEndSongPlay2
19C2 121C4E    1824            lcall TonePlayer1
19C5 0219F2    1825            ljmp SMEndSongPlayFinish
19C8           1826   SMEndSongPlay2:
19C8 B40206    1827            cjne a, #0x02, SMEndSongPlay3
19CB 121CF7    1828            lcall TonePlayer2
19CE 0219F2    1829            ljmp SMEndSongPlayFinish
19D1           1830   SMEndSongPlay3:
19D1 B40306    1831            cjne a, #0x03, SMEndSongPlay4
19D4 121D61    1832            lcall TonePlayer3
19D7 0219F2    1833            ljmp SMEndSongPlayFinish
19DA           1834   SMEndSongPlay4:
19DA B40406    1835            cjne a, #0x04, SMEndSongPlay5
19DD 121DD4    1836            lcall TonePlayer4
19E0 0219F2    1837            ljmp SMEndSongPlayFinish
19E3           1838   SMEndSongPlay5:
19E3 B40506    1839            cjne a, #0x05, SMEndSongPlay6
19E6 121E41    1840            lcall TonePlayer5
19E9 0219F2    1841            ljmp SMEndSongPlayFinish
19EC           1842   SMEndSongPlay6:
19EC B40603    1843            cjne a, #0x06, SMEndSongPlayFinish
19EF 121EBD    1844            lcall TonePlayer6
19F2           1845   SMEndSongPlayFinish:
19F2 C002      1846            push AR2
19F4 7A32      1846            mov R2, #50
19F6 120039    1846            lcall ?Wait_Milli_Seconds
19F9 D002      1846            pop AR2
19FB 22        1847            ret
19FC           1848   
19FC           1849            
19FC           1850   
19FC           1851   
19FC           1852   
19FC           1853   ;--------------------;
19FC           1854   ; Bonus - Song stuff ;
19FC           1855   ;--------------------;
19FC           1856   ;;;These aren't used in this program (for now at least)
19FC           1857   Tone1:
19FC 7401      1858            mov a, #0x01
19FE 120083    1858            lcall ?WriteCommand
1A01 C002      1859            push AR2
1A03 7A32      1859            mov R2, #50
1A05 120039    1859            lcall ?Wait_Milli_Seconds
1A08 D002      1859            pop AR2
1A0A C0E0      1860            push acc
1A0C 7401      1860            mov a, #1
1A0E 14        1860            dec a
1A0F 1200C1    1860            lcall ?Set_Cursor_1 ; Select column and row
1A12 D0E0      1860            pop acc
1A14 C083      1861            push dph
1A16 C082      1861            push dpl
1A18 C0E0      1861            push acc
1A1A 90045C    1861            mov dptr, #Song_Message1
1A1D 1200B4    1861            lcall ?Send_Constant_String
1A20 D0E0      1861            pop acc
1A22 D082      1861            pop dpl
1A24 D083      1861            pop dph
1A26 C0E0      1862            push acc
1A28 7401      1862            mov a, #1
1A2A 14        1862            dec a
1A2B 1200BF    1862            lcall ?Set_Cursor_2 ; Select column and row
1A2E D0E0      1862            pop acc
1A30 C083      1863            push dph
1A32 C082      1863            push dpl
1A34 C0E0      1863            push acc
1A36 90046B    1863            mov dptr, #Song_Message2
1A39 1200B4    1863            lcall ?Send_Constant_String
1A3C D0E0      1863            pop acc
1A3E D082      1863            pop dpl
1A40 D083      1863            pop dph
1A42           1864   
1A42           1865   Tone2:
1A42 208306    1866            jb BUTTON_1, Tone2_2
1A45 3083FD    1867            jnb BUTTON_1, $
1A48 021C4E    1868            ljmp TonePlayer1
1A4B           1869   Tone2_2:
1A4B 208206    1870            jb BUTTON_2, Tone2_3
1A4E 3082FD    1871            jnb BUTTON_2, $
1A51 021CF7    1872            ljmp TonePlayer2
1A54           1873   Tone2_3:
1A54 2087EB    1874            jb BUTTON_3, Tone2
1A57 3087FD    1875            jnb BUTTON_3, $
1A5A 021D61    1876            ljmp TonePlayer3
1A5D           1877            
1A5D           1878   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1A5D           1879   ToneC4:
1A5D C000      1880            push ar0
1A5F 785B      1880            mov r0, #high(C4_reload)
1A61 1200FA    1880            lcall ?ToneSetH
1A64 D000      1880            pop ar0
1A66 C000      1881            push ar0
1A68 781E      1881            mov r0, #low(C4_reload)
1A6A 1200FF    1881            lcall ?ToneSetL
1A6D D000      1881            pop ar0
1A6F 22        1882            ret
1A70           1883   
1A70           1884   ToneD4:
1A70 C000      1885            push ar0
1A72 786D      1885            mov r0, #high(D4_reload)
1A74 1200FA    1885            lcall ?ToneSetH
1A77 D000      1885            pop ar0
1A79 C000      1886            push ar0
1A7B 7810      1886            mov r0, #low(D4_reload)
1A7D 1200FF    1886            lcall ?ToneSetL
1A80 D000      1886            pop ar0
1A82 22        1887            ret
1A83           1888   
1A83           1889   ToneE4:
1A83 C000      1890            push ar0
1A85 787D      1890            mov r0, #high(E4_reload)
1A87 1200FA    1890            lcall ?ToneSetH
1A8A D000      1890            pop ar0
1A8C C000      1891            push ar0
1A8E 7818      1891            mov r0, #low(E4_reload)
1A90 1200FF    1891            lcall ?ToneSetL
1A93 D000      1891            pop ar0
1A95 22        1892            ret
1A96           1893   
1A96           1894   ToneF4:
1A96 C000      1895            push ar0
1A98 7884      1895            mov r0, #high(F4_reload)
1A9A 1200FA    1895            lcall ?ToneSetH
1A9D D000      1895            pop ar0
1A9F C000      1896            push ar0
1AA1 7838      1896            mov r0, #low(F4_reload)
1AA3 1200FF    1896            lcall ?ToneSetL
1AA6 D000      1896            pop ar0
1AA8 22        1897            ret
1AA9           1898   
1AA9           1899   ToneG4:
1AA9 C000      1900            push ar0
1AAB 7891      1900            mov r0, #high(G4_reload)
1AAD 1200FA    1900            lcall ?ToneSetH
1AB0 D000      1900            pop ar0
1AB2 C000      1901            push ar0
1AB4 78CC      1901            mov r0, #low(G4_reload)
1AB6 1200FF    1901            lcall ?ToneSetL
1AB9 D000      1901            pop ar0
1ABB 22        1902            ret
1ABC           1903                    
1ABC           1904   ToneA4:
1ABC C000      1905            push ar0
1ABE 789D      1905            mov r0, #high(A4_reload)
1AC0 1200FA    1905            lcall ?ToneSetH
1AC3 D000      1905            pop ar0
1AC5 C000      1906            push ar0
1AC7 78D2      1906            mov r0, #low(A4_reload)
1AC9 1200FF    1906            lcall ?ToneSetL
1ACC D000      1906            pop ar0
1ACE 22        1907            ret
1ACF           1908            
1ACF           1909   ToneB4:
1ACF C000      1910            push ar0
1AD1 78A8      1910            mov r0, #high(B4_reload)
1AD3 1200FA    1910            lcall ?ToneSetH
1AD6 D000      1910            pop ar0
1AD8 C000      1911            push ar0
1ADA 788D      1911            mov r0, #low(B4_reload)
1ADC 1200FF    1911            lcall ?ToneSetL
1ADF D000      1911            pop ar0
1AE1 22        1912            ret
1AE2           1913   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1AE2           1914   ToneC5:
1AE2 C000      1915            push ar0
1AE4 78AD      1915            mov r0, #high(C5_reload)
1AE6 1200FA    1915            lcall ?ToneSetH
1AE9 D000      1915            pop ar0
1AEB C000      1916            push ar0
1AED 7867      1916            mov r0, #low(C5_reload)
1AEF 1200FF    1916            lcall ?ToneSetL
1AF2 D000      1916            pop ar0
1AF4 22        1917            ret
1AF5           1918   
1AF5           1919   ToneD5:
1AF5 C000      1920            push ar0
1AF7 78B6      1920            mov r0, #high(D5_reload)
1AF9 1200FA    1920            lcall ?ToneSetH
1AFC D000      1920            pop ar0
1AFE C000      1921            push ar0
1B00 7868      1921            mov r0, #low(D5_reload)
1B02 1200FF    1921            lcall ?ToneSetL
1B05 D000      1921            pop ar0
1B07 22        1922            ret
1B08           1923            
1B08           1924   ToneE5:
1B08 C000      1925            push ar0
1B0A 78BE      1925            mov r0, #high(E5_reload)
1B0C 1200FA    1925            lcall ?ToneSetH
1B0F D000      1925            pop ar0
1B11 C000      1926            push ar0
1B13 7873      1926            mov r0, #low(E5_reload)
1B15 1200FF    1926            lcall ?ToneSetL
1B18 D000      1926            pop ar0
1B1A 22        1927            ret
1B1B           1928            
1B1B           1929   ToneF5:
1B1B C000      1930            push ar0
1B1D 78C2      1930            mov r0, #high(F5_reload)
1B1F 1200FA    1930            lcall ?ToneSetH
1B22 D000      1930            pop ar0
1B24 C000      1931            push ar0
1B26 781C      1931            mov r0, #low(F5_reload)
1B28 1200FF    1931            lcall ?ToneSetL
1B2B D000      1931            pop ar0
1B2D 22        1932            ret
1B2E           1933            
1B2E           1934   ToneG5:
1B2E C000      1935            push ar0
1B30 78C8      1935            mov r0, #high(G5_reload)
1B32 1200FA    1935            lcall ?ToneSetH
1B35 D000      1935            pop ar0
1B37 C000      1936            push ar0
1B39 78E6      1936            mov r0, #low(G5_reload)
1B3B 1200FF    1936            lcall ?ToneSetL
1B3E D000      1936            pop ar0
1B40 22        1937            ret
1B41           1938            
1B41           1939   ToneA5:
1B41 C000      1940            push ar0
1B43 78CE      1940            mov r0, #high(A5_reload)
1B45 1200FA    1940            lcall ?ToneSetH
1B48 D000      1940            pop ar0
1B4A C000      1941            push ar0
1B4C 78E9      1941            mov r0, #low(A5_reload)
1B4E 1200FF    1941            lcall ?ToneSetL
1B51 D000      1941            pop ar0
1B53 22        1942            ret
1B54           1943            
1B54           1944   ToneB5:
1B54 C000      1945            push ar0
1B56 78D4      1945            mov r0, #high(B5_reload)
1B58 1200FA    1945            lcall ?ToneSetH
1B5B D000      1945            pop ar0
1B5D C000      1946            push ar0
1B5F 7847      1946            mov r0, #low(B5_reload)
1B61 1200FF    1946            lcall ?ToneSetL
1B64 D000      1946            pop ar0
1B66 22        1947            ret
1B67           1948   
1B67           1949   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1B67           1950   ToneG4S:                           
1B67 C000      1951            push ar0
1B69 7897      1951            mov r0, #high(G4S_reload)
1B6B 1200FA    1951            lcall ?ToneSetH
1B6E D000      1951            pop ar0
1B70 C000      1952            push ar0
1B72 78E8      1952            mov r0, #low(G4S_reload)
1B74 1200FF    1952            lcall ?ToneSetL
1B77 D000      1952            pop ar0
1B79 22        1953            ret
1B7A           1954            
1B7A           1955   ToneG4F:
1B7A C000      1956            push ar0
1B7C 788B      1956            mov r0, #high(G4F_reload)
1B7E 1200FA    1956            lcall ?ToneSetH
1B81 D000      1956            pop ar0
1B83 C000      1957            push ar0
1B85 783F      1957            mov r0, #low(G4F_reload)
1B87 1200FF    1957            lcall ?ToneSetL
1B8A D000      1957            pop ar0
1B8C 22        1958            ret
1B8D           1959            
1B8D           1960   ToneA4F:
1B8D C000      1961            push ar0
1B8F 7897      1961            mov r0, #high(A4F_reload)
1B91 1200FA    1961            lcall ?ToneSetH
1B94 D000      1961            pop ar0
1B96 C000      1962            push ar0
1B98 78E8      1962            mov r0, #low(A4F_reload)
1B9A 1200FF    1962            lcall ?ToneSetL
1B9D D000      1962            pop ar0
1B9F 22        1963            ret
1BA0           1964   
1BA0           1965   ToneB4F:
1BA0 C000      1966            push ar0
1BA2 78A3      1966            mov r0, #high(B4F_reload)
1BA4 1200FA    1966            lcall ?ToneSetH
1BA7 D000      1966            pop ar0
1BA9 C000      1967            push ar0
1BAB 784C      1967            mov r0, #low(B4F_reload)
1BAD 1200FF    1967            lcall ?ToneSetL
1BB0 D000      1967            pop ar0
1BB2 22        1968            ret
1BB3           1969            
1BB3           1970   ToneC5S:
1BB3 C000      1971            push ar0
1BB5 78B2      1971            mov r0, #high(C5S_reload)
1BB7 1200FA    1971            lcall ?ToneSetH
1BBA D000      1971            pop ar0
1BBC C000      1972            push ar0
1BBE 7806      1972            mov r0, #low(C5S_reload)
1BC0 1200FF    1972            lcall ?ToneSetL
1BC3 D000      1972            pop ar0
1BC5 22        1973            ret
1BC6           1974   
1BC6           1975   ToneD5F:
1BC6 C000      1976            push ar0
1BC8 78B2      1976            mov r0, #high(D5F_reload)
1BCA 1200FA    1976            lcall ?ToneSetH
1BCD D000      1976            pop ar0
1BCF C000      1977            push ar0
1BD1 7806      1977            mov r0, #low(D5F_reload)
1BD3 1200FF    1977            lcall ?ToneSetL
1BD6 D000      1977            pop ar0
1BD8 22        1978            ret
1BD9           1979            
1BD9           1980   ToneE5F:
1BD9 C000      1981            push ar0
1BDB 78BA      1981            mov r0, #high(E5F_reload)
1BDD 1200FA    1981            lcall ?ToneSetH
1BE0 D000      1981            pop ar0
1BE2 C000      1982            push ar0
1BE4 788C      1982            mov r0, #low(E5F_reload)
1BE6 1200FF    1982            lcall ?ToneSetL
1BE9 D000      1982            pop ar0
1BEB 22        1983            ret
1BEC           1984   
1BEC           1985   ToneReset:
1BEC C000      1986            push ar0
1BEE 78EA      1986            mov r0, #high(TIMER0_RELOAD)
1BF0 1200FA    1986            lcall ?ToneSetH
1BF3 D000      1986            pop ar0
1BF5 C000      1987            push ar0
1BF7 78E8      1987            mov r0, #low(TIMER0_RELOAD)
1BF9 1200FF    1987            lcall ?ToneSetL
1BFC D000      1987            pop ar0
1BFE 22        1988            ret
1BFF           1989   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1BFF           1990   TonePlayer0: ;Mario's death
1BFF 121AA9    1991            lcall ToneG4
1C02 121F29    1992            lcall TonePlayQuarterSec
1C05           1993   
1C05 121AF5    1994            lcall ToneD5
1C08 121F29    1995            lcall TonePlayQuarterSec
1C0B           1996            
1C0B C002      1997            push AR2
1C0D 7A28      1997            mov R2, #40
1C0F 120039    1997            lcall ?Wait_Milli_Seconds
1C12 D002      1997            pop AR2
1C14           1998            
1C14 121AF5    1999            lcall ToneD5
1C17 121F29    2000            lcall TonePlayQuarterSec
1C1A           2001            
1C1A 121AF5    2002            lcall ToneD5
1C1D 121F29    2003            lcall TonePlayQuarterSec
1C20           2004            
1C20 121AE2    2005            lcall ToneC5
1C23 121F29    2006            lcall TonePlayQuarterSec
1C26           2007   
1C26 121ACF    2008            lcall ToneB4
1C29 121F40    2009            lcall TonePlayThreeEighthSec
1C2C           2010            
1C2C 121AA9    2011            lcall ToneG4
1C2F 121F29    2012            lcall TonePlayQuarterSec
1C32           2013            
1C32 121A83    2014            lcall ToneE4
1C35 121F29    2015            lcall TonePlayQuarterSec        
1C38           2016            
1C38 C002      2017            push AR2
1C3A 7A50      2017            mov R2, #80
1C3C 120039    2017            lcall ?Wait_Milli_Seconds
1C3F D002      2017            pop AR2
1C41           2018   
1C41 121A83    2019            lcall ToneE4
1C44 121F29    2020            lcall TonePlayQuarterSec
1C47           2021   
1C47 121A5D    2022            lcall ToneC4
1C4A 121F29    2023            lcall TonePlayQuarterSec
1C4D           2024            
1C4D 22        2025            ret
1C4E           2026            
1C4E           2027   TonePlayer1: ;Never Gonna Give You Up
1C4E 121B8D    2028            lcall ToneA4F              ;Nev
1C51 121F12    2029            lcall TonePlayEighthSec
1C54           2030            
1C54 121BA0    2031            lcall ToneB4F               ;er
1C57 121F12    2032            lcall TonePlayEighthSec
1C5A           2033            
1C5A 121BC6    2034            lcall ToneD5F               ;gon
1C5D 121F12    2035            lcall TonePlayEighthSec
1C60           2036            
1C60 121BA0    2037            lcall ToneB4F                 ;na
1C63 121F12    2038            lcall TonePlayEighthSec
1C66           2039            
1C66 121B1B    2040            lcall ToneF5                     ;give
1C69 121F40    2041            lcall TonePlayThreeEighthSec
1C6C           2042            
1C6C 121B1B    2043            lcall ToneF5                    ;you
1C6F 121F40    2044            lcall TonePlayThreeEighthSec
1C72           2045            
1C72 121BD9    2046            lcall ToneE5F                   ;up
1C75 121F40    2047            lcall TonePlayThreeEighthSec   
1C78           2048            
1C78 C002      2049            push AR2
1C7A 7A50      2049            mov R2, #80
1C7C 120039    2049            lcall ?Wait_Milli_Seconds
1C7F D002      2049            pop AR2
1C81           2050            
1C81 121B8D    2051            lcall ToneA4F                ;Nev
1C84 121F12    2052            lcall TonePlayEighthSec
1C87           2053            
1C87 121BA0    2054            lcall ToneB4F                 ;er
1C8A 121F12    2055            lcall TonePlayEighthSec
1C8D           2056            
1C8D 121AE2    2057            lcall ToneC5                   ;gon
1C90 121F12    2058            lcall TonePlayEighthSec
1C93           2059            
1C93 121B8D    2060            lcall ToneA4F                  ;na
1C96 121F12    2061            lcall TonePlayEighthSec
1C99           2062            
1C99 121BD9    2063            lcall ToneE5F                    ;let
1C9C 121F40    2064            lcall TonePlayThreeEighthSec
1C9F           2065            
1C9F 121BD9    2066            lcall ToneE5F                   ;you
1CA2 121F40    2067            lcall TonePlayThreeEighthSec
1CA5           2068            
1CA5 121BC6    2069            lcall ToneD5F                  ;down
1CA8 121F40    2070            lcall TonePlayThreeEighthSec
1CAB           2071            
1CAB C002      2072            push AR2
1CAD 7A50      2072            mov R2, #80
1CAF 120039    2072            lcall ?Wait_Milli_Seconds
1CB2 D002      2072            pop AR2
1CB4           2073                    
1CB4 121B8D    2074            lcall ToneA4F              ;Nev
1CB7 121F12    2075            lcall TonePlayEighthSec
1CBA           2076            
1CBA 121BA0    2077            lcall ToneB4F                ;er
1CBD 121F12    2078            lcall TonePlayEighthSec
1CC0           2079            
1CC0 121BC6    2080            lcall ToneD5F                   ;gon
1CC3 121F12    2081            lcall TonePlayEighthSec
1CC6           2082            
1CC6 121BA0    2083            lcall ToneB4F                   ;na
1CC9 121F12    2084            lcall TonePlayEighthSec
1CCC           2085   
1CCC 121BC6    2086            lcall ToneD5F                 ;run
1CCF 121F29    2087            lcall TonePlayQuarterSec
1CD2           2088            
1CD2 121BD9    2089            lcall ToneE5F                  ;a
1CD5 121F40    2090            lcall TonePlayThreeEighthSec
1CD8           2091            
1CD8 121AE2    2092            lcall ToneC5                   ;round
1CDB 121F40    2093            lcall TonePlayThreeEighthSec
1CDE           2094            
1CDE           2095            ;lcall ToneB4F
1CDE           2096            ;lcall TonePlayEighthSec
1CDE           2097            
1CDE 121B8D    2098            lcall ToneA4F                ;and
1CE1 121F29    2099            lcall TonePlayQuarterSec        
1CE4           2100            
1CE4 121B8D    2101            lcall ToneA4F                ;de
1CE7 121F12    2102            lcall TonePlayEighthSec
1CEA           2103            
1CEA 121BD9    2104            lcall ToneE5F                  ;sert
1CED 121F40    2105            lcall TonePlayThreeEighthSec
1CF0           2106            
1CF0 121BC6    2107            lcall ToneD5F             ;you
1CF3 121F40    2108            lcall TonePlayThreeEighthSec
1CF6           2109            
1CF6 22        2110            ret
1CF7           2111   
1CF7           2112   TonePlayer2: ;Mario
1CF7 121B08    2113            lcall ToneE5
1CFA 121F29    2114            lcall TonePlayQuarterSec
1CFD           2115            
1CFD 121B08    2116            lcall ToneE5
1D00 121F29    2117            lcall TonePlayQuarterSec
1D03           2118            
1D03 C002      2119            push AR2
1D05 7A50      2119            mov R2, #80
1D07 120039    2119            lcall ?Wait_Milli_Seconds
1D0A D002      2119            pop AR2
1D0C           2120                    
1D0C 121B08    2121            lcall ToneE5
1D0F 121F40    2122            lcall TonePlayThreeEighthSec
1D12           2123   
1D12 C002      2124            push AR2
1D14 7A50      2124            mov R2, #80
1D16 120039    2124            lcall ?Wait_Milli_Seconds
1D19 D002      2124            pop AR2
1D1B           2125                    
1D1B 121AE2    2126            lcall ToneC5
1D1E 121F29    2127            lcall TonePlayQuarterSec
1D21           2128            
1D21 121B08    2129            lcall ToneE5
1D24 121F29    2130            lcall TonePlayQuarterSec
1D27           2131            
1D27 C002      2132            push AR2
1D29 7A50      2132            mov R2, #80
1D2B 120039    2132            lcall ?Wait_Milli_Seconds
1D2E D002      2132            pop AR2
1D30           2133            
1D30 121B2E    2134            lcall ToneG5
1D33 121F40    2135            lcall TonePlayThreeEighthSec
1D36           2136            
1D36 C002      2137            push AR2
1D38 7A50      2137            mov R2, #80
1D3A 120039    2137            lcall ?Wait_Milli_Seconds
1D3D D002      2137            pop AR2
1D3F C002      2138            push AR2
1D41 7A50      2138            mov R2, #80
1D43 120039    2138            lcall ?Wait_Milli_Seconds
1D46 D002      2138            pop AR2
1D48 C002      2139            push AR2
1D4A 7A50      2139            mov R2, #80
1D4C 120039    2139            lcall ?Wait_Milli_Seconds
1D4F D002      2139            pop AR2
1D51 C002      2140            push AR2
1D53 7A50      2140            mov R2, #80
1D55 120039    2140            lcall ?Wait_Milli_Seconds
1D58 D002      2140            pop AR2
1D5A           2141            
1D5A 121AA9    2142            lcall ToneG4
1D5D 121F57    2143            lcall TonePlayHalfSec
1D60           2144            
1D60 22        2145            ret
1D61           2146   
1D61           2147   TonePlayer3: ;Star Wars
1D61 121A5D    2148            lcall ToneC4
1D64 121F57    2149            lcall TonePlayHalfSec
1D67           2150            
1D67 121AA9    2151            lcall ToneG4
1D6A 121F57    2152            lcall TonePlayHalfSec
1D6D           2153            
1D6D 121A96    2154            lcall ToneF4
1D70 121F29    2155            lcall TonePlayQuarterSec
1D73           2156            
1D73 121A83    2157            lcall ToneE4
1D76 121F40    2158            lcall TonePlayThreeEighthSec
1D79           2159            
1D79 121A70    2160            lcall ToneD4
1D7C 121F40    2161            lcall TonePlayThreeEighthSec
1D7F           2162            
1D7F 121AE2    2163            lcall ToneC5
1D82 121F57    2164            lcall TonePlayHalfSec
1D85           2165                    
1D85 121AA9    2166            lcall ToneG4
1D88 121F29    2167            lcall TonePlayQuarterSec
1D8B           2168            
1D8B C002      2169            push AR2
1D8D 7A50      2169            mov R2, #80
1D8F 120039    2169            lcall ?Wait_Milli_Seconds
1D92 D002      2169            pop AR2
1D94           2170                    
1D94 121A96    2171            lcall ToneF4
1D97 121F29    2172            lcall TonePlayQuarterSec
1D9A           2173            
1D9A 121A83    2174            lcall ToneE4
1D9D 121F29    2175            lcall TonePlayQuarterSec
1DA0           2176            
1DA0 121A70    2177            lcall ToneD4
1DA3 121F29    2178            lcall TonePlayQuarterSec
1DA6           2179            
1DA6 121AE2    2180            lcall ToneC5
1DA9 121F57    2181            lcall TonePlayHalfSec
1DAC           2182            
1DAC 121AA9    2183            lcall ToneG4
1DAF 121F29    2184            lcall TonePlayQuarterSec
1DB2           2185            
1DB2 C002      2186            push AR2
1DB4 7A50      2186            mov R2, #80
1DB6 120039    2186            lcall ?Wait_Milli_Seconds
1DB9 D002      2186            pop AR2
1DBB           2187                    
1DBB 121A96    2188            lcall ToneF4
1DBE 121F29    2189            lcall TonePlayQuarterSec
1DC1           2190            
1DC1 121A83    2191            lcall ToneE4
1DC4 121F29    2192            lcall TonePlayQuarterSec
1DC7           2193            
1DC7 121A96    2194            lcall ToneF4
1DCA 121F29    2195            lcall TonePlayQuarterSec
1DCD           2196            
1DCD 121A70    2197            lcall ToneD4
1DD0 121F57    2198            lcall TonePlayHalfSec
1DD3           2199            
1DD3 22        2200            ret
1DD4           2201   
1DD4           2202   
1DD4           2203   TonePlayer4: ;Megaman
1DD4 121AE2    2204            lcall ToneC5
1DD7 121F29    2205            lcall TonePlayQuarterSec
1DDA           2206            
1DDA 121AE2    2207            lcall ToneC5
1DDD 121F12    2208            lcall TonePlayEighthSec
1DE0           2209   
1DE0 121AE2    2210            lcall ToneC5
1DE3 121F12    2211            lcall TonePlayEighthSec
1DE6           2212   
1DE6 121AE2    2213            lcall ToneC5
1DE9 121F12    2214            lcall TonePlayEighthSec
1DEC           2215   
1DEC 121AF5    2216            lcall ToneD5
1DEF 121F40    2217            lcall TonePlayThreeEighthSec
1DF2           2218   
1DF2 121ACF    2219            lcall ToneB4
1DF5 121F6E    2220            lcall TonePlayOneSec
1DF8           2221            
1DF8 C002      2222            push AR2
1DFA 7A28      2222            mov R2, #40
1DFC 120039    2222            lcall ?Wait_Milli_Seconds
1DFF D002      2222            pop AR2
1E01           2223            
1E01 121AA9    2224            lcall ToneG4
1E04 121F12    2225            lcall TonePlayEighthSec
1E07           2226            
1E07 121ABC    2227            lcall ToneA4
1E0A 121F29    2228            lcall TonePlayQuarterSec
1E0D           2229            
1E0D 121ABC    2230            lcall ToneA4
1E10 121F12    2231            lcall TonePlayEighthSec
1E13           2232            
1E13 121ABC    2233            lcall ToneA4
1E16 121F12    2234            lcall TonePlayEighthSec
1E19           2235            
1E19 121ABC    2236            lcall ToneA4
1E1C 121F12    2237            lcall TonePlayEighthSec
1E1F           2238            
1E1F 121ACF    2239            lcall ToneB4
1E22 121F40    2240            lcall TonePlayThreeEighthSec
1E25           2241            
1E25 121AA9    2242            lcall ToneG4
1E28 121F12    2243            lcall TonePlayEighthSec
1E2B           2244            
1E2B C002      2245            push AR2
1E2D 7A28      2245            mov R2, #40
1E2F 120039    2245            lcall ?Wait_Milli_Seconds
1E32 D002      2245            pop AR2
1E34           2246            
1E34 121ABC    2247            lcall ToneA4
1E37 121F12    2248            lcall TonePlayEighthSec
1E3A           2249            
1E3A 121ACF    2250            lcall ToneB4
1E3D 121F6E    2251            lcall TonePlayOneSec
1E40           2252            
1E40 22        2253            ret
1E41           2254   
1E41           2255   TonePlayer5: ;Tetris
1E41 121B08    2256            lcall ToneE5
1E44 121F29    2257            lcall TonePlayQuarterSec
1E47           2258   
1E47 121ACF    2259            lcall ToneB4
1E4A 121F12    2260            lcall TonePlayEighthSec
1E4D           2261            
1E4D 121AE2    2262            lcall ToneC5
1E50 121F12    2263            lcall TonePlayEighthSec
1E53           2264            
1E53 121AF5    2265            lcall ToneD5
1E56 121F29    2266            lcall TonePlayQuarterSec
1E59           2267   
1E59 121AE2    2268            lcall ToneC5
1E5C 121F12    2269            lcall TonePlayEighthSec
1E5F           2270   
1E5F 121ACF    2271            lcall ToneB4
1E62 121F12    2272            lcall TonePlayEighthSec
1E65           2273            
1E65 121ABC    2274            lcall ToneA4
1E68 121F29    2275            lcall TonePlayQuarterSec
1E6B           2276   
1E6B 121ABC    2277            lcall ToneA4
1E6E 121F12    2278            lcall TonePlayEighthSec
1E71           2279            
1E71 121AE2    2280            lcall ToneC5
1E74 121F12    2281            lcall TonePlayEighthSec
1E77           2282            
1E77 121B08    2283            lcall ToneE5
1E7A 121F29    2284            lcall TonePlayQuarterSec
1E7D           2285            
1E7D 121AF5    2286            lcall ToneD5
1E80 121F12    2287            lcall TonePlayEighthSec         
1E83           2288   
1E83 121AE2    2289            lcall ToneC5
1E86 121F12    2290            lcall TonePlayEighthSec         
1E89           2291   
1E89 121ACF    2292            lcall ToneB4
1E8C 121F40    2293            lcall TonePlayThreeEighthSec
1E8F           2294            
1E8F C002      2295            push AR2
1E91 7A50      2295            mov R2, #80
1E93 120039    2295            lcall ?Wait_Milli_Seconds
1E96 D002      2295            pop AR2
1E98           2296            
1E98 121AE2    2297            lcall ToneC5
1E9B 121F12    2298            lcall TonePlayEighthSec         
1E9E           2299            
1E9E 121AF5    2300            lcall ToneD5
1EA1 121F29    2301            lcall TonePlayQuarterSec        
1EA4           2302            
1EA4 121B08    2303            lcall ToneE5
1EA7 121F29    2304            lcall TonePlayQuarterSec
1EAA           2305            
1EAA 121AE2    2306            lcall ToneC5
1EAD 121F29    2307            lcall TonePlayQuarterSec
1EB0           2308            
1EB0 121ABC    2309            lcall ToneA4
1EB3 121F29    2310            lcall TonePlayQuarterSec
1EB6           2311            
1EB6 121ABC    2312            lcall ToneA4
1EB9 121F57    2313            lcall TonePlayHalfSec
1EBC           2314            
1EBC 22        2315            ret
1EBD           2316            
1EBD           2317   TonePlayer6: ;Harry Potter
1EBD 121A83    2318            lcall ToneE4
1EC0 121F29    2319            lcall TonePlayQuarterSec
1EC3           2320   
1EC3 121ABC    2321            lcall ToneA4
1EC6 121F40    2322            lcall TonePlayThreeEighthSec
1EC9           2323   
1EC9 121AE2    2324            lcall ToneC5
1ECC 121F12    2325            lcall TonePlayEighthSec
1ECF           2326   
1ECF 121ACF    2327            lcall ToneB4
1ED2 121F29    2328            lcall TonePlayQuarterSec
1ED5           2329            
1ED5 121ABC    2330            lcall ToneA4
1ED8 121F57    2331            lcall TonePlayHalfSec
1EDB           2332            
1EDB 121B08    2333            lcall ToneE5
1EDE 121F29    2334            lcall TonePlayQuarterSec
1EE1           2335            
1EE1 121AF5    2336            lcall ToneD5
1EE4 121F6E    2337            lcall TonePlayOneSec
1EE7           2338   
1EE7 121ACF    2339            lcall ToneB4
1EEA 121F6E    2340            lcall TonePlayOneSec
1EED           2341   
1EED 121ABC    2342            lcall ToneA4
1EF0 121F40    2343            lcall TonePlayThreeEighthSec
1EF3           2344   
1EF3 121AE2    2345            lcall ToneC5
1EF6 121F12    2346            lcall TonePlayEighthSec
1EF9           2347   
1EF9 121ACF    2348            lcall ToneB4
1EFC 121F29    2349            lcall TonePlayQuarterSec
1EFF           2350            
1EFF 121B67    2351            lcall ToneG4S
1F02 121F57    2352            lcall TonePlayHalfSec
1F05           2353            
1F05 121BA0    2354            lcall ToneB4F
1F08 121F29    2355            lcall TonePlayQuarterSec
1F0B           2356   
1F0B 121A83    2357            lcall ToneE4
1F0E 121F6E    2358            lcall TonePlayOneSec
1F11           2359            
1F11 22        2360            ret
1F12           2361   
1F12           2362   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1F12           2363   TonePlayEighthSec:
1F12 D28C      2364            setb TR0
1F14 C002      2365            push AR2
1F16 7A01      2365            mov R2, #0x1
1F18 120104    2365            lcall ?Delay_PercentSec
1F1B D002      2365            pop AR2   ; 1*(1/8) = 1/8 sec
1F1D C28C      2366            clr TR0
1F1F C002      2367            push AR2
1F21 7A50      2367            mov R2, #80
1F23 120039    2367            lcall ?Wait_Milli_Seconds
1F26 D002      2367            pop AR2
1F28 22        2368            ret
1F29           2369   
1F29           2370   TonePlayQuarterSec:
1F29 D28C      2371            setb TR0
1F2B C002      2372            push AR2
1F2D 7A02      2372            mov R2, #0x2
1F2F 120104    2372            lcall ?Delay_PercentSec
1F32 D002      2372            pop AR2   ; 2*(1/8) = 1/4 sec
1F34 C28C      2373            clr TR0
1F36 C002      2374            push AR2
1F38 7A50      2374            mov R2, #80
1F3A 120039    2374            lcall ?Wait_Milli_Seconds
1F3D D002      2374            pop AR2
1F3F 22        2375            ret
1F40           2376   
1F40           2377   TonePlayThreeEighthSec:
1F40 D28C      2378            setb TR0
1F42 C002      2379            push AR2
1F44 7A03      2379            mov R2, #0x3
1F46 120104    2379            lcall ?Delay_PercentSec
1F49 D002      2379            pop AR2   ; 3*(1/8) = 3/8 sec
1F4B C28C      2380            clr TR0
1F4D C002      2381            push AR2
1F4F 7A50      2381            mov R2, #80
1F51 120039    2381            lcall ?Wait_Milli_Seconds
1F54 D002      2381            pop AR2
1F56 22        2382            ret
1F57           2383   
1F57           2384   TonePlayHalfSec:
1F57 D28C      2385            setb TR0
1F59 C002      2386            push AR2
1F5B 7A04      2386            mov R2, #0x4
1F5D 120104    2386            lcall ?Delay_PercentSec
1F60 D002      2386            pop AR2   ; 4*(1/8) = 1/2 sec
1F62 C28C      2387            clr TR0
1F64 C002      2388            push AR2
1F66 7A50      2388            mov R2, #80
1F68 120039    2388            lcall ?Wait_Milli_Seconds
1F6B D002      2388            pop AR2
1F6D 22        2389            ret
1F6E           2390   
1F6E           2391   TonePlayOneSec:
1F6E D28C      2392            setb TR0
1F70 C002      2393            push AR2
1F72 7A08      2393            mov R2, #0x8
1F74 120104    2393            lcall ?Delay_PercentSec
1F77 D002      2393            pop AR2   ; 8*(1/8) = 1 sec
1F79 C28C      2394            clr TR0
1F7B C002      2395            push AR2
1F7D 7A50      2395            mov R2, #80
1F7F 120039    2395            lcall ?Wait_Milli_Seconds
1F82 D002      2395            pop AR2
1F84 22        2396            ret
1F85           2397   
1F85           2398   TonePlayOneandHalfSec:
1F85 D28C      2399            setb TR0
1F87 C002      2400            push AR2
1F89 7A12      2400            mov R2, #0x12
1F8B 120104    2400            lcall ?Delay_PercentSec
1F8E D002      2400            pop AR2   ; 12*(1/8) = 1.5 sec
1F90 C28C      2401            clr TR0
1F92 C002      2402            push AR2
1F94 7A50      2402            mov R2, #80
1F96 120039    2402            lcall ?Wait_Milli_Seconds
1F99 D002      2402            pop AR2
1F9B 22        2403            ret     
1F9C           2404   
1F9C           2405   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1F9C           2406   ;-----------------;
1F9C           2407   ; Password Stuff  ;
1F9C           2408   ;-----------------;
1F9C           2409   WaitHalfSec:
1F9C 7A1D      2410       mov R2, #89/3
1F9E 79FA      2411   L7: mov R1, #250
1FA0 78A6      2412   L6: mov R0, #166
1FA2 D8FE      2413   L5: djnz R0, L5 ; 3 cycles->3*45.21123ns*166=22.51519us
1FA4 D9FA      2414       djnz R1, L6 ; 22.51519us*250=5.629ms
1FA6 DAF6      2415       djnz R2, L7 ; 5.629ms*89=0.5s (approximately)
1FA8 22        2416       ret
1FA9           2417      
1FA9           2418   WaitHalfSec2:
1FA9 7A59      2419       mov R2, #89
1FAB 79FA      2420   UX7: mov R1, #250
1FAD 78A6      2421   UX6: mov R0, #166
1FAF D8FE      2422   UX5: djnz R0, UX5 ; 3 cycles->3*45.21123ns*166=22.51519us
1FB1 D9FA      2423       djnz R1, UX6 ; 22.51519us*250=5.629ms
1FB3 DAF6      2424       djnz R2, UX7 ; 5.629ms*89=0.5s (approximately)
1FB5 22        2425       ret
1FB6           2426      
1FB6           2427   ; Password Code ;
1FB6           2428   Password1:
1FB6 C0E0      2429            push acc
1FB8 7401      2429            mov a, #1
1FBA 14        2429            dec a
1FBB 1200C1    2429            lcall ?Set_Cursor_1 ; Select column and row
1FBE D0E0      2429            pop acc
1FC0 C083      2430            push dph
1FC2 C082      2430            push dpl
1FC4 C0E0      2430            push acc
1FC6 90047A    2430            mov dptr, #PasswordMenu1
1FC9 1200B4    2430            lcall ?Send_Constant_String
1FCC D0E0      2430            pop acc
1FCE D082      2430            pop dpl
1FD0 D083      2430            pop dph
1FD2 C0E0      2431            push acc
1FD4 7401      2431            mov a, #1
1FD6 14        2431            dec a
1FD7 1200BF    2431            lcall ?Set_Cursor_2 ; Select column and row
1FDA D0E0      2431            pop acc
1FDC C083      2432            push dph
1FDE C082      2432            push dpl
1FE0 C0E0      2432            push acc
1FE2 90048A    2432            mov dptr, #PasswordMenu2
1FE5 1200B4    2432            lcall ?Send_Constant_String
1FE8 D0E0      2432            pop acc
1FEA D082      2432            pop dpl
1FEC D083      2432            pop dph
1FEE C0E0      2433            push acc
1FF0 740D      2433            mov a, #13
1FF2 14        2433            dec a
1FF3 1200BF    2433            lcall ?Set_Cursor_2 ; Select column and row
1FF6 D0E0      2433            pop acc
1FF8 C0E0      2434            push acc
1FFA E55A      2434            mov a, letter
1FFC 12007E    2434            lcall ?WriteData
1FFF D0E0      2434            pop acc
2001 C0E0      2435            push acc
2003 740E      2435            mov a, #14
2005 14        2435            dec a
2006 1200BF    2435            lcall ?Set_Cursor_2 ; Select column and row
2009 D0E0      2435            pop acc
200B C0E0      2436            push acc
200D E55B      2436            mov a, letter2
200F 12007E    2436            lcall ?WriteData
2012 D0E0      2436            pop acc
2014 C0E0      2437            push acc
2016 740F      2437            mov a, #15
2018 14        2437            dec a
2019 1200BF    2437            lcall ?Set_Cursor_2 ; Select column and row
201C D0E0      2437            pop acc
201E C0E0      2438            push acc
2020 E55C      2438            mov a, letter3
2022 12007E    2438            lcall ?WriteData
2025 D0E0      2438            pop acc
2027 C0E0      2439            push acc
2029 7410      2439            mov a, #16
202B 14        2439            dec a
202C 1200BF    2439            lcall ?Set_Cursor_2 ; Select column and row
202F D0E0      2439            pop acc
2031 C0E0      2440            push acc
2033 E55D      2440            mov a, letter4
2035 12007E    2440            lcall ?WriteData
2038 D0E0      2440            pop acc
203A           2441   
203A           2442   Password1_2:
203A C002      2443            push AR2
203C 7A32      2443            mov R2, #50
203E 120039    2443            lcall ?Wait_Milli_Seconds
2041 D002      2443            pop AR2
2043 C0E0      2444            push acc
2045 740D      2444            mov a, #13
2047 14        2444            dec a
2048 1200BF    2444            lcall ?Set_Cursor_2 ; Select column and row
204B D0E0      2444            pop acc
204D C0E0      2445            push acc
204F E55A      2445            mov a, letter
2051 12007E    2445            lcall ?WriteData
2054 D0E0      2445            pop acc
2056           2446   Password1_3:
2056 208306    2447            jb BUTTON_1, Password1_4
2059 3083FD    2448            jnb BUTTON_1, $
205C 022136    2449            ljmp Password4_2
205F           2450   Password1_4:
205F 208206    2451            jb BUTTON_2, Password1_5
2062 3082FD    2452            jnb BUTTON_2, $
2065 02208E    2453            ljmp Password2_2
2068           2454   Password1_5:
2068 20870D    2455            jb BUTTON_3, Password1_Check
206B E55A      2456            mov a, letter
206D B45A14    2457            cjne a, #'Z', Password1_6
2070 C3        2458            clr c
2071 E4        2459            clr a
2072 755A41    2460            mov letter, #'A'
2075 02208B    2461            ljmp Password1_7
2078           2462   Password1_Check:
2078 2084DB    2463            jb STARTBUTTON, Password1_3
207B 3084FD    2464            jnb STARTBUTTON, $
207E 02218A    2465            ljmp PasswordCheck
2081 02208B    2466            ljmp Password1_7
2084           2467   Password1_6:
2084 2401      2468            add a, #0x01
2086 F55A      2469            mov letter, a
2088 121F9C    2470            lcall WaitHalfSec
208B           2471   Password1_7:
208B 02203A    2472            ljmp Password1_2
208E           2473   
208E           2474   
208E           2475   Password2_2:
208E C002      2476            push AR2
2090 7A32      2476            mov R2, #50
2092 120039    2476            lcall ?Wait_Milli_Seconds
2095 D002      2476            pop AR2
2097 C0E0      2477            push acc
2099 740E      2477            mov a, #14
209B 14        2477            dec a
209C 1200BF    2477            lcall ?Set_Cursor_2 ; Select column and row
209F D0E0      2477            pop acc
20A1 C0E0      2478            push acc
20A3 E55B      2478            mov a, letter2
20A5 12007E    2478            lcall ?WriteData
20A8 D0E0      2478            pop acc
20AA           2479   Password2_3:
20AA 208306    2480            jb BUTTON_1, Password2_4
20AD 3083FD    2481            jnb BUTTON_1, $
20B0 02203A    2482            ljmp Password1_2
20B3           2483   Password2_4:
20B3 208206    2484            jb BUTTON_2, Password2_5
20B6 3082FD    2485            jnb BUTTON_2, $
20B9 0220E2    2486            ljmp Password3_2
20BC           2487   Password2_5:
20BC 20870D    2488            jb BUTTON_3, Password2_Check
20BF E55B      2489            mov a, letter2
20C1 B45A14    2490            cjne a, #'Z', Password2_6
20C4 C3        2491            clr c
20C5 E4        2492            clr a
20C6 755B41    2493            mov letter2, #'A'
20C9 0220DF    2494            ljmp Password2_7
20CC           2495   Password2_Check:
20CC 2084DB    2496            jb STARTBUTTON, Password2_3
20CF 3084FD    2497            jnb STARTBUTTON, $
20D2 02218A    2498            ljmp PasswordCheck
20D5 0220DF    2499            ljmp Password2_7
20D8           2500   Password2_6:
20D8 2401      2501            add a, #0x01
20DA F55B      2502            mov letter2, a
20DC 121F9C    2503            lcall WaitHalfSec
20DF           2504   Password2_7:
20DF 02208E    2505            ljmp Password2_2
20E2           2506   
20E2           2507   Password3_2:
20E2 C002      2508            push AR2
20E4 7A32      2508            mov R2, #50
20E6 120039    2508            lcall ?Wait_Milli_Seconds
20E9 D002      2508            pop AR2
20EB C0E0      2509            push acc
20ED 740F      2509            mov a, #15
20EF 14        2509            dec a
20F0 1200BF    2509            lcall ?Set_Cursor_2 ; Select column and row
20F3 D0E0      2509            pop acc
20F5 C0E0      2510            push acc
20F7 E55C      2510            mov a, letter3
20F9 12007E    2510            lcall ?WriteData
20FC D0E0      2510            pop acc
20FE           2511   Password3_3:
20FE 208306    2512            jb BUTTON_1, Password3_4
2101 3083FD    2513            jnb BUTTON_1, $
2104 02208E    2514            ljmp Password2_2
2107           2515   Password3_4:
2107 208206    2516            jb BUTTON_2, Password3_5
210A 3082FD    2517            jnb BUTTON_2, $
210D 022136    2518            ljmp Password4_2
2110           2519   Password3_5:
2110 20870D    2520            jb BUTTON_3, Password3_Check
2113 E55C      2521            mov a, letter3
2115 B45A14    2522            cjne a, #'Z', Password3_6
2118 C3        2523            clr c
2119 E4        2524            clr a
211A 755C41    2525            mov letter3, #'A'
211D 022133    2526            ljmp Password3_7
2120           2527   Password3_Check:
2120 2084DB    2528            jb STARTBUTTON, Password3_3
2123 3084FD    2529            jnb STARTBUTTON, $
2126 02218A    2530            ljmp PasswordCheck
2129 022133    2531            ljmp Password3_7        
212C           2532   Password3_6:
212C 2401      2533            add a, #0x01
212E F55C      2534            mov letter3, a
2130 121F9C    2535            lcall WaitHalfSec
2133           2536   Password3_7:
2133 0220E2    2537            ljmp Password3_2
2136           2538   
2136           2539   Password4_2:
2136 C002      2540            push AR2
2138 7A32      2540            mov R2, #50
213A 120039    2540            lcall ?Wait_Milli_Seconds
213D D002      2540            pop AR2
213F C0E0      2541            push acc
2141 7410      2541            mov a, #16
2143 14        2541            dec a
2144 1200BF    2541            lcall ?Set_Cursor_2 ; Select column and row
2147 D0E0      2541            pop acc
2149 C0E0      2542            push acc
214B E55D      2542            mov a, letter4
214D 12007E    2542            lcall ?WriteData
2150 D0E0      2542            pop acc
2152           2543   Password4_3:
2152 208306    2544            jb BUTTON_1, Password4_4
2155 3083FD    2545            jnb BUTTON_1, $
2158 0220E2    2546            ljmp Password3_2
215B           2547   Password4_4:
215B 208206    2548            jb BUTTON_2, Password4_5
215E 3082FD    2549            jnb BUTTON_2, $
2161 02203A    2550            ljmp Password1_2
2164           2551   Password4_5:
2164 20870D    2552            jb BUTTON_3, Password4_Check
2167 E55D      2553            mov a, letter4
2169 B45A14    2554            cjne a, #'Z', Password4_6
216C C3        2555            clr c
216D E4        2556            clr a
216E 755D41    2557            mov letter4, #'A'
2171 022187    2558            ljmp Password4_7
2174           2559   Password4_Check:
2174 2084DB    2560            jb STARTBUTTON, Password4_3
2177 3084FD    2561            jnb STARTBUTTON, $
217A 02218A    2562            ljmp PasswordCheck
217D 022187    2563            ljmp Password4_7        
2180           2564   Password4_6:
2180 2401      2565            add a, #0x01
2182 F55D      2566            mov letter4, a
2184 121F9C    2567            lcall WaitHalfSec
2187           2568   Password4_7:
2187 022136    2569            ljmp Password4_2
218A           2570   
218A           2571   PasswordCheck:
218A E55A      2572            mov a, letter
218C B4465E    2573            cjne a, #'F', PasswordCheckWrong    ;Change letters for true password
218F E55B      2574            mov a, letter2
2191 B44959    2575            cjne a, #'I', PasswordCheckWrong
2194 E55C      2576            mov a, letter3
2196 B45254    2577            cjne a, #'R', PasswordCheckWrong
2199 E55D      2578            mov a, letter4
219B B4454F    2579            cjne a, #'E', PasswordCheckWrong
219E           2580            ;Correct pass entered
219E 7401      2581            mov a, #0x01
21A0 120083    2581            lcall ?WriteCommand
21A3 C002      2582            push AR2
21A5 7A32      2582            mov R2, #50
21A7 120039    2582            lcall ?Wait_Milli_Seconds
21AA D002      2582            pop AR2
21AC C0E0      2583            push acc
21AE 7401      2583            mov a, #1
21B0 14        2583            dec a
21B1 1200C1    2583            lcall ?Set_Cursor_1 ; Select column and row
21B4 D0E0      2583            pop acc
21B6 C083      2584            push dph
21B8 C082      2584            push dpl
21BA C0E0      2584            push acc
21BC 9004B8    2584            mov dptr, #PasswordMenu5
21BF 1200B4    2584            lcall ?Send_Constant_String
21C2 D0E0      2584            pop acc
21C4 D082      2584            pop dpl
21C6 D083      2584            pop dph
21C8 C0E0      2585            push acc
21CA 7401      2585            mov a, #1
21CC 14        2585            dec a
21CD 1200BF    2585            lcall ?Set_Cursor_2 ; Select column and row
21D0 D0E0      2585            pop acc
21D2 C083      2586            push dph
21D4 C082      2586            push dpl
21D6 C0E0      2586            push acc
21D8 9004C9    2586            mov dptr, #PasswordMenu6
21DB 1200B4    2586            lcall ?Send_Constant_String
21DE D0E0      2586            pop acc
21E0 D082      2586            pop dpl
21E2 D083      2586            pop dph
21E4 121FA9    2587            lcall WaitHalfSec2
21E7 121FA9    2588            lcall WaitHalfSec2
21EA 020ADB    2589            ljmp Menu_select1
21ED           2590            
21ED           2591   PasswordCheckWrong:
21ED 7401      2592            mov a, #0x01
21EF 120083    2592            lcall ?WriteCommand
21F2 C002      2593            push AR2
21F4 7A32      2593            mov R2, #50
21F6 120039    2593            lcall ?Wait_Milli_Seconds
21F9 D002      2593            pop AR2
21FB C0E0      2594            push acc
21FD 7401      2594            mov a, #1
21FF 14        2594            dec a
2200 1200C1    2594            lcall ?Set_Cursor_1 ; Select column and row
2203 D0E0      2594            pop acc
2205 C083      2595            push dph
2207 C082      2595            push dpl
2209 C0E0      2595            push acc
220B 90049B    2595            mov dptr, #PasswordMenu3
220E 1200B4    2595            lcall ?Send_Constant_String
2211 D0E0      2595            pop acc
2213 D082      2595            pop dpl
2215 D083      2595            pop dph
2217 C0E0      2596            push acc
2219 7401      2596            mov a, #1
221B 14        2596            dec a
221C 1200BF    2596            lcall ?Set_Cursor_2 ; Select column and row
221F D0E0      2596            pop acc
2221 C083      2597            push dph
2223 C082      2597            push dpl
2225 C0E0      2597            push acc
2227 9004AA    2597            mov dptr, #PasswordMenu4
222A 1200B4    2597            lcall ?Send_Constant_String
222D D0E0      2597            pop acc
222F D082      2597            pop dpl
2231 D083      2597            pop dph
2233 121FA9    2598            lcall WaitHalfSec2
2236 121FA9    2599            lcall WaitHalfSec2
2239 755A41    2600            mov letter, #'A'
223C 755B41    2601       mov letter2, #'A'
223F 755C41    2602       mov letter3, #'A'
2242 755D41    2603       mov letter4, #'A'
2245 021FB6    2604            ljmp Password1
2248           2605   
2248           2606   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2248           2607   ;-----------------------;
2248           2608   ;    Colour Settings    ;
2248           2609   ;-----------------------;
2248           2610   
2248           2611   Set_GraphC1:
2248 7401      2612            mov a, #0x01
224A 120083    2612            lcall ?WriteCommand
224D C002      2613            push AR2
224F 7A32      2613            mov R2, #50
2251 120039    2613            lcall ?Wait_Milli_Seconds
2254 D002      2613            pop AR2
2256 C0E0      2614            push acc
2258 7402      2614            mov a, #2
225A 14        2614            dec a
225B 1200C1    2614            lcall ?Set_Cursor_1 ; Select column and row
225E D0E0      2614            pop acc
2260 C083      2615            push dph
2262 C082      2615            push dpl
2264 C0E0      2615            push acc
2266 9004D8    2615            mov dptr, #SetColour1
2269 1200B4    2615            lcall ?Send_Constant_String
226C D0E0      2615            pop acc
226E D082      2615            pop dpl
2270 D083      2615            pop dph
2272 C0E0      2616            push acc
2274 7402      2616            mov a, #2
2276 14        2616            dec a
2277 1200BF    2616            lcall ?Set_Cursor_2 ; Select column and row
227A D0E0      2616            pop acc
227C C083      2617            push dph
227E C082      2617            push dpl
2280 C0E0      2617            push acc
2282 9004E8    2617            mov dptr, #SetColour2
2285 1200B4    2617            lcall ?Send_Constant_String
2288 D0E0      2617            pop acc
228A D082      2617            pop dpl
228C D083      2617            pop dph
228E           2618       
228E           2619   Set_GraphC1_B:
228E C0E0      2620            push acc
2290 7401      2620            mov a, #1
2292 14        2620            dec a
2293 1200C1    2620            lcall ?Set_Cursor_1 ; Select column and row
2296 D0E0      2620            pop acc
2298 C0E0      2621            push acc
229A 742A      2621            mov a, #0x2A
229C 12007E    2621            lcall ?WriteData
229F D0E0      2621            pop acc
22A1 C0E0      2622            push acc
22A3 7409      2622            mov a, #9
22A5 14        2622            dec a
22A6 1200C1    2622            lcall ?Set_Cursor_1 ; Select column and row
22A9 D0E0      2622            pop acc
22AB C0E0      2623            push acc
22AD 7420      2623            mov a, #0x20
22AF 12007E    2623            lcall ?WriteData
22B2 D0E0      2623            pop acc
22B4 C0E0      2624            push acc
22B6 7401      2624            mov a, #1
22B8 14        2624            dec a
22B9 1200BF    2624            lcall ?Set_Cursor_2 ; Select column and row
22BC D0E0      2624            pop acc
22BE C0E0      2625            push acc
22C0 7420      2625            mov a, #0x20
22C2 12007E    2625            lcall ?WriteData
22C5 D0E0      2625            pop acc
22C7 C0E0      2626            push acc
22C9 7408      2626            mov a, #8
22CB 14        2626            dec a
22CC 1200BF    2626            lcall ?Set_Cursor_2 ; Select column and row
22CF D0E0      2626            pop acc
22D1 C0E0      2627            push acc
22D3 7420      2627            mov a, #0x20
22D5 12007E    2627            lcall ?WriteData
22D8 D0E0      2627            pop acc
22DA           2628   Set_GraphC1_B2:
22DA C002      2629            push AR2
22DC 7A32      2629            mov R2, #50
22DE 120039    2629            lcall ?Wait_Milli_Seconds
22E1 D002      2629            pop AR2
22E3 208306    2630            jb BUTTON_1, Set_GraphC1_B3
22E6 3083FD    2631            jnb BUTTON_1, $
22E9 022307    2632            ljmp Set_GraphC1_G
22EC           2633   Set_GraphC1_B3:
22EC C002      2634            push AR2
22EE 7A32      2634            mov R2, #50
22F0 120039    2634            lcall ?Wait_Milli_Seconds
22F3 D002      2634            pop AR2
22F5 208206    2635            jb BUTTON_2, Set_GraphC1_B4
22F8 3082FD    2636            jnb BUTTON_2, $
22FB 022301    2637            ljmp Set_GraphC1_B5
22FE           2638   Set_GraphC1_B4:
22FE 0222DA    2639            ljmp Set_GraphC1_B2     
2301           2640   Set_GraphC1_B5:
2301 755E01    2641            mov Colour, #0x1
2304 020ADB    2642            ljmp Menu_select1
2307           2643   
2307           2644   Set_GraphC1_G:
2307 C0E0      2645            push acc
2309 7401      2645            mov a, #1
230B 14        2645            dec a
230C 1200C1    2645            lcall ?Set_Cursor_1 ; Select column and row
230F D0E0      2645            pop acc
2311 C0E0      2646            push acc
2313 7420      2646            mov a, #0x20
2315 12007E    2646            lcall ?WriteData
2318 D0E0      2646            pop acc
231A C0E0      2647            push acc
231C 7409      2647            mov a, #9
231E 14        2647            dec a
231F 1200C1    2647            lcall ?Set_Cursor_1 ; Select column and row
2322 D0E0      2647            pop acc
2324 C0E0      2648            push acc
2326 742A      2648            mov a, #0x2A
2328 12007E    2648            lcall ?WriteData
232B D0E0      2648            pop acc
232D C0E0      2649            push acc
232F 7401      2649            mov a, #1
2331 14        2649            dec a
2332 1200BF    2649            lcall ?Set_Cursor_2 ; Select column and row
2335 D0E0      2649            pop acc
2337 C0E0      2650            push acc
2339 7420      2650            mov a, #0x20
233B 12007E    2650            lcall ?WriteData
233E D0E0      2650            pop acc
2340 C0E0      2651            push acc
2342 7408      2651            mov a, #8
2344 14        2651            dec a
2345 1200BF    2651            lcall ?Set_Cursor_2 ; Select column and row
2348 D0E0      2651            pop acc
234A C0E0      2652            push acc
234C 7420      2652            mov a, #0x20
234E 12007E    2652            lcall ?WriteData
2351 D0E0      2652            pop acc
2353           2653   Set_GraphC1_G2:
2353 C002      2654            push AR2
2355 7A32      2654            mov R2, #50
2357 120039    2654            lcall ?Wait_Milli_Seconds
235A D002      2654            pop AR2
235C 208306    2655            jb BUTTON_1, Set_GraphC1_G3
235F 3083FD    2656            jnb BUTTON_1, $
2362 022380    2657            ljmp Set_GraphC1_R
2365           2658   Set_GraphC1_G3:
2365 C002      2659            push AR2
2367 7A32      2659            mov R2, #50
2369 120039    2659            lcall ?Wait_Milli_Seconds
236C D002      2659            pop AR2
236E 208206    2660            jb BUTTON_2, Set_GraphC1_G4
2371 3082FD    2661            jnb BUTTON_2, $
2374 02237A    2662            ljmp Set_GraphC1_G5
2377           2663   Set_GraphC1_G4:
2377 022353    2664            ljmp Set_GraphC1_G2     
237A           2665   Set_GraphC1_G5:
237A 755E02    2666            mov Colour, #0x2
237D 020ADB    2667            ljmp Menu_select1
2380           2668   
2380           2669   Set_GraphC1_R:
2380 C0E0      2670            push acc
2382 7401      2670            mov a, #1
2384 14        2670            dec a
2385 1200C1    2670            lcall ?Set_Cursor_1 ; Select column and row
2388 D0E0      2670            pop acc
238A C0E0      2671            push acc
238C 7420      2671            mov a, #0x20
238E 12007E    2671            lcall ?WriteData
2391 D0E0      2671            pop acc
2393 C0E0      2672            push acc
2395 7409      2672            mov a, #9
2397 14        2672            dec a
2398 1200C1    2672            lcall ?Set_Cursor_1 ; Select column and row
239B D0E0      2672            pop acc
239D C0E0      2673            push acc
239F 7420      2673            mov a, #0x20
23A1 12007E    2673            lcall ?WriteData
23A4 D0E0      2673            pop acc
23A6 C0E0      2674            push acc
23A8 7401      2674            mov a, #1
23AA 14        2674            dec a
23AB 1200BF    2674            lcall ?Set_Cursor_2 ; Select column and row
23AE D0E0      2674            pop acc
23B0 C0E0      2675            push acc
23B2 742A      2675            mov a, #0x2A
23B4 12007E    2675            lcall ?WriteData
23B7 D0E0      2675            pop acc
23B9 C0E0      2676            push acc
23BB 7408      2676            mov a, #8
23BD 14        2676            dec a
23BE 1200BF    2676            lcall ?Set_Cursor_2 ; Select column and row
23C1 D0E0      2676            pop acc
23C3 C0E0      2677            push acc
23C5 7420      2677            mov a, #0x20
23C7 12007E    2677            lcall ?WriteData
23CA D0E0      2677            pop acc
23CC           2678   Set_GraphC1_R2:
23CC C002      2679            push AR2
23CE 7A32      2679            mov R2, #50
23D0 120039    2679            lcall ?Wait_Milli_Seconds
23D3 D002      2679            pop AR2
23D5 208306    2680            jb BUTTON_1, Set_GraphC1_R3
23D8 3083FD    2681            jnb BUTTON_1, $
23DB 0223F9    2682            ljmp Set_GraphC1_Y
23DE           2683   Set_GraphC1_R3:
23DE C002      2684            push AR2
23E0 7A32      2684            mov R2, #50
23E2 120039    2684            lcall ?Wait_Milli_Seconds
23E5 D002      2684            pop AR2
23E7 208206    2685            jb BUTTON_2, Set_GraphC1_R4
23EA 3082FD    2686            jnb BUTTON_2, $
23ED 0223F3    2687            ljmp Set_GraphC1_R5
23F0           2688   Set_GraphC1_R4:
23F0 0223CC    2689            ljmp Set_GraphC1_R2     
23F3           2690   Set_GraphC1_R5:
23F3 755E03    2691            mov Colour, #0x3
23F6 020ADB    2692            ljmp Menu_select1
23F9           2693   
23F9           2694   Set_GraphC1_Y:
23F9 C0E0      2695            push acc
23FB 7401      2695            mov a, #1
23FD 14        2695            dec a
23FE 1200C1    2695            lcall ?Set_Cursor_1 ; Select column and row
2401 D0E0      2695            pop acc
2403 C0E0      2696            push acc
2405 7420      2696            mov a, #0x20
2407 12007E    2696            lcall ?WriteData
240A D0E0      2696            pop acc
240C C0E0      2697            push acc
240E 7409      2697            mov a, #9
2410 14        2697            dec a
2411 1200C1    2697            lcall ?Set_Cursor_1 ; Select column and row
2414 D0E0      2697            pop acc
2416 C0E0      2698            push acc
2418 7420      2698            mov a, #0x20
241A 12007E    2698            lcall ?WriteData
241D D0E0      2698            pop acc
241F C0E0      2699            push acc
2421 7401      2699            mov a, #1
2423 14        2699            dec a
2424 1200BF    2699            lcall ?Set_Cursor_2 ; Select column and row
2427 D0E0      2699            pop acc
2429 C0E0      2700            push acc
242B 7420      2700            mov a, #0x20
242D 12007E    2700            lcall ?WriteData
2430 D0E0      2700            pop acc
2432 C0E0      2701            push acc
2434 7408      2701            mov a, #8
2436 14        2701            dec a
2437 1200BF    2701            lcall ?Set_Cursor_2 ; Select column and row
243A D0E0      2701            pop acc
243C C0E0      2702            push acc
243E 742A      2702            mov a, #0x2A
2440 12007E    2702            lcall ?WriteData
2443 D0E0      2702            pop acc
2445           2703   Set_GraphC1_Y2:
2445 C002      2704            push AR2
2447 7A32      2704            mov R2, #50
2449 120039    2704            lcall ?Wait_Milli_Seconds
244C D002      2704            pop AR2
244E 208306    2705            jb BUTTON_1, Set_GraphC1_Y3
2451 3083FD    2706            jnb BUTTON_1, $
2454 02228E    2707            ljmp Set_GraphC1_B
2457           2708   Set_GraphC1_Y3:
2457 C002      2709            push AR2
2459 7A32      2709            mov R2, #50
245B 120039    2709            lcall ?Wait_Milli_Seconds
245E D002      2709            pop AR2
2460 208206    2710            jb BUTTON_2, Set_GraphC1_Y4
2463 3082FD    2711            jnb BUTTON_2, $
2466 02246C    2712            ljmp Set_GraphC1_Y5
2469           2713   Set_GraphC1_Y4:
2469 022445    2714            ljmp Set_GraphC1_Y2     
246C           2715   Set_GraphC1_Y5:
246C 755E04    2716            mov Colour, #0x4
246F 020ADB    2717            ljmp Menu_select1
2472           2718   
2472           2719   PrintColour:
2472 E55E      2720            mov a, Colour
2474 B40105    2721            cjne a, #0x01, SetGreen1
2477 9004F8    2722            mov DPTR, #Blue
247A 8013      2723            sjmp SendString1
247C           2724   SetGreen1:
247C B40205    2725            cjne a, #0x02, SetRed1
247F 9004FA    2726            mov DPTR, #Green
2482 800B      2727            sjmp SendString1
2484           2728   SetRed1:
2484 B40305    2729            cjne a, #0x03, SetYellow1
2487 9004FC    2730            mov DPTR, #Red
248A 8003      2731            sjmp SendString1
248C           2732   SetYellow1:
248C 9004FE    2733            mov DPTR, #Yellow
248F           2734   SendString1:
248F 1205E7    2735            lcall SendString
2492 22        2736            ret
2493           2737   
2493           2738      
2493           2739   
2493           2740   EN
