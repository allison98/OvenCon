                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RH0            DATA 0xf3
0000             68   RTL1           DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              2   org 0000H
0000 020528       3      ljmp MainProgram
0003              4   
0003              5   CLK  EQU 22118400
0003              6   BAUD equ 115200
0003              7   BRG_VAL equ (0x100-(CLK/(16*BAUD)))
0003              8   REF equ 4.096       ;reference at LM4040
0003              9   
0003             10   ; These ’EQU’ must match the wiring between the microcontroller and ADC
0003             11   CE_ADC EQU P2.0
0003             12   MY_MOSI EQU P2.1
0003             13   MY_MISO EQU P2.2
0003             14   MY_SCLK EQU P2.3
0003             15   BEEPER EQU P3.7 ; placeholder pin for beeper
0003             16   
0003             17   
0003             18   SEGA equ P2.4
0003             19   SEGB equ P2.5
0003             20   SEGC equ P2.6
0003             21   SEGD equ P2.7
0003             22   SEGE equ P4.5
0003             23   SEGF equ P4.4
0003             24   SEGG equ P0.7
0003             25   CA1  equ P0.1
0003             26   CA2  equ P0.2
0003             27   CA3  equ P0.0
0003             28   
0003             29   TIMER0_RELOAD_L DATA 0xf2
0003             30   TIMER1_RELOAD_L DATA 0xf3
0003             31   TIMER0_RELOAD_H DATA 0xf4
0003             32   TIMER1_RELOAD_H DATA 0xf5
0003             33   
0003             34   TIMER0_RATE   EQU 4096             ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0003             35   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0003             36   TIMER2_RATE   EQU 1000     ; 1000Hz, for a timer tick of 1ms
0003             37   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0003             38   
0003             39   C4                        EQU 262
0003             40   D4                EQU 294
0003             41   E4                        EQU 330
0003             42   F4                        EQU 349
0003             43   G4                        EQU 392
0003             44   A4                        EQU 440
0003             45   B4                EQU 494
0003             46   
0003             47   C5                        EQU 523
0003             48   D5                EQU 587
0003             49   E5                        EQU 659
0003             50   F5                        EQU 698
0003             51   G5                        EQU 784
0003             52   A5                        EQU 880
0003             53   B5                EQU 988
0003             54   
0003             55   G4F                       EQU 370
0003             56   A4F                       EQU 415
0003             57   B4F                       EQU 466
0003             58   C5S                       EQU 554
0003             59   D5F                       EQU 554
0003             60   E5F                       EQU 622
0003             61   
0003             62   C4_reload        EQU ((65536-(CLK/(2*C4))))
0003             63   D4_reload   EQU ((65536-(CLK/(2*D4))))
0003             64   E4_reload        EQU ((65536-(CLK/(2*E4))))
0003             65   F4_reload        EQU ((65536-(CLK/(2*F4))))
0003             66   G4_reload        EQU ((65536-(CLK/(2*G4))))
0003             67   A4_reload        EQU ((65536-(CLK/(2*A4))))
0003             68   B4_reload        EQU ((65536-(CLK/(2*B4))))
0003             69   
0003             70   C5_reload        EQU ((65536-(CLK/(2*C5))))
0003             71   D5_reload   EQU ((65536-(CLK/(2*D5))))
0003             72   E5_reload        EQU ((65536-(CLK/(2*E5))))
0003             73   F5_reload        EQU ((65536-(CLK/(2*F5))))
0003             74   G5_reload        EQU ((65536-(CLK/(2*G5))))
0003             75   A5_reload        EQU ((65536-(CLK/(2*A5))))
0003             76   B5_reload        EQU ((65536-(CLK/(2*B5))))
0003             77   
0003             78   G4F_reload       EQU ((65536-(CLK/(2*G4F))))
0003             79   A4F_reload       EQU ((65536-(CLK/(2*A4F))))
0003             80   B4F_reload       EQU ((65536-(CLK/(2*B4F))))
0003             81   C5S_reload       EQU ((65536-(CLK/(2*C5S))))
0003             82   D5F_reload       EQU ((65536-(CLK/(2*D5F))))
0003             83   E5F_reload       EQU ((65536-(CLK/(2*E5F))))
0003             84   
0003             85   
0003             86   ; buttons
0003             87   BOOT_BUTTON   equ P4.5
0003             88   
0003             89   ; External interrupt 0 vector (not used in this code)
0003             90   org 0x0003
0003 32          91            reti
0004             92   
0004             93   ; Timer/Counter 0 overflow interrupt vector
000B             94   org 0x000B
000B 02048C      95            ljmp Timer0_ISR
000E             96   
000E             97   ; External interrupt 1 vector (not used in this code)
0013             98   org 0x0013
0013 32          99            reti
0014            100   
0014            101   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B            102   org 0x001B
001B 32         103            reti
001C            104   
001C            105   ; Serial port receive/transmit interrupt vector (not used in this code)
0023            106   org 0x0023 
0023 32         107            reti
0024            108            
0024            109   ; Timer/Counter 2 overflow interrupt vector
002B            110   org 0x002B
002B 0204A8     111            ljmp Timer2_ISR
002E            112            
0030            113   dseg at 0x30
0030            114   ;future variables
0030            115   x:   ds 4
0034            116   y:   ds 4
0038            117   bcd: ds 5
003D            118   Result: ds 2
003F            119   coldtemp: ds 1
0040            120   hottemp:ds 4
0044            121   soaktemp: ds 1
0045            122   soaktime: ds 1
0046            123   reflowtemp: ds 1
0047            124   reflowtime: ds 1
0048            125   countererror: ds 1
0049            126   temperature:ds 4
004D            127   Count1ms:     ds 2 ; Used to determine when half second has passed 
004F            128   reflowparam: ds 1
0050            129   second: ds 1
0051            130   minute: ds 1
0052            131   temp: ds 1
0053            132   count: ds 1
0054            133   Disp1:  ds 1 
0055            134   Disp2:  ds 1
0056            135   Disp3:  ds 1
0057            136   state:  ds 1
0058            137   
0000            138   BSEG
0000            139   startflag: dbit 1
0001            140   errorflag: dbit 1
0002            141   mf: dbit 1
0003            142   
002E            143   CSEG
002E            144   ; These 'equ' must match the wiring between the microcontroller and the LCD!
002E            145   LCD_RS equ P1.1
002E            146   LCD_RW equ P1.2
002E            147   LCD_E  equ P1.3
002E            148   LCD_D4 equ P3.2
002E            149   LCD_D5 equ P3.3
002E            150   LCD_D6 equ P3.4
002E            151   LCD_D7 equ P3.5
002E            152   
002E            153   StartButton equ P0.3
002E            154   BUTTON_1 equ P0.4
002E            155   BUTTON_2 equ P0.5
002E            156   BUTTON_3 equ P0.6
002E            157   OvenButton equ P1.0
002E            158   
002E            159   
                161   $LIST
011F            163   
                546   $LIST
                165   $LIST
038F            167   
038F            168   
038F            169   ; constant strings  
038F 54656D70   170   Test_msg:  db 'Temp:xx.xx*C', 0
     3A78782E
     78782A43
     00
039C 312E536F   171   MenuMessage1: db '1.Soak Temp', 0   ;used when selecting parameter
     616B2054
     656D7000
03A8 322E536F   172   MenuMessage2: db '2.Soak Time', 0
     616B2054
     696D6500
03B4 332E5265   173   MenuMessage3: db '3.Reflow Temp', 0
     666C6F77
     2054656D
     7000
03C2 342E5265   174   MenuMessage4: db '4.Reflow Time', 0
     666C6F77
     2054696D
     6500
03D0 536F616B   175   MenuSoakTemp: db 'Soak Temp:', 0  ;used when changing parameter
     2054656D
     703A00
03DB 536F616B   176   MenuSoakTime: db 'Soak Time:', 0
     2054696D
     653A00
03E6 5265666C   177   MenuReflowTemp: db 'Reflow Temp:', 0
     6F772054
     656D703A
     00
03F3 5265666C   178   MenuReflowTime: db 'Reflow Time:', 0
     6F772054
     696D653A
     00
0400 5265666C   179   ReflowStateMess: db 'Reflow State    ', 0
     6F772053
     74617465
     20202020
     00
0411 536F616B   180   SoakState: db 'Soak State      ', 0
     20537461
     74652020
     20202020
     00
0422 54656D70   181   TemperatureRise: db 'Temp. Increase  ',0
     2E20496E
     63726561
     73652020
     00
0433 4F76656E   182   CoolingTemp: db 'Oven is cooling.',0
     20697320
     636F6F6C
     696E672E
     00
0444            183   
0444 31537572   184   Tone_Message1:     db '1Surprise 2Mario', 0
     70726973
     6520324D
     6172696F
     00
0455 20202033   185   Tone_Message2:     db '   3Star Wars   ', 0
     53746172
     20576172
     73202020
     00
0466            186   
0466            187   
0466 20202020   188   Blank: db '              ',0
     20202020
     20202020
     202000
0475            189   
0475            190   ;---------------------------------;
0475            191   ; Routine to initialize the ISR   ;
0475            192   ; for timer 0                     ;
0475            193   ;---------------------------------;
0475            194   
0475            195   Timer0_Init:
0475 E589       196            mov a, TMOD
0477 54F0       197            anl a, #0xf0 ; Clear the bits for timer 0
0479 4401       198            orl a, #0x01 ; Configure timer 0 as 16-timer
047B F589       199            mov TMOD, a
047D 758CEA     200            mov TH0, #high(TIMER0_RELOAD)
0480 758AE8     201            mov TL0, #low(TIMER0_RELOAD)
0483            202            ; Set autoreload value
0483 75F4EA     203            mov TIMER0_RELOAD_H, #high(TIMER0_RELOAD)
0486 75F2E8     204            mov TIMER0_RELOAD_L, #low(TIMER0_RELOAD)
0489            205            ; Enable the timer and interrupts
0489 D2A9       206       setb ET0  ; Enable timer 0 interrupt
048B            207       ;setb TR0  ; Start timer 0
048B 22         208            ret
048C            209   
048C            210   ;---------------------------------;
048C            211   ; ISR for timer 0.  Set to execute;
048C            212   ; every 1/4096Hz to generate a    ;
048C            213   ; 2048 Hz square wave at pin P3.7 ;
048C            214   ; Used for the state change beeps ;
048C            215   ;---------------------------------;
048C            216   
048C            217   Timer0_ISR:
048C B2B7       218            cpl BEEPER
048E 32         219            reti
048F            220     
048F            221   ;---------------------------------;
048F            222   ; Routine to initialize the ISR   ;
048F            223   ; for timer 2                     ;
048F            224   ;---------------------------------;
048F            225   Timer2_Init:
048F 75C800     226            mov T2CON, #0 ; Stop timer/counter.  Autoreload mode.
0492 75CDA9     227            mov TH2, #high(TIMER2_RELOAD)
0495 75CC9A     228            mov TL2, #low(TIMER2_RELOAD)
0498            229            ; Set the reload value
0498 75CBA9     230            mov RCAP2H, #high(TIMER2_RELOAD)
049B 75CA9A     231            mov RCAP2L, #low(TIMER2_RELOAD)
049E            232            ; Init One millisecond interrupt counter.  It is a 16-bit variable made with two 8-bit parts
049E E4         233            clr a
049F F54D       234            mov Count1ms+0, a
04A1 F54E       235            mov Count1ms+1, a
04A3            236            ; Enable the timer and interrupts
04A3 D2AD       237       setb ET2  ; Enable timer 2 interrupt
04A5 D2CA       238       setb TR2  ; Enable timer 2
04A7 22         239            ret
04A8            240   
04A8            241   ;---------------------------------;
04A8            242   ; ISR for timer 2                 ;
04A8            243   ;---------------------------------;
04A8            244   Timer2_ISR:
04A8 C2CF       245            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
04AA B2B6       246            cpl P3.6 ; To check the interrupt rate with oscilloscope. It must be precisely a 1 ms pulse.
04AC            247            
04AC            248            ; The two registers used in the ISR must be saved in the stack
04AC C0E0       249            push acc
04AE C0D0       250            push psw
04B0            251            
04B0 D281       252            setb CA1
04B2 D282       253            setb CA2
04B4 D280       254            setb CA3
04B6            255   
04B6 E557       256            mov a, state
04B8            257   state0:
04B8 B4000B     258            cjne a, #0, state1
04BB E554       259            mov a, disp1
04BD 120509     260            lcall load_segments
04C0 C281       261            clr CA1
04C2 0557       262            inc state
04C4 8020       263            sjmp state_done
04C6            264   state1:
04C6 B4010B     265            cjne a, #1, state2
04C9 E555       266            mov a, disp2
04CB 120509     267            lcall load_segments
04CE C282       268            clr CA2
04D0 0557       269            inc state
04D2 8012       270            sjmp state_done
04D4            271   state2:
04D4 B4020C     272            cjne a, #2, state_reset
04D7 E556       273            mov a, disp3
04D9 120509     274            lcall load_segments
04DC C280       275            clr CA3
04DE 755700     276            mov state, #0
04E1 8003       277            sjmp state_done
04E3            278   state_reset:
04E3 755700     279            mov state, #0
04E6            280   state_done:
04E6            281            ; Increment the 16-bit one mili second counter
04E6 054D       282            inc Count1ms+0    ; Increment the low 8-bits first
04E8 E54D       283            mov a, Count1ms+0 ; If the low 8-bits overflow, then increment high 8-bits
04EA 7002       284            jnz Inc_Done
04EC 054E       285            inc Count1ms+1
04EE            286   
04EE            287     Inc_Done:
04EE            288            ; Check if half second has passed
04EE E54D       289            mov a, Count1ms+0
04F0 B4E811     290            cjne a, #low(1000), Timer2_ISR_done ; Warning: this instruction changes the carry flag!
04F3 E54E       291            mov a, Count1ms+1
04F5 B4030C     292            cjne a, #high(1000), Timer2_ISR_done
04F8            293            
04F8            294       ; cpl TR0 ; Enable/disable timer/counter 0. This line creates a beep-silence-beep-silence sound.
04F8            295       ; where is halfsecondflag?                                   
04F8            296                                            ; Reset to zero the milli-seconds counter, it is a 16-bit variable
04F8 E4         297            clr a
04F9 F54D       298            mov Count1ms+0, a
04FB F54E       299            mov Count1ms+1, a
04FD            300     
04FD E550       301            mov a, second   ; Increment the BCD counter
04FF            302   
04FF 2401       303            add a, #0x01 ;THIS IS ADDING SECONDS
0501            304   
0501 D4         305            da a ; Decimal adjust instruction.  Check datasheet for more details!
0502 F550       306            mov second, a
0504            307            
0504            308   Timer2_ISR_done:
0504 D0D0       309            pop psw
0506 D0E0       310            pop acc
0508 32         311            reti
0509            312   
0509            313   load_segments:
0509 A2E0       314            mov c, acc.0
050B 92A4       315            mov SEGA, c
050D A2E1       316            mov c, acc.1
050F 92A5       317            mov SEGB, c
0511 A2E2       318            mov c, acc.2
0513 92A6       319            mov SEGC, c
0515 A2E3       320            mov c, acc.3
0517 92A7       321            mov SEGD, c
0519 A2E4       322            mov c, acc.4
051B 92C5       323            mov SEGE, c
051D A2E5       324            mov c, acc.5
051F 92C4       325            mov SEGF, c
0521 A2E6       326            mov c, acc.6
0523 9287       327            mov SEGG, c
0525 A2E7       328            mov c, acc.7
0527            329            ;mov SEGP, c
0527 22         330            ret  
0528            331            
0528            332            MainProgram:
0528            333   END
